program sncGLInterlockWF

option +r; 


//SYS=SCL3, SUBSYS=-CDL01:, SUBSYS2=-CDL02:, SUBSYS3=-CDL03:
unsigned short allXV7301[24];
assign allXV7301 to {
"SCL31-CDL01:VBx02-XV7301:CloseStat", "SCL31-CDL01:VBx04-XV7301:CloseStat", "SCL31-CDL01:VBx06-XV7301:CloseStat",
"SCL31-CDL01:VBx08-XV7301:CloseStat", "SCL31-CDL01:VBx10-XV7301:CloseStat", "SCL31-CDL01:VBx12-XV7301:CloseStat", 
"SCL31-CDL01:VBx14-XV7301:CloseStat", "SCL31-CDL01:VBx16-XV7301:CloseStat", "SCL31-CDL01:VBx18-XV7301:CloseStat", 
"SCL31-CDL01:VBx20-XV7301:CloseStat", "SCL31-CDL01:VBx22-XV7301:CloseStat",

"IF-CDL07:VBx01-XV7301:CloseStat", "IF-CDL07:VBx02-XV7301:CloseStat", "IF-CDL07:VBx03-XV7301:CloseStat",
"IF-CDL07:VBx04-XV7301:CloseStat", "IF-CDL07:VBx05-XV7301:CloseStat", "IF-CDL07:VBx06-XV7301:CloseStat",
"IF-CDL07:VBx07-XV7301:CloseStat", "IF-CDL07:VBx08-XV7301:CloseStat", "IF-CDL07:VBx09-XV7301:CloseStat",
"IF-CDL07:VBx10-XV7301:CloseStat", "IF-CDL07:VBx11-XV7301:CloseStat", "IF-CDL07:VBx12-XV7301:CloseStat",
"IF-CDL07:VBx13-XV7301:CloseStat"
};


monitor allXV7301;
evflag evXV7301;
sync allXV7301 evXV7301;

unsigned short wfXV7301[24];
assign wfXV7301 to "GInt-All:VBx-XV7301:CloseStat";
monitor wfXV7301;

unsigned short allXV7201[82];
assign allXV7201 to {
"SCL32-CDL02:VBx01-XV7201:CloseStat", "SCL32-CDL02:VBx02-XV7201:CloseStat", "SCL32-CDL02:VBx03-XV7201:CloseStat",
"SCL32-CDL02:VBx04-XV7201:CloseStat", "SCL32-CDL02:VBx05-XV7201:CloseStat", "SCL32-CDL02:VBx06-XV7201:CloseStat",
"SCL32-CDL02:VBx07-XV7201:CloseStat", "SCL32-CDL02:VBx08-XV7201:CloseStat", "SCL32-CDL02:VBx09-XV7201:CloseStat",
"SCL32-CDL02:VBx10-XV7201:CloseStat", "SCL32-CDL02:VBx11-XV7201:CloseStat", "SCL32-CDL02:VBx12-XV7201:CloseStat",
"SCL32-CDL02:VBx13-XV7201:CloseStat", 
"SCL32-CDL03:VBx01-XV7201:CloseStat", "SCL32-CDL03:VBx02-XV7201:CloseStat", "SCL32-CDL03:VBx03-XV7201:CloseStat", 
"SCL32-CDL03:VBx04-XV7201:CloseStat", "SCL32-CDL03:VBx05-XV7201:CloseStat", "SCL32-CDL03:VBx06-XV7201:CloseStat", 
"SCL32-CDL03:VBx07-XV7201:CloseStat", "SCL32-CDL03:VBx08-XV7201:CloseStat", "SCL32-CDL03:VBx09-XV7201:CloseStat", 
"SCL32-CDL03:VBx10-XV7201:CloseStat", "SCL32-CDL03:VBx11-XV7201:CloseStat", "SCL32-CDL03:VBx12-XV7201:CloseStat", 
"SCL32-CDL03:VBx13-XV7201:CloseStat", "SCL32-CDL03:VBx14-XV7201:CloseStat", "SCL32-CDL03:VBx15-XV7201:CloseStat", 
"SCL32-CDL03:VBx16-XV7201:CloseStat", "SCL32-CDL03:VBx17-XV7201:CloseStat", "SCL32-CDL03:VBx18-XV7201:CloseStat", 
"SCL32-CDL03:VBx19-XV7201:CloseStat",
"P2DT-CDL04:VBx01-XV7201:CloseStat", "P2DT-CDL04:VBx02-XV7201:CloseStat",
"SCL21-CDL05:VBx01-XV7201:CloseStat", "SCL21-CDL05:VBx02-XV7201:CloseStat", "SCL21-CDL05:VBx03-XV7201:CloseStat",
"SCL21-CDL05:VBx04-XV7201:CloseStat", "SCL21-CDL05:VBx05-XV7201:CloseStat", "SCL21-CDL05:VBx06-XV7201:CloseStat",
"SCL21-CDL05:VBx07-XV7201:CloseStat", "SCL21-CDL05:VBx08-XV7201:CloseStat", "SCL21-CDL05:VBx09-XV7201:CloseStat",
"SCL21-CDL05:VBx10-XV7201:CloseStat", "SCL21-CDL05:VBx11-XV7201:CloseStat", "SCL21-CDL05:VBx12-XV7201:CloseStat",
"SCL21-CDL05:VBx13-XV7201:CloseStat", "SCL21-CDL05:VBx14-XV7201:CloseStat", "SCL21-CDL05:VBx15-XV7201:CloseStat",
"SCL21-CDL05:VBx16-XV7201:CloseStat", "SCL21-CDL05:VBx17-XV7201:CloseStat", "SCL21-CDL05:VBx18-XV7201:CloseStat",
"SCL21-CDL05:VBx19-XV7201:CloseStat", "SCL21-CDL05:VBx20-XV7201:CloseStat", "SCL21-CDL05:VBx21-XV7201:CloseStat",
"SCL21-CDL05:VBx22-XV7201:CloseStat", "SCL21-CDL05:VBx23-XV7201:CloseStat",
"SCL22-CDL06:VBx01-XV7201:CloseStat", "SCL22-CDL06:VBx02-XV7201:CloseStat", "SCL22-CDL06:VBx03-XV7201:CloseStat",
"SCL22-CDL06:VBx04-XV7201:CloseStat", "SCL22-CDL06:VBx05-XV7201:CloseStat", "SCL22-CDL06:VBx06-XV7201:CloseStat",
"SCL22-CDL06:VBx07-XV7201:CloseStat", "SCL22-CDL06:VBx08-XV7201:CloseStat", "SCL22-CDL06:VBx09-XV7201:CloseStat",
"SCL22-CDL06:VBx10-XV7201:CloseStat", "SCL22-CDL06:VBx11-XV7201:CloseStat", "SCL22-CDL06:VBx12-XV7201:CloseStat",
"SCL22-CDL06:VBx13-XV7201:CloseStat", "SCL22-CDL06:VBx14-XV7201:CloseStat", "SCL22-CDL06:VBx15-XV7201:CloseStat",
"SCL22-CDL06:VBx16-XV7201:CloseStat", "SCL22-CDL06:VBx17-XV7201:CloseStat", "SCL22-CDL06:VBx18-XV7201:CloseStat",
"SCL22-CDL06:VBx19-XV7201:CloseStat", "SCL22-CDL06:VBx20-XV7201:CloseStat", "SCL22-CDL06:VBx21-XV7201:CloseStat",
"SCL22-CDL06:VBx22-XV7201:CloseStat", "SCL22-CDL06:VBx23-XV7201:CloseStat", "SCL22-CDL06:VBx24-XV7201:CloseStat",
"SCL22-CDL06:VBx25-XV7201:CloseStat"
};

monitor allXV7201;
evflag evXV7201;
sync allXV7201 evXV7201;

unsigned short wfXV7201[82];
assign wfXV7201 to "GInt-All:VBx-XV7201:CloseStat";
monitor wfXV7201;

%% #include <math.h>

ss makeWF
{
	state init
	{
		when(TRUE)
		{
			efClear(evXV7301);
			efClear(evXV7201);
		}state MakeWaveform
	}

	state MakeWaveform
	{
		when(efTestAndClear(evXV7301))
		{
			int index = 0;
			for(;index < 24;index++)
				wfXV7301[index]=allXV7301[index];

			pvPut (wfXV7301, SYNC);

		}state MakeWaveform

		when(efTestAndClear(evXV7201))
		{
			int index = 0;
			for(;index < 82;index++)
				wfXV7201[index]=allXV7201[index];

			pvPut (wfXV7201, SYNC);

		}state MakeWaveform
	}
}
