program sncGLInterlockWF

option +r; 


//SYS=SCL3, SUBSYS=-CDL01:, SUBSYS2=-CDL02:, SUBSYS3=-CDL03:
unsigned short allXV7301[24];
assign allXV7301 to {
"SCL31-CDL01:VBx02-XV7301:CPStat", "SCL31-CDL01:VBx04-XV7301:CPStat", "SCL31-CDL01:VBx06-XV7301:CPStat",
"SCL31-CDL01:VBx08-XV7301:CPStat", "SCL31-CDL01:VBx10-XV7301:CPStat", "SCL31-CDL01:VBx12-XV7301:CPStat", 
"SCL31-CDL01:VBx14-XV7301:CPStat", "SCL31-CDL01:VBx16-XV7301:CPStat", "SCL31-CDL01:VBx18-XV7301:CPStat", 
"SCL31-CDL01:VBx20-XV7301:CPStat", "SCL31-CDL01:VBx22-XV7301:CPStat",

"IF-CDL07:VBx01-XV7301:CPStat", "IF-CDL07:VBx02-XV7301:CPStat", "IF-CDL07:VBx03-XV7301:CPStat",
"IF-CDL07:VBx04-XV7301:CPStat", "IF-CDL07:VBx05-XV7301:CPStat", "IF-CDL07:VBx06-XV7301:CPStat",
"IF-CDL07:VBx07-XV7301:CPStat", "IF-CDL07:VBx08-XV7301:CPStat", "IF-CDL07:VBx09-XV7301:CPStat",
"IF-CDL07:VBx10-XV7301:CPStat", "IF-CDL07:VBx11-XV7301:CPStat", "IF-CDL07:VBx12-XV7301:CPStat",
"IF-CDL07:VBx13-XV7301:CPStat"
};

monitor allXV7301;
evflag evXV7301;
sync allXV7301 evXV7301;

unsigned short wfXV7301[24];
//assign wfXV7301 to "GInt-All:VBx-XV7301:CloseStat";
assign wfXV7301 to "SCL-CDL99:VBx99-XV7301:CPStatWF";
monitor wfXV7301;

unsigned short allXV7201[82];
assign allXV7201 to {
"SCL32-CDL02:VBx01-XV7201:CPStat", "SCL32-CDL02:VBx02-XV7201:CPStat", "SCL32-CDL02:VBx03-XV7201:CPStat",
"SCL32-CDL02:VBx04-XV7201:CPStat", "SCL32-CDL02:VBx05-XV7201:CPStat", "SCL32-CDL02:VBx06-XV7201:CPStat",
"SCL32-CDL02:VBx07-XV7201:CPStat", "SCL32-CDL02:VBx08-XV7201:CPStat", "SCL32-CDL02:VBx09-XV7201:CPStat",
"SCL32-CDL02:VBx10-XV7201:CPStat", "SCL32-CDL02:VBx11-XV7201:CPStat", "SCL32-CDL02:VBx12-XV7201:CPStat",
"SCL32-CDL02:VBx13-XV7201:CPStat", 
"SCL32-CDL03:VBx01-XV7201:CPStat", "SCL32-CDL03:VBx02-XV7201:CPStat", "SCL32-CDL03:VBx03-XV7201:CPStat", 
"SCL32-CDL03:VBx04-XV7201:CPStat", "SCL32-CDL03:VBx05-XV7201:CPStat", "SCL32-CDL03:VBx06-XV7201:CPStat", 
"SCL32-CDL03:VBx07-XV7201:CPStat", "SCL32-CDL03:VBx08-XV7201:CPStat", "SCL32-CDL03:VBx09-XV7201:CPStat", 
"SCL32-CDL03:VBx10-XV7201:CPStat", "SCL32-CDL03:VBx11-XV7201:CPStat", "SCL32-CDL03:VBx12-XV7201:CPStat", 
"SCL32-CDL03:VBx13-XV7201:CPStat", "SCL32-CDL03:VBx14-XV7201:CPStat", "SCL32-CDL03:VBx15-XV7201:CPStat", 
"SCL32-CDL03:VBx16-XV7201:CPStat", "SCL32-CDL03:VBx17-XV7201:CPStat", "SCL32-CDL03:VBx18-XV7201:CPStat", 
"SCL32-CDL03:VBx19-XV7201:CPStat",
"P2DT-CDL04:VBx01-XV7201:CPStat", "P2DT-CDL04:VBx02-XV7201:CPStat",
"SCL21-CDL05:VBx01-XV7201:CPStat", "SCL21-CDL05:VBx02-XV7201:CPStat", "SCL21-CDL05:VBx03-XV7201:CPStat",
"SCL21-CDL05:VBx04-XV7201:CPStat", "SCL21-CDL05:VBx05-XV7201:CPStat", "SCL21-CDL05:VBx06-XV7201:CPStat",
"SCL21-CDL05:VBx07-XV7201:CPStat", "SCL21-CDL05:VBx08-XV7201:CPStat", "SCL21-CDL05:VBx09-XV7201:CPStat",
"SCL21-CDL05:VBx10-XV7201:CPStat", "SCL21-CDL05:VBx11-XV7201:CPStat", "SCL21-CDL05:VBx12-XV7201:CPStat",
"SCL21-CDL05:VBx13-XV7201:CPStat", "SCL21-CDL05:VBx14-XV7201:CPStat", "SCL21-CDL05:VBx15-XV7201:CPStat",
"SCL21-CDL05:VBx16-XV7201:CPStat", "SCL21-CDL05:VBx17-XV7201:CPStat", "SCL21-CDL05:VBx18-XV7201:CPStat",
"SCL21-CDL05:VBx19-XV7201:CPStat", "SCL21-CDL05:VBx20-XV7201:CPStat", "SCL21-CDL05:VBx21-XV7201:CPStat",
"SCL21-CDL05:VBx22-XV7201:CPStat", "SCL21-CDL05:VBx23-XV7201:CPStat",
"SCL22-CDL06:VBx01-XV7201:CPStat", "SCL22-CDL06:VBx02-XV7201:CPStat", "SCL22-CDL06:VBx03-XV7201:CPStat",
"SCL22-CDL06:VBx04-XV7201:CPStat", "SCL22-CDL06:VBx05-XV7201:CPStat", "SCL22-CDL06:VBx06-XV7201:CPStat",
"SCL22-CDL06:VBx07-XV7201:CPStat", "SCL22-CDL06:VBx08-XV7201:CPStat", "SCL22-CDL06:VBx09-XV7201:CPStat",
"SCL22-CDL06:VBx10-XV7201:CPStat", "SCL22-CDL06:VBx11-XV7201:CPStat", "SCL22-CDL06:VBx12-XV7201:CPStat",
"SCL22-CDL06:VBx13-XV7201:CPStat", "SCL22-CDL06:VBx14-XV7201:CPStat", "SCL22-CDL06:VBx15-XV7201:CPStat",
"SCL22-CDL06:VBx16-XV7201:CPStat", "SCL22-CDL06:VBx17-XV7201:CPStat", "SCL22-CDL06:VBx18-XV7201:CPStat",
"SCL22-CDL06:VBx19-XV7201:CPStat", "SCL22-CDL06:VBx20-XV7201:CPStat", "SCL22-CDL06:VBx21-XV7201:CPStat",
"SCL22-CDL06:VBx22-XV7201:CPStat", "SCL22-CDL06:VBx23-XV7201:CPStat", "SCL22-CDL06:VBx24-XV7201:CPStat",
"SCL22-CDL06:VBx25-XV7201:CPStat"
};

monitor allXV7201;
evflag evXV7201;
sync allXV7201 evXV7201;

unsigned short wfXV7201[82];
//assign wfXV7201 to "GInt-All:VBx-XV7201:CloseStat";
assign wfXV7201 to "SCL-CDL99:VBx99-XV7201:CPStatWF";
monitor wfXV7201;

int allXV7502[106];
assign allXV7502 to {
	"SCL31-CDL01:VBx02-XV7502:CPStat", "SCL31-CDL01:VBx04-XV7502:CPStat",
	"SCL31-CDL01:VBx06-XV7502:CPStat", "SCL31-CDL01:VBx08-XV7502:CPStat",
	"SCL31-CDL01:VBx10-XV7502:CPStat", "SCL31-CDL01:VBx12-XV7502:CPStat",
	"SCL31-CDL01:VBx14-XV7502:CPStat", "SCL31-CDL01:VBx16-XV7502:CPStat",
	"SCL31-CDL01:VBx18-XV7502:CPStat", "SCL31-CDL01:VBx20-XV7502:CPStat",
	"SCL31-CDL01:VBx22-XV7502:CPStat",
	"SCL32-CDL02:VBx01-XV7502:CPStat", "SCL32-CDL02:VBx02-XV7502:CPStat",
	"SCL32-CDL02:VBx03-XV7502:CPStat", "SCL32-CDL02:VBx04-XV7502:CPStat",
	"SCL32-CDL02:VBx05-XV7502:CPStat", "SCL32-CDL02:VBx06-XV7502:CPStat",
	"SCL32-CDL02:VBx07-XV7502:CPStat", "SCL32-CDL02:VBx08-XV7502:CPStat",
	"SCL32-CDL02:VBx09-XV7502:CPStat", "SCL32-CDL02:VBx10-XV7502:CPStat",
	"SCL32-CDL02:VBx11-XV7502:CPStat", "SCL32-CDL02:VBx12-XV7502:CPStat",
	"SCL32-CDL02:VBx13-XV7502:CPStat",
	"SCL32-CDL03:VBx01-XV7502:CPStat", "SCL32-CDL03:VBx02-XV7502:CPStat",
	"SCL32-CDL03:VBx03-XV7502:CPStat", "SCL32-CDL03:VBx04-XV7502:CPStat",
	"SCL32-CDL03:VBx05-XV7502:CPStat", "SCL32-CDL03:VBx06-XV7502:CPStat",
	"SCL32-CDL03:VBx07-XV7502:CPStat", "SCL32-CDL03:VBx08-XV7502:CPStat",
	"SCL32-CDL03:VBx09-XV7502:CPStat", "SCL32-CDL03:VBx10-XV7502:CPStat",
	"SCL32-CDL03:VBx11-XV7502:CPStat", "SCL32-CDL03:VBx12-XV7502:CPStat",
	"SCL32-CDL03:VBx13-XV7502:CPStat", "SCL32-CDL03:VBx14-XV7502:CPStat",
	"SCL32-CDL03:VBx15-XV7502:CPStat", "SCL32-CDL03:VBx16-XV7502:CPStat",
	"SCL32-CDL03:VBx17-XV7502:CPStat", "SCL32-CDL03:VBx18-XV7502:CPStat",
	"SCL32-CDL03:VBx19-XV7502:CPStat",
	"P2DT-CDL04:VBx01-XV7502:CPStat", "P2DT-CDL04:VBx02-XV7502:CPStat",
	"SCL21-CDL05:VBx01-XV7502:CPStat", "SCL21-CDL05:VBx02-XV7502:CPStat",
	"SCL21-CDL05:VBx03-XV7502:CPStat", "SCL21-CDL05:VBx04-XV7502:CPStat",
	"SCL21-CDL05:VBx05-XV7502:CPStat", "SCL21-CDL05:VBx06-XV7502:CPStat",
	"SCL21-CDL05:VBx07-XV7502:CPStat", "SCL21-CDL05:VBx08-XV7502:CPStat",
	"SCL21-CDL05:VBx09-XV7502:CPStat", "SCL21-CDL05:VBx10-XV7502:CPStat",
	"SCL21-CDL05:VBx11-XV7502:CPStat", "SCL21-CDL05:VBx12-XV7502:CPStat",
	"SCL21-CDL05:VBx13-XV7502:CPStat", "SCL21-CDL05:VBx14-XV7502:CPStat",
	"SCL21-CDL05:VBx15-XV7502:CPStat", "SCL21-CDL05:VBx16-XV7502:CPStat",
	"SCL21-CDL05:VBx17-XV7502:CPStat", "SCL21-CDL05:VBx18-XV7502:CPStat",
	"SCL21-CDL05:VBx19-XV7502:CPStat", "SCL21-CDL05:VBx20-XV7502:CPStat",
	"SCL21-CDL05:VBx21-XV7502:CPStat", "SCL21-CDL05:VBx22-XV7502:CPStat",
	"SCL21-CDL05:VBx23-XV7502:CPStat",
	"SCL22-CDL06:VBx01-XV7502:CPStat", "SCL22-CDL06:VBx02-XV7502:CPStat",
	"SCL22-CDL06:VBx03-XV7502:CPStat", "SCL22-CDL06:VBx04-XV7502:CPStat",
	"SCL22-CDL06:VBx05-XV7502:CPStat", "SCL22-CDL06:VBx06-XV7502:CPStat",
	"SCL22-CDL06:VBx07-XV7502:CPStat", "SCL22-CDL06:VBx08-XV7502:CPStat",
	"SCL22-CDL06:VBx09-XV7502:CPStat", "SCL22-CDL06:VBx10-XV7502:CPStat",
	"SCL22-CDL06:VBx11-XV7502:CPStat", "SCL22-CDL06:VBx12-XV7502:CPStat",
	"SCL22-CDL06:VBx13-XV7502:CPStat", "SCL22-CDL06:VBx14-XV7502:CPStat",
	"SCL22-CDL06:VBx15-XV7502:CPStat", "SCL22-CDL06:VBx16-XV7502:CPStat",
	"SCL22-CDL06:VBx17-XV7502:CPStat", "SCL22-CDL06:VBx18-XV7502:CPStat",
	"SCL22-CDL06:VBx19-XV7502:CPStat", "SCL22-CDL06:VBx20-XV7502:CPStat",
	"SCL22-CDL06:VBx21-XV7502:CPStat", "SCL22-CDL06:VBx22-XV7502:CPStat",
	"SCL22-CDL06:VBx23-XV7502:CPStat", "SCL22-CDL06:VBx24-XV7502:CPStat",
	"SCL22-CDL06:VBx25-XV7502:CPStat",
	"IF-CDL07:VBx01-XV7502:CPStat", "IF-CDL07:VBx02-XV7502:CPStat",
	"IF-CDL07:VBx03-XV7502:CPStat", "IF-CDL07:VBx04-XV7502:CPStat",
	"IF-CDL07:VBx05-XV7502:CPStat", "IF-CDL07:VBx06-XV7502:CPStat",
	"IF-CDL07:VBx07-XV7502:CPStat", "IF-CDL07:VBx08-XV7502:CPStat",
	"IF-CDL07:VBx09-XV7502:CPStat", "IF-CDL07:VBx10-XV7502:CPStat",
	"IF-CDL07:VBx11-XV7502:CPStat", "IF-CDL07:VBx12-XV7502:CPStat",
	"IF-CDL07:VBx13-XV7502:CPStat" 
};

monitor allXV7502;
evflag evXV7502;
sync allXV7502 evXV7502;

unsigned short wfXV7502[106];
//assign wfXV7502 to "GInt-All:VBx-XV7502:CloseStat";
assign wfXV7502 to "SCL-CDL99:VBx99-XV7502:CPStatWF";


/*XV7502 IntStatSCL3PT7301G PVs, XV7502:IntStatGA */
int xv7502DSGA[11];
assign xv7502DSGA to {
"SCL31-CDL01:VBx02-XV7301:SetIntPT7301DSG", "SCL31-CDL01:VBx04-XV7301:SetIntPT7301DSG",
"SCL31-CDL01:VBx06-XV7301:SetIntPT7301DSG", "SCL31-CDL01:VBx08-XV7301:SetIntPT7301DSG",
"SCL31-CDL01:VBx10-XV7301:SetIntPT7301DSG", "SCL31-CDL01:VBx12-XV7301:SetIntPT7301DSG",
"SCL31-CDL01:VBx14-XV7301:SetIntPT7301DSG", "SCL31-CDL01:VBx16-XV7301:SetIntPT7301DSG",
"SCL31-CDL01:VBx18-XV7301:SetIntPT7301DSG", "SCL31-CDL01:VBx20-XV7301:SetIntPT7301DSG",
"SCL31-CDL01:VBx22-XV7301:SetIntPT7301DSG"
};

int xv7502A[11];
assign xv7502A to {
"SCL31-CDL01:VBx02-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx04-XV7301:IntStatPT7301G",
"SCL31-CDL01:VBx06-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx08-XV7301:IntStatPT7301G",
"SCL31-CDL01:VBx10-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx12-XV7301:IntStatPT7301G",
"SCL31-CDL01:VBx14-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx16-XV7301:IntStatPT7301G",
"SCL31-CDL01:VBx18-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx20-XV7301:IntStatPT7301G",
"SCL31-CDL01:VBx22-XV7301:IntStatPT7301G"
};
monitor xv7502A;
evflag evXV7502A;
sync xv7502A evXV7502A;

unsigned short wfXV7502A[11];
assign wfXV7502A to "SCL-CDL99:VBx99-XV7502:IntStatSCL3PT7301GWF";

/*XV7502 IntStatSCL3PT7201G PVs, XV7502:IntStatGB */
int xv7502DSGB[33];
assign xv7502DSGB to {
"SCL32-CDL02:VBx01-XV7201:SetIntPT7201DSG", "SCL32-CDL02:VBx02-XV7201:SetIntPT7201DSG",
"SCL32-CDL02:VBx03-XV7201:SetIntPT7201DSG", "SCL32-CDL02:VBx04-XV7201:SetIntPT7201DSG",
"SCL32-CDL02:VBx05-XV7201:SetIntPT7201DSG", "SCL32-CDL02:VBx06-XV7201:SetIntPT7201DSG",
"SCL32-CDL02:VBx07-XV7201:SetIntPT7201DSG", "SCL32-CDL02:VBx08-XV7201:SetIntPT7201DSG",
"SCL32-CDL02:VBx09-XV7201:SetIntPT7201DSG", "SCL32-CDL02:VBx10-XV7201:SetIntPT7201DSG",
"SCL32-CDL02:VBx11-XV7201:SetIntPT7201DSG", "SCL32-CDL02:VBx12-XV7201:SetIntPT7201DSG",
"SCL32-CDL02:VBx13-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx01-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx02-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx03-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx04-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx05-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx06-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx07-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx08-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx09-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx10-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx11-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx12-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx13-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx14-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx15-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx16-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx17-XV7201:SetIntPT7201DSG",
"SCL32-CDL03:VBx18-XV7201:SetIntPT7201DSG", "SCL32-CDL03:VBx19-XV7201:SetIntPT7201DSG",
"P2DT-CDL04:VBx01-XV7201:SetIntPT7201DSG"
};
int xv7502B[33];
assign xv7502B to {
"SCL32-CDL02:VBx01-XV7201:IntStatPT7201G", "SCL32-CDL02:VBx02-XV7201:IntStatPT7201G",
"SCL32-CDL02:VBx03-XV7201:IntStatPT7201G", "SCL32-CDL02:VBx04-XV7201:IntStatPT7201G",
"SCL32-CDL02:VBx05-XV7201:IntStatPT7201G", "SCL32-CDL02:VBx06-XV7201:IntStatPT7201G",
"SCL32-CDL02:VBx07-XV7201:IntStatPT7201G", "SCL32-CDL02:VBx08-XV7201:IntStatPT7201G",
"SCL32-CDL02:VBx09-XV7201:IntStatPT7201G", "SCL32-CDL02:VBx10-XV7201:IntStatPT7201G",
"SCL32-CDL02:VBx11-XV7201:IntStatPT7201G", "SCL32-CDL02:VBx12-XV7201:IntStatPT7201G",
"SCL32-CDL02:VBx13-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx01-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx02-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx03-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx04-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx05-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx06-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx07-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx08-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx09-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx10-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx11-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx12-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx13-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx14-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx15-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx16-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx17-XV7201:IntStatPT7201G",
"SCL32-CDL03:VBx18-XV7201:IntStatPT7201G", "SCL32-CDL03:VBx19-XV7201:IntStatPT7201G",
"P2DT-CDL04:VBx01-XV7201:IntStatPT7201G"
};
monitor xv7502B;
evflag evXV7502B;
sync  xv7502B evXV7502B;

unsigned short wfXV7502B[33];
assign wfXV7502B to "SCL-CDL99:VBx99-XV7502:IntStatSCL3PT7201GWF";


/*XV7502 IntStatSCL2PT7201G PVs, XV7502:IntStatGC */
int xv7502DSGC[49];
assign xv7502DSGC to {
"SCL21-CDL05:VBx01-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx02-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx03-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx04-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx05-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx06-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx07-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx08-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx09-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx10-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx11-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx12-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx13-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx14-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx15-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx16-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx17-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx18-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx19-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx20-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx21-XV7201:SetIntPT7201DSG", "SCL21-CDL05:VBx22-XV7201:SetIntPT7201DSG",
"SCL21-CDL05:VBx23-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx01-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx02-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx03-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx04-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx05-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx06-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx07-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx08-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx09-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx10-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx11-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx12-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx13-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx14-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx15-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx16-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx17-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx18-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx19-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx20-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx21-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx22-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx23-XV7201:SetIntPT7201DSG",
"SCL22-CDL06:VBx24-XV7201:SetIntPT7201DSG", "SCL22-CDL06:VBx25-XV7201:SetIntPT7201DSG",
"P2DT-CDL04:VBx02-XV7201:SetIntPT7201DSG"
};
int xv7502C[49];
assign xv7502C to {
"SCL21-CDL05:VBx01-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx02-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx03-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx04-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx05-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx06-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx07-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx08-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx09-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx10-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx11-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx12-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx13-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx14-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx15-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx16-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx17-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx18-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx19-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx20-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx21-XV7201:IntStatPT7201G", "SCL21-CDL05:VBx22-XV7201:IntStatPT7201G",
"SCL21-CDL05:VBx23-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx01-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx02-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx03-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx04-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx05-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx06-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx07-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx08-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx09-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx10-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx11-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx12-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx13-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx14-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx15-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx16-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx17-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx18-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx19-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx20-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx21-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx22-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx23-XV7201:IntStatPT7201G",
"SCL22-CDL06:VBx24-XV7201:IntStatPT7201G", "SCL22-CDL06:VBx25-XV7201:IntStatPT7201G",
"P2DT-CDL04:VBx02-XV7201:IntStatPT7201G"
};
monitor xv7502C;
evflag evXV7502C;
sync xv7502C evXV7502C;

unsigned short wfXV7502C[49];
assign wfXV7502C to "SCL-CDL99:VBx99-XV7502:IntStatSCL2PT7201GWF";


/*XV7502 IntStatLTSPT7301G PVs, XV7502:IntStatGD */
int xv7502DSGD[13];
assign xv7502DSGD to {
"IF-CDL07:VBx01-XV7301:SetIntPT7301DSG", "IF-CDL07:VBx02-XV7301:SetIntPT7301DSG",
"IF-CDL07:VBx03-XV7301:SetIntPT7301DSG", "IF-CDL07:VBx04-XV7301:SetIntPT7301DSG",
"IF-CDL07:VBx05-XV7301:SetIntPT7301DSG", "IF-CDL07:VBx06-XV7301:SetIntPT7301DSG",
"IF-CDL07:VBx07-XV7301:SetIntPT7301DSG", "IF-CDL07:VBx08-XV7301:SetIntPT7301DSG",
"IF-CDL07:VBx09-XV7301:SetIntPT7301DSG", "IF-CDL07:VBx10-XV7301:SetIntPT7301DSG",
"IF-CDL07:VBx11-XV7301:SetIntPT7301DSG", "IF-CDL07:VBx12-XV7301:SetIntPT7301DSG",
"IF-CDL07:VBx13-XV7301:SetIntPT7301DSG"
};
int xv7502D[13];
assign xv7502D to {
"IF-CDL07:VBx01-XV7301:IntStatPT7301G", "IF-CDL07:VBx02-XV7301:IntStatPT7301G",
"IF-CDL07:VBx03-XV7301:IntStatPT7301G", "IF-CDL07:VBx04-XV7301:IntStatPT7301G",
"IF-CDL07:VBx05-XV7301:IntStatPT7301G", "IF-CDL07:VBx06-XV7301:IntStatPT7301G",
"IF-CDL07:VBx07-XV7301:IntStatPT7301G", "IF-CDL07:VBx08-XV7301:IntStatPT7301G",
"IF-CDL07:VBx09-XV7301:IntStatPT7301G", "IF-CDL07:VBx10-XV7301:IntStatPT7301G",
"IF-CDL07:VBx11-XV7301:IntStatPT7301G", "IF-CDL07:VBx12-XV7301:IntStatPT7301G",
"IF-CDL07:VBx13-XV7301:IntStatPT7301G"
};

monitor xv7502D;
evflag evXV7502D;
sync xv7502D evXV7502D;

unsigned short wfXV7502D[13];
assign wfXV7502D to "SCL-CDL99:VBx99-XV7502:IntStatLTSPT7301GWF";


unsigned short disableReset[5];
assign disableReset to {
"SCL-CDL99:VBx99-XV7502:SetIntSCL3PT7301DSG", "SCL-CDL99:VBx99-XV7502:SetIntSCL3PT7201DSG",
"SCL-CDL99:VBx99-XV7502:SetIntSCL2PT7201DSG", "SCL-CDL99:VBx99-XV7502:SetIntLTSPT7301DSG",
"SCL-CDL99:VBx99-XV7502:SetIntRstG"
};
monitor disableReset;
evflag evDisReset;
sync disableReset evDisReset;

unsigned short Reset[106];
assign Reset to {
"SCL31-CDL01:VBx02-XV7502:SetIntRstG", "SCL31-CDL01:VBx04-XV7502:SetIntRstG",
"SCL31-CDL01:VBx06-XV7502:SetIntRstG", "SCL31-CDL01:VBx08-XV7502:SetIntRstG",
"SCL31-CDL01:VBx10-XV7502:SetIntRstG", "SCL31-CDL01:VBx12-XV7502:SetIntRstG",
"SCL31-CDL01:VBx14-XV7502:SetIntRstG", "SCL31-CDL01:VBx16-XV7502:SetIntRstG",
"SCL31-CDL01:VBx18-XV7502:SetIntRstG", "SCL31-CDL01:VBx20-XV7502:SetIntRstG",
"SCL31-CDL01:VBx22-XV7502:SetIntRstG", "SCL32-CDL02:VBx01-XV7502:SetIntRstG",
"SCL32-CDL02:VBx02-XV7502:SetIntRstG", "SCL32-CDL02:VBx03-XV7502:SetIntRstG",
"SCL32-CDL02:VBx04-XV7502:SetIntRstG", "SCL32-CDL02:VBx05-XV7502:SetIntRstG",
"SCL32-CDL02:VBx06-XV7502:SetIntRstG", "SCL32-CDL02:VBx07-XV7502:SetIntRstG",
"SCL32-CDL02:VBx08-XV7502:SetIntRstG", "SCL32-CDL02:VBx09-XV7502:SetIntRstG",
"SCL32-CDL02:VBx10-XV7502:SetIntRstG", "SCL32-CDL02:VBx11-XV7502:SetIntRstG",
"SCL32-CDL02:VBx12-XV7502:SetIntRstG", "SCL32-CDL02:VBx13-XV7502:SetIntRstG",
"SCL32-CDL03:VBx01-XV7502:SetIntRstG", "SCL32-CDL03:VBx02-XV7502:SetIntRstG",
"SCL32-CDL03:VBx03-XV7502:SetIntRstG", "SCL32-CDL03:VBx04-XV7502:SetIntRstG",
"SCL32-CDL03:VBx05-XV7502:SetIntRstG", "SCL32-CDL03:VBx06-XV7502:SetIntRstG",
"SCL32-CDL03:VBx07-XV7502:SetIntRstG", "SCL32-CDL03:VBx08-XV7502:SetIntRstG",
"SCL32-CDL03:VBx09-XV7502:SetIntRstG", "SCL32-CDL03:VBx10-XV7502:SetIntRstG",
"SCL32-CDL03:VBx11-XV7502:SetIntRstG", "SCL32-CDL03:VBx12-XV7502:SetIntRstG",
"SCL32-CDL03:VBx13-XV7502:SetIntRstG", "SCL32-CDL03:VBx14-XV7502:SetIntRstG",
"SCL32-CDL03:VBx15-XV7502:SetIntRstG", "SCL32-CDL03:VBx16-XV7502:SetIntRstG",
"SCL32-CDL03:VBx17-XV7502:SetIntRstG", "SCL32-CDL03:VBx18-XV7502:SetIntRstG",
"SCL32-CDL03:VBx19-XV7502:SetIntRstG", "P2DT-CDL04:VBx01-XV7502:SetIntRstG",
"P2DT-CDL04:VBx02-XV7502:SetIntRstG", "SCL21-CDL05:VBx01-XV7502:SetIntRstG",
"SCL21-CDL05:VBx02-XV7502:SetIntRstG", "SCL21-CDL05:VBx03-XV7502:SetIntRstG",
"SCL21-CDL05:VBx04-XV7502:SetIntRstG", "SCL21-CDL05:VBx05-XV7502:SetIntRstG",
"SCL21-CDL05:VBx06-XV7502:SetIntRstG", "SCL21-CDL05:VBx07-XV7502:SetIntRstG",
"SCL21-CDL05:VBx08-XV7502:SetIntRstG", "SCL21-CDL05:VBx09-XV7502:SetIntRstG",
"SCL21-CDL05:VBx10-XV7502:SetIntRstG", "SCL21-CDL05:VBx11-XV7502:SetIntRstG",
"SCL21-CDL05:VBx12-XV7502:SetIntRstG", "SCL21-CDL05:VBx13-XV7502:SetIntRstG",
"SCL21-CDL05:VBx14-XV7502:SetIntRstG", "SCL21-CDL05:VBx15-XV7502:SetIntRstG",
"SCL21-CDL05:VBx16-XV7502:SetIntRstG", "SCL21-CDL05:VBx17-XV7502:SetIntRstG",
"SCL21-CDL05:VBx18-XV7502:SetIntRstG", "SCL21-CDL05:VBx19-XV7502:SetIntRstG",
"SCL21-CDL05:VBx20-XV7502:SetIntRstG", "SCL21-CDL05:VBx21-XV7502:SetIntRstG",
"SCL21-CDL05:VBx22-XV7502:SetIntRstG", "SCL21-CDL05:VBx23-XV7502:SetIntRstG",
"SCL22-CDL06:VBx01-XV7502:SetIntRstG", "SCL22-CDL06:VBx02-XV7502:SetIntRstG",
"SCL22-CDL06:VBx03-XV7502:SetIntRstG", "SCL22-CDL06:VBx04-XV7502:SetIntRstG",
"SCL22-CDL06:VBx05-XV7502:SetIntRstG", "SCL22-CDL06:VBx06-XV7502:SetIntRstG",
"SCL22-CDL06:VBx07-XV7502:SetIntRstG", "SCL22-CDL06:VBx08-XV7502:SetIntRstG",
"SCL22-CDL06:VBx09-XV7502:SetIntRstG", "SCL22-CDL06:VBx10-XV7502:SetIntRstG",
"SCL22-CDL06:VBx11-XV7502:SetIntRstG", "SCL22-CDL06:VBx12-XV7502:SetIntRstG",
"SCL22-CDL06:VBx13-XV7502:SetIntRstG", "SCL22-CDL06:VBx14-XV7502:SetIntRstG",
"SCL22-CDL06:VBx15-XV7502:SetIntRstG", "SCL22-CDL06:VBx16-XV7502:SetIntRstG",
"SCL22-CDL06:VBx17-XV7502:SetIntRstG", "SCL22-CDL06:VBx18-XV7502:SetIntRstG",
"SCL22-CDL06:VBx19-XV7502:SetIntRstG", "SCL22-CDL06:VBx20-XV7502:SetIntRstG",
"SCL22-CDL06:VBx21-XV7502:SetIntRstG", "SCL22-CDL06:VBx22-XV7502:SetIntRstG",
"SCL22-CDL06:VBx23-XV7502:SetIntRstG", "SCL22-CDL06:VBx24-XV7502:SetIntRstG",
"SCL22-CDL06:VBx25-XV7502:SetIntRstG", "IF-CDL07:VBx01-XV7502:SetIntRstG",
"IF-CDL07:VBx02-XV7502:SetIntRstG", "IF-CDL07:VBx03-XV7502:SetIntRstG",
"IF-CDL07:VBx04-XV7502:SetIntRstG", "IF-CDL07:VBx05-XV7502:SetIntRstG",
"IF-CDL07:VBx06-XV7502:SetIntRstG", "IF-CDL07:VBx07-XV7502:SetIntRstG",
"IF-CDL07:VBx08-XV7502:SetIntRstG", "IF-CDL07:VBx09-XV7502:SetIntRstG",
"IF-CDL07:VBx10-XV7502:SetIntRstG", "IF-CDL07:VBx11-XV7502:SetIntRstG",
"IF-CDL07:VBx12-XV7502:SetIntRstG", "IF-CDL07:VBx13-XV7502:SetIntRstG"
};


%% #include <math.h>

ss makeWF
{
	state init
	{
		when(TRUE)
		{
			efSet(evXV7301);
			efSet(evXV7201);
			efSet(evXV7502);

			efSet(evXV7502A);
			efSet(evXV7502B);
			efSet(evXV7502C);
			efSet(evXV7502D);
		}state MakeWaveform
	}

	state MakeWaveform
	{
		when(efTestAndClear(evXV7301))
		{
			int index = 0;
			for(;index < 24;index++)
				wfXV7301[index]=allXV7301[index];

			pvPut (wfXV7301, SYNC);

		}state MakeWaveform

		when(efTestAndClear(evXV7201))
		{
			int index = 0;
			for(;index < 82;index++)
				wfXV7201[index]=allXV7201[index];

			pvPut (wfXV7201, SYNC);

		}state MakeWaveform

		when(efTestAndClear(evXV7502))
		{
			int index = 0;
			for(;index < 106;index++)
				wfXV7502[index]=allXV7502[index];

			pvPut (wfXV7502, SYNC);

		}state MakeWaveform

		when(efTestAndClear(evXV7502A))
		{
			int index = 0;
			for(;index < 11;index++)
				wfXV7502A[index]=xv7502A[index];

			pvPut(wfXV7502A, SYNC);

		}state MakeWaveform

		when(efTestAndClear(evXV7502B))
		{
			int index = 0;
			for(;index < 32;index++)
				wfXV7502B[index]=xv7502B[index];

			pvPut(wfXV7502B, SYNC);

		}state MakeWaveform

		when(efTestAndClear(evXV7502C))
		{
			int index = 0;
			for(;index < 48;index++)
				wfXV7502C[index]=xv7502C[index];

			pvPut(wfXV7502C, SYNC);

		}state MakeWaveform

		when(efTestAndClear(evXV7502D))
		{
			int index = 0;
			for(;index < 13;index++)
				wfXV7502D[index]=xv7502D[index];

			pvPut(wfXV7502D, SYNC);

		}state MakeWaveform
	}
}

ss ssDisReset
{
	state init
	{
		when(TRUE)
		{
			efSet(evDisReset);
		}state DisReset
	}

	state DisReset
	{
		when(efTestAndClear(evDisReset))
		{
			if (disableReset[0] == 1) {
				int i = 0;
				for(; i < 11; i++)
				{
					xv7502DSGA[i] = 1;
					pvPut(xv7502DSGA[i], SYNC);
				}

			}
			if (disableReset[1] == 1) {
				int i = 0;
				for(; i < 33; i++)
				{
					xv7502DSGB[i] = 1;
					pvPut(xv7502DSGB[i], SYNC);
				}

			}
			if (disableReset[2] == 1) {
				int i = 0;
				for(; i < 49; i++)
				{
					xv7502DSGC[i] = 1;
					pvPut(xv7502DSGC[i], SYNC);
				}
			}
			if (disableReset[3] == 1) {
				int i = 0;
				for(; i < 13; i++)
				{
					xv7502DSGD[i] = 1;
					pvPut(xv7502DSGD[i], SYNC);
				}
			}
			if (disableReset[4] == 1) {
				int i = 0;
				for(; i < 106; i++)
				{
					Reset[i] = 1;
					pvPut(Reset[i], SYNC);
				}
			}

		}state DisReset
	}
}
