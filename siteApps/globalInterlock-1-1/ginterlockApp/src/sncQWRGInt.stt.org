program sncQWRGInt
option +r; 
option +c; 
option -a; 

%%#include <math.h> 
%%#define arrSize 11

int xv7502_setmanusel[11];
assign xv7502_setmanusel to {
	"SCL31-CDL01:VBx02-XV7502:SetManuSel", "SCL31-CDL01:VBx04-XV7502:SetManuSel",
	"SCL31-CDL01:VBx06-XV7502:SetManuSel", "SCL31-CDL01:VBx08-XV7502:SetManuSel",
	"SCL31-CDL01:VBx10-XV7502:SetManuSel", "SCL31-CDL01:VBx12-XV7502:SetManuSel",
	"SCL31-CDL01:VBx14-XV7502:SetManuSel", "SCL31-CDL01:VBx16-XV7502:SetManuSel",
	"SCL31-CDL01:VBx18-XV7502:SetManuSel", "SCL31-CDL01:VBx20-XV7502:SetManuSel",
	"SCL31-CDL01:VBx22-XV7502:SetManuSel"
};

int xv7502_setmanuopen[11];
assign xv7502_setmanuopen to {
	"SCL31-CDL01:VBx02-XV7502:SetManuOpen", "SCL31-CDL01:VBx04-XV7502:SetManuOpen",
	"SCL31-CDL01:VBx06-XV7502:SetManuOpen", "SCL31-CDL01:VBx08-XV7502:SetManuOpen",
	"SCL31-CDL01:VBx10-XV7502:SetManuOpen", "SCL31-CDL01:VBx12-XV7502:SetManuOpen",
	"SCL31-CDL01:VBx14-XV7502:SetManuOpen", "SCL31-CDL01:VBx16-XV7502:SetManuOpen",
	"SCL31-CDL01:VBx18-XV7502:SetManuOpen", "SCL31-CDL01:VBx20-XV7502:SetManuOpen",
	"SCL31-CDL01:VBx22-XV7502:SetManuOpen"
};

int xv7502_setmanuclose[106];
assign xv7502_setmanuclose to {
	"SCL31-CDL01:VBx02-XV7502:SetManuClose", "SCL31-CDL01:VBx04-XV7502:SetManuClose",
	"SCL31-CDL01:VBx06-XV7502:SetManuClose", "SCL31-CDL01:VBx08-XV7502:SetManuClose",
	"SCL31-CDL01:VBx10-XV7502:SetManuClose", "SCL31-CDL01:VBx12-XV7502:SetManuClose",
	"SCL31-CDL01:VBx14-XV7502:SetManuClose", "SCL31-CDL01:VBx16-XV7502:SetManuClose",
	"SCL31-CDL01:VBx18-XV7502:SetManuClose", "SCL31-CDL01:VBx20-XV7502:SetManuClose",
	"SCL31-CDL01:VBx22-XV7502:SetManuClose",
	"SCL32-CDL02:VBx01-XV7502:SetManuClose", "SCL32-CDL02:VBx02-XV7502:SetManuClose",
	"SCL32-CDL02:VBx03-XV7502:SetManuClose", "SCL32-CDL02:VBx04-XV7502:SetManuClose",
	"SCL32-CDL02:VBx05-XV7502:SetManuClose", "SCL32-CDL02:VBx06-XV7502:SetManuClose",
	"SCL32-CDL02:VBx07-XV7502:SetManuClose", "SCL32-CDL02:VBx08-XV7502:SetManuClose",
	"SCL32-CDL02:VBx09-XV7502:SetManuClose", "SCL32-CDL02:VBx10-XV7502:SetManuClose",
	"SCL32-CDL02:VBx11-XV7502:SetManuClose", "SCL32-CDL02:VBx12-XV7502:SetManuClose",
	"SCL32-CDL02:VBx13-XV7502:SetManuClose",
	"SCL32-CDL03:VBx01-XV7502:SetManuClose", "SCL32-CDL03:VBx02-XV7502:SetManuClose",
	"SCL32-CDL03:VBx03-XV7502:SetManuClose", "SCL32-CDL03:VBx04-XV7502:SetManuClose",
	"SCL32-CDL03:VBx05-XV7502:SetManuClose", "SCL32-CDL03:VBx06-XV7502:SetManuClose",
	"SCL32-CDL03:VBx07-XV7502:SetManuClose", "SCL32-CDL03:VBx08-XV7502:SetManuClose",
	"SCL32-CDL03:VBx09-XV7502:SetManuClose", "SCL32-CDL03:VBx10-XV7502:SetManuClose",
	"SCL32-CDL03:VBx11-XV7502:SetManuClose", "SCL32-CDL03:VBx12-XV7502:SetManuClose",
	"SCL32-CDL03:VBx13-XV7502:SetManuClose", "SCL32-CDL03:VBx14-XV7502:SetManuClose",
	"SCL32-CDL03:VBx15-XV7502:SetManuClose", "SCL32-CDL03:VBx16-XV7502:SetManuClose",
	"SCL32-CDL03:VBx17-XV7502:SetManuClose", "SCL32-CDL03:VBx18-XV7502:SetManuClose",
	"SCL32-CDL03:VBx19-XV7502:SetManuClose",
	"P2DT-CDL04:VBx01-XV7502:SetManuClose", "P2DT-CDL04:VBx02-XV7502:SetManuClose",
	"SCL21-CDL05:VBx01-XV7502:SetManuClose", "SCL21-CDL05:VBx02-XV7502:SetManuClose",
	"SCL21-CDL05:VBx03-XV7502:SetManuClose", "SCL21-CDL05:VBx04-XV7502:SetManuClose",
	"SCL21-CDL05:VBx05-XV7502:SetManuClose", "SCL21-CDL05:VBx06-XV7502:SetManuClose",
	"SCL21-CDL05:VBx07-XV7502:SetManuClose", "SCL21-CDL05:VBx08-XV7502:SetManuClose",
	"SCL21-CDL05:VBx09-XV7502:SetManuClose", "SCL21-CDL05:VBx10-XV7502:SetManuClose",
	"SCL21-CDL05:VBx11-XV7502:SetManuClose", "SCL21-CDL05:VBx12-XV7502:SetManuClose",
	"SCL21-CDL05:VBx13-XV7502:SetManuClose", "SCL21-CDL05:VBx14-XV7502:SetManuClose",
	"SCL21-CDL05:VBx15-XV7502:SetManuClose", "SCL21-CDL05:VBx16-XV7502:SetManuClose",
	"SCL21-CDL05:VBx17-XV7502:SetManuClose", "SCL21-CDL05:VBx18-XV7502:SetManuClose",
	"SCL21-CDL05:VBx19-XV7502:SetManuClose", "SCL21-CDL05:VBx20-XV7502:SetManuClose",
	"SCL21-CDL05:VBx21-XV7502:SetManuClose", "SCL21-CDL05:VBx22-XV7502:SetManuClose",
	"SCL21-CDL05:VBx23-XV7502:SetManuClose",
	"SCL22-CDL06:VBx01-XV7502:SetManuClose", "SCL22-CDL06:VBx02-XV7502:SetManuClose",
	"SCL22-CDL06:VBx03-XV7502:SetManuClose", "SCL22-CDL06:VBx04-XV7502:SetManuClose",
	"SCL22-CDL06:VBx05-XV7502:SetManuClose", "SCL22-CDL06:VBx06-XV7502:SetManuClose",
	"SCL22-CDL06:VBx07-XV7502:SetManuClose", "SCL22-CDL06:VBx08-XV7502:SetManuClose",
	"SCL22-CDL06:VBx09-XV7502:SetManuClose", "SCL22-CDL06:VBx10-XV7502:SetManuClose",
	"SCL22-CDL06:VBx11-XV7502:SetManuClose", "SCL22-CDL06:VBx12-XV7502:SetManuClose",
	"SCL22-CDL06:VBx13-XV7502:SetManuClose", "SCL22-CDL06:VBx14-XV7502:SetManuClose",
	"SCL22-CDL06:VBx15-XV7502:SetManuClose", "SCL22-CDL06:VBx16-XV7502:SetManuClose",
	"SCL22-CDL06:VBx17-XV7502:SetManuClose", "SCL22-CDL06:VBx18-XV7502:SetManuClose",
	"SCL22-CDL06:VBx19-XV7502:SetManuClose", "SCL22-CDL06:VBx20-XV7502:SetManuClose",
	"SCL22-CDL06:VBx21-XV7502:SetManuClose", "SCL22-CDL06:VBx22-XV7502:SetManuClose",
	"SCL22-CDL06:VBx23-XV7502:SetManuClose", "SCL22-CDL06:VBx24-XV7502:SetManuClose",
	"SCL22-CDL06:VBx25-XV7502:SetManuClose",
	"IF-CDL07:VBx01-XV7502:SetManuClose", "IF-CDL07:VBx02-XV7502:SetManuClose",
	"IF-CDL07:VBx03-XV7502:SetManuClose", "IF-CDL07:VBx04-XV7502:SetManuClose",
	"IF-CDL07:VBx05-XV7502:SetManuClose", "IF-CDL07:VBx06-XV7502:SetManuClose",
	"IF-CDL07:VBx07-XV7502:SetManuClose", "IF-CDL07:VBx08-XV7502:SetManuClose",
	"IF-CDL07:VBx09-XV7502:SetManuClose", "IF-CDL07:VBx10-XV7502:SetManuClose",
	"IF-CDL07:VBx11-XV7502:SetManuClose", "IF-CDL07:VBx12-XV7502:SetManuClose",
	"IF-CDL07:VBx13-XV7502:SetManuClose" 
};

int xv7502GI[11];
assign xv7502GI to {
	"SCL31-CDL01:VBx02-XV7502:IntStatPT7503PT7307G", "SCL31-CDL01:VBx04-XV7502:IntStatPT7503PT7307G",
	"SCL31-CDL01:VBx06-XV7502:IntStatPT7503PT7307G", "SCL31-CDL01:VBx08-XV7502:IntStatPT7503PT7307G",
	"SCL31-CDL01:VBx10-XV7502:IntStatPT7503PT7307G", "SCL31-CDL01:VBx12-XV7502:IntStatPT7503PT7307G",
	"SCL31-CDL01:VBx14-XV7502:IntStatPT7503PT7307G", "SCL31-CDL01:VBx16-XV7502:IntStatPT7503PT7307G",
	"SCL31-CDL01:VBx18-XV7502:IntStatPT7503PT7307G", "SCL31-CDL01:VBx20-XV7502:IntStatPT7503PT7307G",
	"SCL31-CDL01:VBx22-XV7502:IntStatPT7503PT7307G"
};
monitor xv7502GI;
evflag	evXV7502GI;
sync	xv7502GI evXV7502GI;

int xv7301_setmanusel[11];
assign xv7301_setmanusel to {
	"SCL31-CDL01:VBx02-XV7301:SetManuSel", "SCL31-CDL01:VBx04-XV7301:SetManuSel",
	"SCL31-CDL01:VBx06-XV7301:SetManuSel", "SCL31-CDL01:VBx08-XV7301:SetManuSel",
	"SCL31-CDL01:VBx10-XV7301:SetManuSel", "SCL31-CDL01:VBx12-XV7301:SetManuSel",
	"SCL31-CDL01:VBx14-XV7301:SetManuSel", "SCL31-CDL01:VBx16-XV7301:SetManuSel",
	"SCL31-CDL01:VBx18-XV7301:SetManuSel", "SCL31-CDL01:VBx20-XV7301:SetManuSel",
	"SCL31-CDL01:VBx22-XV7301:SetManuSel"
};

int xv7301_setmanuopen[11];
assign xv7301_setmanuopen to {
	"SCL31-CDL01:VBx02-XV7301:SetManuOpen", "SCL31-CDL01:VBx04-XV7301:SetManuOpen",
	"SCL31-CDL01:VBx06-XV7301:SetManuOpen", "SCL31-CDL01:VBx08-XV7301:SetManuOpen",
	"SCL31-CDL01:VBx10-XV7301:SetManuOpen", "SCL31-CDL01:VBx12-XV7301:SetManuOpen",
	"SCL31-CDL01:VBx14-XV7301:SetManuOpen", "SCL31-CDL01:VBx16-XV7301:SetManuOpen",
	"SCL31-CDL01:VBx18-XV7301:SetManuOpen", "SCL31-CDL01:VBx20-XV7301:SetManuOpen",
	"SCL31-CDL01:VBx22-XV7301:SetManuOpen"
};

int xv7301_setmanuclose[11];
assign xv7301_setmanuclose to {
	"SCL31-CDL01:VBx02-XV7301:SetManuClose", "SCL31-CDL01:VBx04-XV7301:SetManuClose",
	"SCL31-CDL01:VBx06-XV7301:SetManuClose", "SCL31-CDL01:VBx08-XV7301:SetManuClose",
	"SCL31-CDL01:VBx10-XV7301:SetManuClose", "SCL31-CDL01:VBx12-XV7301:SetManuClose",
	"SCL31-CDL01:VBx14-XV7301:SetManuClose", "SCL31-CDL01:VBx16-XV7301:SetManuClose",
	"SCL31-CDL01:VBx18-XV7301:SetManuClose", "SCL31-CDL01:VBx20-XV7301:SetManuClose",
	"SCL31-CDL01:VBx22-XV7301:SetManuClose"
};


int xv7301pt7307[11];
assign xv7301pt7307 to {
	"SCL31-CDL01:VBx02-XV7301:IntStatPT7301PT7307G", "SCL31-CDL01:VBx04-XV7301:IntStatPT7301PT7307G",
	"SCL31-CDL01:VBx06-XV7301:IntStatPT7301PT7307G", "SCL31-CDL01:VBx08-XV7301:IntStatPT7301PT7307G",
	"SCL31-CDL01:VBx10-XV7301:IntStatPT7301PT7307G", "SCL31-CDL01:VBx12-XV7301:IntStatPT7301PT7307G",
	"SCL31-CDL01:VBx14-XV7301:IntStatPT7301PT7307G", "SCL31-CDL01:VBx16-XV7301:IntStatPT7301PT7307G",
	"SCL31-CDL01:VBx18-XV7301:IntStatPT7301PT7307G", "SCL31-CDL01:VBx20-XV7301:IntStatPT7301PT7307G",
	"SCL31-CDL01:VBx22-XV7301:IntStatPT7301PT7307G"
};
monitor xv7301pt7307;
evflag	evXV7301PT7307;
sync	xv7301pt7307 evXV7301PT7307;

int tbx_cvs[4];
assign tbx_cvs to {
"Cryo-CDL00:TBx01-CV7504:Setpt", "Cryo-CDL00:TBx01-CV7304:Setpt",
"Cryo-CDL00:TBx01-CV7545:Setpt", "Cryo-CDL00:TBx01-CV7344:Setpt"
};

int tbx_cvs_intstat[4];
assign tbx_cvs_intstat to {
"Cryo-CDL00:TBx01-CV7504:IntStatQWRPT7503G", "Cryo-CDL00:TBx01-CV7304:IntStatQWRPT7503G",
"Cryo-CDL00:TBx01-CV7545:IntStatQWRPT7503G", "Cryo-CDL00:TBx01-CV7344:IntStatQWRPT7503G"
};

int cvpt7503GI[11];
assign cvpt7503GI to {
	"SCL31-CDL01:VBx02-PT7503:PT7503CV", "SCL31-CDL01:VBx04-PT7503:PT7503CV",
	"SCL31-CDL01:VBx06-PT7503:PT7503CV", "SCL31-CDL01:VBx08-PT7503:PT7503CV",
	"SCL31-CDL01:VBx10-PT7503:PT7503CV", "SCL31-CDL01:VBx12-PT7503:PT7503CV",
	"SCL31-CDL01:VBx14-PT7503:PT7503CV", "SCL31-CDL01:VBx16-PT7503:PT7503CV",
	"SCL31-CDL01:VBx18-PT7503:PT7503CV", "SCL31-CDL01:VBx20-PT7503:PT7503CV",
	"SCL31-CDL01:VBx22-PT7503:PT7503CV"
};
monitor cvpt7503GI;
evflag	evCVPT7503GI;
sync	cvpt7503GI evCVPT7503GI;

int pt7305_intstat[11];
assign pt7305_intstat to {
	"SCL31-CDL01:VBx02-XV7502:IntStatPT7503G", "SCL31-CDL01:VBx04-XV7502:IntStatPT7503G",
	"SCL31-CDL01:VBx06-XV7502:IntStatPT7503G", "SCL31-CDL01:VBx08-XV7502:IntStatPT7503G",
	"SCL31-CDL01:VBx10-XV7502:IntStatPT7503G", "SCL31-CDL01:VBx12-XV7502:IntStatPT7503G",
	"SCL31-CDL01:VBx14-XV7502:IntStatPT7503G", "SCL31-CDL01:VBx16-XV7502:IntStatPT7503G",
	"SCL31-CDL01:VBx18-XV7502:IntStatPT7503G", "SCL31-CDL01:VBx20-XV7502:IntStatPT7503G",
	"SCL31-CDL01:VBx22-XV7502:IntStatPT7503G"
};

monitor pt7305_intstat;
evflag	evPT7503IntStat;
sync	pt7305_intstat evPT7503IntStat;

int pt7301cv[11];
assign pt7301cv to {
	"SCL31-CDL01:VBx02-PT7301:PT7301CV", "SCL31-CDL01:VBx04-PT7301:PT7301CV",
	"SCL31-CDL01:VBx06-PT7301:PT7301CV", "SCL31-CDL01:VBx08-PT7301:PT7301CV",
	"SCL31-CDL01:VBx10-PT7301:PT7301CV", "SCL31-CDL01:VBx12-PT7301:PT7301CV",
	"SCL31-CDL01:VBx14-PT7301:PT7301CV", "SCL31-CDL01:VBx16-PT7301:PT7301CV",
	"SCL31-CDL01:VBx18-PT7301:PT7301CV", "SCL31-CDL01:VBx20-PT7301:PT7301CV",
	"SCL31-CDL01:VBx22-PT7301:PT7301CV"
};
monitor pt7301cv;
evflag	evPT7301CV;
sync	pt7301cv evPT7301CV;

int pt7301[11];
assign pt7301 to {
	"SCL31-CDL01:VBx02-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx04-XV7301:IntStatPT7301G",
	"SCL31-CDL01:VBx06-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx08-XV7301:IntStatPT7301G",
	"SCL31-CDL01:VBx10-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx12-XV7301:IntStatPT7301G",
	"SCL31-CDL01:VBx14-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx16-XV7301:IntStatPT7301G",
	"SCL31-CDL01:VBx18-XV7301:IntStatPT7301G", "SCL31-CDL01:VBx20-XV7301:IntStatPT7301G",
	"SCL31-CDL01:VBx22-XV7301:IntStatPT7301G"
};

monitor pt7301;
evflag	evPT7301;
sync	pt7301 evPT7301;

ss ssQWRInterlock {
	state init {
		when(TRUE)
		{
			
		}state QWRGInterlock 
	}

	state QWRGInterlock
	{
		when(delay(1.0)||efTestAndClear(evXV7502GI))
		{
			int i = 0;
			for( ; i < 11; i++)
			{
				if (xv7502GI[i] == 1) {
					xv7502_setmanusel[i] = xv7502_setmanuclose[i] = 1;
					pvPut(xv7502_setmanuclose[i], SYNC);
					pvPut(xv7502_setmanusel[i], SYNC);
				} else {
					//only interlock release
					//xv7502_setmanusel[i] = xv7502_setmanuopen[i] = 0;
				}
			}

		}state QWRGInterlock

		when(efTestAndClear(evXV7301PT7307))
		{
			int i = 0;
			for( ; i < 11; i++)
			{
				if (xv7301pt7307[i] == 1) {
					xv7301_setmanusel[i] = xv7301_setmanuclose[i] = 1;
				} else {
					xv7301_setmanusel[i] = xv7301_setmanuclose[i] = 0;
				}
				pvPut(xv7301_setmanuclose[i], SYNC);
				pvPut(xv7301_setmanusel[i], SYNC);
			}

			efSet(evXV7301PT7307);

		}state QWRGInterlock

		when(efTestAndClear(evCVPT7503GI))
		{
			int i = 0;
			int intCount = 0;
			for( ; i < 11; i++)
			{
				if (cvpt7503GI[i] == 1) {
					intCount++;
				}
			}

			if(intCount)
			{
				int i = 0;
				for( ; i < 4; i++)
				{
					tbx_cvs_intstat[i] = 1;
					tbx_cvs[i] = 0;
					pvPut(tbx_cvs[i], SYNC);
					pvPut(tbx_cvs_intstat[i], SYNC);
				};
				//PID ??
				//Close Cryo-CDL00:TBx01-CV7504:Setpt
				//Close Cryo-CDL00:TBx01-CV7304:Setpt
				//Close Cryo-CDL00:TBx01-CV7545:Setpt
				//Close Cryo-CDL00:TBx01-CV7344:Setpt
			}
			efSet(evCVPT7503GI);
		}state QWRGInterlock

		//when(delay(1.0)||efTestAndClear(evPT7503IntStat))
		when(delay(1.0))
		{
			int i = 0;
			for( ; i < 11; i++)
			{
				if (pt7305_intstat[i] == 1) {
					xv7502_setmanuclose[i] = 0;
					pvPut(xv7502_setmanuclose[i], SYNC);

					xv7502_setmanusel[i] = xv7502_setmanuopen[i] = 1;
					pvPut(xv7502_setmanuopen[i], SYNC);
					pvPut(xv7502_setmanusel[i], SYNC);
				}
			}
			printf("Write XV7502\n");
		}state QWRGInterlock

		when(efTestAndClear(evPT7301CV))
		{
			int i = 0;
			int intCount = 0;
			for( ; i < 11; i++)
			{
				if (pt7301cv[i] == 1) {
					intCount++;
				}
			}

			if(intCount)
			{
				int i = 0;
				for( ; i < 4; i++)
				{
					tbx_cvs_intstat[i] = 1;
					tbx_cvs[i] = 0;
					pvPut(tbx_cvs[i], SYNC);
					pvPut(tbx_cvs_intstat[i], SYNC);
				};
				i = 0;
				for( ; i < 106; i++)
				{
					xv7502_setmanuclose[i] = 1;
					pvPut(xv7502_setmanuclose[i], SYNC);
				};
			}
			efSet(evPT7301CV);
		}state QWRGInterlock

		when(efTestAndClear(evPT7301))
		{
			int i = 0;
			for( ; i < 11; i++)
			{
				if (pt7301[i] == 1) {
					xv7301_setmanuopen[i] = 1;
					pvPut(xv7301_setmanuopen[i], SYNC);
				} 
			}
			efSet(evPT7301);
		}state QWRGInterlock
	}
}

