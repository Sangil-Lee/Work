
#Test, VAL:1 -> 1.2 -> 1.5 => 100(J), VAL: 2 -> 2.2 -> 2.5, Inc+I

file "db/cd_ai.template" { pattern
{SYS,	    SUBSYS,		  DEV,		SUBDEV,		  SIGNAL,		PINI,		VAL,		SCAN		}
{SCL32,     -BL02:,       CM01,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM02,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA  
{SCL32,     -BL02:,       CM03,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA  
{SCL32,     -BL02:,       CM04,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM05,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM06,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM07,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM08,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM09,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM10,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM11,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM12,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM13,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRA
{SCL32,     -BL03:,       CM01,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM02,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM03,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM04,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM05,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM06,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM07,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM08,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM09,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM10,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM11,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM12,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM13,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM14,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM15,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM16,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM17,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM18,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM19,		-LT8201:,     Level,		"YES",		"20",		"Passive"	} #HWRB
{P2DT,      -BL04:,       CM01,     -LT8201:,     Level,        "YES",      "2O",       "Passive"   } #P2DT

{SCL32,     -BL02:,       CM01,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM02,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA  
{SCL32,     -BL02:,       CM03,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA  
{SCL32,     -BL02:,       CM04,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM05,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM06,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM07,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM08,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM09,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM10,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM11,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM12,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM13,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRA
{SCL32,     -BL03:,       CM01,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM02,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM03,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM04,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM05,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM06,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM07,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM08,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM09,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM10,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM11,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM12,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM13,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM14,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM15,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM16,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM17,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM18,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM19,		-PT8201:,     Press,		"YES",		"1.3",		"Passive"	} #HWRB
{P2DT,      -BL04:,       CM01,     -PT8201:,     Press,        "YES",      "1.3",      "Passive"   } #P2DT

{SCL32,     -BL02:,       CM01,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM02,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA  
{SCL32,     -BL02:,       CM03,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA  
{SCL32,     -BL02:,       CM04,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM05,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM06,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM07,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM08,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM09,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM10,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM11,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM12,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL02:,       CM13,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRA
{SCL32,     -BL03:,       CM01,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM02,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM03,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB  
{SCL32,     -BL03:,       CM04,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM05,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM06,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM07,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM08,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM09,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM10,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM11,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM12,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM13,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM14,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM15,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM16,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM17,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM18,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{SCL32,     -BL03:,       CM19,		-PT8301:,     Press,		"YES",		"2.0",		"Passive"	} #HWRB
{P2DT,      -BL04:,       CM01,     -PT8301:,     Press,        "YES",      "2.0",      "Passive"   } #P2DT
}

file "db/cd_ai_pressevalOM0.3.template" { pattern
{SYS,   	SUBSYS,		   DEV,		    SUBDEV,		  SIGNAL,		PINI,		VAL,		SCAN        }
{SCL32,     -CDL02:,       VBx01,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA   
{SCL32,     -CDL02:,       VBx02,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx03,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx04,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx05,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx06,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx07,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx08,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx09,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx10,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx11,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx12,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL02:,       VBx13,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRA
{SCL32,     -CDL03:,       VBx01,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB   
{SCL32,     -CDL03:,       VBx02,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx03,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx04,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx05,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx06,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx07,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx08,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx09,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx10,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx11,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx12,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx13,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx14,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx15,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx16,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx17,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx18,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{SCL32,     -CDL03:,       VBx19,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #HWRB
{P2DT,      -CDL04:,       VBx01,		-PT7401:,     Press,		"YES",		"2.2",		"Passive"	} #P2DT

}

###{"$(SYS)$(SUBSYS)$(DEV)-CV7301:Valve",	"$(SYS)$(SUBSYS):EBx01-PT7301:Press",	"$(SYS)$(SUBSYS):VBx02-PT7301:Press",	"$(SYS)$(SUBSYS):TBx03-PT7303:Press",	"E:=ABS(C-D);F:=ABS(C-B);(B<=H&&E<=G&&F<=G)?100:A+5",	"$(INPA)",	"$(INPA)"	}
###"D:=ABS(B-C);(D>=E)?A+0:(D<F)?100:(A>=100)?100:A+G"

file "db/calcout_ao.template" { pattern
{SYS,	    SUBSYS,      DEV,		SUBDEV,			CALC,                                           INPC,                              INPH,    INPK,                                   INPI,   INPJ   }							
{SCL32,     -BL02:,      CM01,		-CV8403:,		"(C<H)?A:(A<=J)?J:(A-I)",                       "SCL32-BL02:CM01-LT8201:Level",    50,      "",                                     5,      0      } #C12#1HWR
{SCL32,     -BL02:,      CM01,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM01-PT8301:Press",    2,       "SCL32-CDL02:VBx01-PT7401:PressEval",   5,      100    } #C12#2HWR
{SCL32,     -BL02:,      CM01,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM01-PT8201:Press",    1.3,     "",                                     5,      100    } #C12#3HWR
{SCL32,     -BL02:,      CM02,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM02-LT8201:Level",    50,      "",                                     5,      0      } #C13#1HWR
{SCL32,     -BL02:,      CM02,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM02-PT8301:Press",    2,       "SCL32-CDL02:VBx02-PT7401:PressEval",   5,      100    } #C13#2HWR
{SCL32,     -BL02:,      CM02,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM02-PT8201:Press",    1.3,     "",                                     5,      100    } #C13#3HWR
{SCL32,     -BL02:,      CM03,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM03-LT8201:Level",    50,      "",                                     5,      0      } #C14#1HWR
{SCL32,     -BL02:,      CM03,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM03-PT8301:Press",    2,       "SCL32-CDL02:VBx03-PT7401:PressEval",   5,      100    } #C14#2HWR
{SCL32,     -BL02:,      CM03,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM03-PT8201:Press",    1.3,     "",                                     5,      100    } #C14#3HWR
{SCL32,     -BL02:,      CM04,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM04-LT8201:Level",    50,      "",                                     5,      0      } #C15#1HWR
{SCL32,     -BL02:,      CM04,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM04-PT8301:Press",    2,       "SCL32-CDL02:VBx04-PT7401:PressEval",   5,      100    } #C15#2HWR
{SCL32,     -BL02:,      CM04,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM04-PT8201:Press",    1.3,     "",                                     5,      100    } #C15#3HWR
{SCL32,     -BL02:,      CM05,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM05-LT8201:Level",    50,      "",                                     5,      0      } #C16#1HWR
{SCL32,     -BL02:,      CM05,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM05-PT8301:Press",    2,       "SCL32-CDL02:VBx05-PT7401:PressEval",   5,      100    } #C16#2HWR
{SCL32,     -BL02:,      CM05,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM05-PT8201:Press",    1.3,     "",                                     5,      100    } #C16#3HWR
{SCL32,     -BL02:,      CM06,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM06-LT8201:Level",    50,      "",                                     5,      0      } #C17#1HWR
{SCL32,     -BL02:,      CM06,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM06-PT8301:Press",    2,       "SCL32-CDL02:VBx06-PT7401:PressEval",   5,      100    } #C17#2HWR
{SCL32,     -BL02:,      CM06,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM06-PT8201:Press",    1.3,     "",                                     5,      100    } #C17#3HWR
{SCL32,     -BL02:,      CM07,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM07-LT8201:Level",    50,      "",                                     5,      0      } #C18#1HWR
{SCL32,     -BL02:,      CM07,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM07-PT8301:Press",    2,       "SCL32-CDL02:VBx07-PT7401:PressEval",   5,      100    } #C18#2HWR
{SCL32,     -BL02:,      CM07,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM07-PT8201:Press",    1.3,     "",                                     5,      100    } #C18#3HWR
{SCL32,     -BL02:,      CM08,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM08-LT8201:Level",    50,      "",                                     5,      0      } #C19#1HWR
{SCL32,     -BL02:,      CM08,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM08-PT8301:Press",    2,       "SCL32-CDL02:VBx08-PT7401:PressEval",   5,      100    } #C19#2HWR
{SCL32,     -BL02:,      CM08,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM08-PT8201:Press",    1.3,     "",                                     5,      100    } #C19#3HWR
{SCL32,     -BL02:,      CM09,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM09-LT8201:Level",    50,      "",                                     5,      0      } #C20#1HWR
{SCL32,     -BL02:,      CM09,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM09-PT8301:Press",    2,       "SCL32-CDL02:VBx09-PT7401:PressEval",   5,      100    } #C20#2HWR
{SCL32,     -BL02:,      CM09,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM09-PT8201:Press",    1.3,     "",                                     5,      100    } #C20#3HWR
{SCL32,     -BL02:,      CM10,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM10-LT8201:Level",    50,      "",                                     5,      0      } #C21#1HWR
{SCL32,     -BL02:,      CM10,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM10-PT8301:Press",    2,       "SCL32-CDL02:VBx10-PT7401:PressEval",   5,      100    } #C21#2HWR
{SCL32,     -BL02:,      CM10,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM10-PT8201:Press",    1.3,     "",                                     5,      100    } #C21#3HWR
{SCL32,     -BL02:,      CM11,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM11-LT8201:Level",    50,      "",                                     5,      0      } #C22#1HWR
{SCL32,     -BL02:,      CM11,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM11-PT8301:Press",    2,       "SCL32-CDL02:VBx11-PT7401:PressEval",   5,      100    } #C22#2HWR
{SCL32,     -BL02:,      CM11,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM11-PT8201:Press",    1.3,     "",                                     5,      100    } #C22#3HWR
{SCL32,     -BL02:,      CM12,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM12-LT8201:Level",    50,      "",                                     5,      0      } #C23#1HWR
{SCL32,     -BL02:,      CM12,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM12-PT8301:Press",    2,       "SCL32-CDL02:VBx12-PT7401:PressEval",   5,      100    } #C23#2HWR
{SCL32,     -BL02:,      CM12,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM12-PT8201:Press",    1.3,     "",                                     5,      100    } #C23#3HWR
{SCL32,     -BL02:,      CM13,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL02:CM12-LT8201:Level",    50,      "",                                     5,      0      } #C24#1HWR
{SCL32,     -BL02:,      CM13,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL02:CM12-PT8301:Press",    2,       "SCL32-CDL02:VBx12-PT7401:PressEval",   5,      100    } #C24#1HWR
{SCL32,     -BL02:,      CM13,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL02:CM12-PT8201:Press",    1.3,     "",                                     5,      100    } #C24#1HWR
{SCL32,     -BL03:,      CM01,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM01-LT8201:Level",    50,      "",                                     5,      0      } #C25#1HWR
{SCL32,     -BL03:,      CM01,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM01-PT8301:Press",    2,       "SCL32-CDL03:VBx01-PT7401:PressEval",   5,      100    } #C25#1HWR
{SCL32,     -BL03:,      CM01,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM01-PT8201:Press",    1.3,     "",                                     5,      100    } #C24#1HWR
{SCL32,     -BL03:,      CM02,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM02-LT8201:Level",    50,      "",                                     5,      0      } #C26#1HWR
{SCL32,     -BL03:,      CM02,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM02-PT8301:Press",    2,       "SCL32-CDL03:VBx02-PT7401:PressEval",   5,      100    } #C26#1HWR
{SCL32,     -BL03:,      CM02,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM02-PT8201:Press",    1.3,     "",                                     5,      100    } #C26#1HWR
{SCL32,     -BL03:,      CM03,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM03-LT8201:Level",    50,      "",                                     5,      0      } #C27#1HWRB
{SCL32,     -BL03:,      CM03,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM03-PT8301:Press",    2,       "SCL32-CDL03:VBx03-PT7401:PressEval",   5,      100    } #C27#2HWRB
{SCL32,     -BL03:,      CM03,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM03-PT8201:Press",    1.3,     "",                                     5,      100    } #C27#3HWRB
{SCL32,     -BL03:,      CM04,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM04-LT8201:Level",    50,      "",                                     5,      0      } #C28#1HWRB
{SCL32,     -BL03:,      CM04,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM04-PT8301:Press",    2,       "SCL32-CDL03:VBx04-PT7401:PressEval",   5,      100    } #C28#2HWRB
{SCL32,     -BL03:,      CM04,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM04-PT8201:Press",    1.3,     "",                                     5,      100    } #C28#3HWRB
{SCL32,     -BL03:,      CM05,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM05-LT8201:Level",    50,      "",                                     5,      0      } #C29#1HWRB
{SCL32,     -BL03:,      CM05,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM05-PT8301:Press",    2,       "SCL32-CDL03:VBx05-PT7401:PressEval",   5,      100    } #C29#2HWRB
{SCL32,     -BL03:,      CM05,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM05-PT8201:Press",    1.3,     "",                                     5,      100    } #C29#3HWRB
{SCL32,     -BL03:,      CM06,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM06-LT8201:Level",    50,      "",                                     5,      0      } #C30#1HWRB
{SCL32,     -BL03:,      CM06,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM06-PT8301:Press",    2,       "SCL32-CDL03:VBx06-PT7401:PressEval",   5,      100    } #C30#2HWRB
{SCL32,     -BL03:,      CM06,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM06-PT8201:Press",    1.3,     "",                                     5,      100    } #C30#3HWRB
{SCL32,     -BL03:,      CM07,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM07-LT8201:Level",    50,      "",                                     5,      0      } #C31#1HWRB
{SCL32,     -BL03:,      CM07,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM07-PT8301:Press",    2,       "SCL32-CDL03:VBx07-PT7401:PressEval",   5,      100    } #C31#2HWRB
{SCL32,     -BL03:,      CM07,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM07-PT8201:Press",    1.3,     "",                                     5,      100    } #C31#3HWRB
{SCL32,     -BL03:,      CM08,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM08-LT8201:Level",    50,      "",                                     5,      0      } #C32#1HWRB
{SCL32,     -BL03:,      CM08,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM08-PT8301:Press",    2,       "SCL32-CDL03:VBx08-PT7401:PressEval",   5,      100    } #C32#2HWRB
{SCL32,     -BL03:,      CM08,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM08-PT8201:Press",    1.3,     "",                                     5,      100    } #C32#3HWRB
{SCL32,     -BL03:,      CM09,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM09-LT8201:Level",    50,      "",                                     5,      0      } #C33#1HWRB
{SCL32,     -BL03:,      CM09,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM09-PT8301:Press",    2,       "SCL32-CDL03:VBx09-PT7401:PressEval",   5,      100    } #C33#2HWRB
{SCL32,     -BL03:,      CM09,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM09-PT8201:Press",    1.3,     "",                                     5,      100    } #C33#3HWRB
{SCL32,     -BL03:,      CM10,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM10-LT8201:Level",    50,      "",                                     5,      0      } #C34#1HWRB
{SCL32,     -BL03:,      CM10,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM10-PT8301:Press",    2,       "SCL32-CDL03:VBx10-PT7401:PressEval",   5,      100    } #C34#2HWRB
{SCL32,     -BL03:,      CM10,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM10-PT8201:Press",    1.3,     "",                                     5,      100    } #C34#3HWRB
{SCL32,     -BL03:,      CM11,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM11-LT8201:Level",    50,      "",                                     5,      0      } #C35#1HWRB
{SCL32,     -BL03:,      CM11,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM11-PT8301:Press",    2,       "SCL32-CDL03:VBx11-PT7401:PressEval",   5,      100    } #C35#2HWRB
{SCL32,     -BL03:,      CM11,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM11-PT8201:Press",    1.3,     "",                                     5,      100    } #C35#3HWRB
{SCL32,     -BL03:,      CM12,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM12-LT8201:Level",    50,      "",                                     5,      0      } #C36#1HWRB
{SCL32,     -BL03:,      CM12,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM12-PT8301:Press",    2,       "SCL32-CDL03:VBx12-PT7401:PressEval",   5,      100    } #C36#2HWRB
{SCL32,     -BL03:,      CM12,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM12-PT8201:Press",    1.3,     "",                                     5,      100    } #C36#3HWRB
{SCL32,     -BL03:,      CM13,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM13-LT8201:Level",    50,      "",                                     5,      0      } #C37#1HWRB
{SCL32,     -BL03:,      CM13,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM13-PT8301:Press",    2,       "SCL32-CDL03:VBx13-PT7401:PressEval",   5,      100    } #C37#2HWRB
{SCL32,     -BL03:,      CM13,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM13-PT8201:Press",    1.3,     "",                                     5,      100    } #C37#3HWRB
{SCL32,     -BL03:,      CM14,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM14-LT8201:Level",    50,      "",                                     5,      0      } #C38#1HWRB
{SCL32,     -BL03:,      CM14,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM14-PT8301:Press",    2,       "SCL32-CDL03:VBx14-PT7401:PressEval",   5,      100    } #C38#2HWRB
{SCL32,     -BL03:,      CM14,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM14-PT8201:Press",    1.3,     "",                                     5,      100    } #C38#3HWRB
{SCL32,     -BL03:,      CM15,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM15-LT8201:Level",    50,      "",                                     5,      0      } #C39#1HWRB
{SCL32,     -BL03:,      CM15,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM15-PT8301:Press",    2,       "SCL32-CDL03:VBx15-PT7401:PressEval",   5,      100    } #C39#2HWRB
{SCL32,     -BL03:,      CM15,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM15-PT8201:Press",    1.3,     "",                                     5,      100    } #C39#3HWRB
{SCL32,     -BL03:,      CM16,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM16-LT8201:Level",    50,      "",                                     5,      0      } #C40#1HWRB
{SCL32,     -BL03:,      CM16,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM16-PT8301:Press",    2,       "SCL32-CDL03:VBx16-PT7401:PressEval",   5,      100    } #C40#2HWRB
{SCL32,     -BL03:,      CM16,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM16-PT8201:Press",    1.3,     "",                                     5,      100    } #C40#3HWRB
{SCL32,     -BL03:,      CM17,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM17-LT8201:Level",    50,      "",                                     5,      0      } #C41#1HWRB
{SCL32,     -BL03:,      CM17,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM17-PT8301:Press",    2,       "SCL32-CDL03:VBx17-PT7401:PressEval",   5,      100    } #C41#2HWRB
{SCL32,     -BL03:,      CM17,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM17-PT8201:Press",    1.3,     "",                                     5,      100    } #C41#3HWRB
{SCL32,     -BL03:,      CM18,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM18-LT8201:Level",    50,      "",                                     5,      0      } #C42#1HWRB
{SCL32,     -BL03:,      CM18,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM18-PT8301:Press",    2,       "SCL32-CDL03:VBx18-PT7401:PressEval",   5,      100    } #C42#2HWRB
{SCL32,     -BL03:,      CM18,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM18-PT8201:Press",    1.3,     "",                                     5,      100    } #C42#3HWRB
{SCL32,     -BL03:,      CM19,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "SCL32-BL03:CM19-LT8201:Level",    50,      "",                                     5,      0      } #C34#1HWRB
{SCL32,     -BL03:,      CM19,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "SCL32-BL03:CM19-PT8301:Press",    2,       "SCL32-CDL03:VBx19-PT7401:PressEval",   5,      100    } #C34#2HWRB
{SCL32,     -BL03:,      CM19,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "SCL32-BL03:CM19-PT8201:Press",    1.3,     "",                                     5,      100    } #C34#3HWRB
{P2DT,      -BL04:,      CM01,		-CV8403:,		"(C<H)?A:(A<=J)?A:(A-I)",                       "P2DT-BL04:CM01-LT8201:Level",     50,      "",                                     5,      0      } #C44#1P2DT
{P2DT,      -BL04:,      CM01,		-CV8401:,		"(C>H+0.1&&A>0)?(A-I):(C>H||K||A>=J)?A:(A+I)",  "P2DT-BL04:CM01-PT8301:Press",     2,       "P2DT-CDL04:VBx01-PT7401:PressEval",    5,      100    } #C44#2P2DT
{P2DT,      -BL04:,      CM01,		-CV8402:,		"(C>H+0.1&&A>0)?(A-I):(C>H||A>=J)?A:(A+I)",     "P2DT-BL04:CM01-PT8201:Press",     1.3,     "",                                     5,      100    } #C44#3P2DT
}