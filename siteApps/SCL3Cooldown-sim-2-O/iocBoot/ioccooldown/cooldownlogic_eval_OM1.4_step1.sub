#Test, VAL:1 -> 1.2 -> 1.5 => 100(J), VAL: 2 -> 2.2 -> 2.5, Inc+I

#file "db/cd_ai.template" { pattern
#{SYS,	    SUBSYS,		   DEV,		    SUBDEV,		  SIGNAL,		PINI,		VAL,		SCAN		}
#{SCL32,     -CDL02:,       VBx01,	    -PT7201:,	  Press,		"YES",		"2.2",		"Passive"	} #HWRA
#}

#file "db/cd_ai_presseval.template" { pattern
#{SYS,   	SUBSYS,		   DEV,		    SUBDEV,		  SIGNAL,		PINI,		VAL,		SCAN        }
#{SCL32,     -CDL02:,       VBx01,	    -PT7202:,	  Press,		"YES",		"2.2",		"Passive"	} #HWRA
#{Cryo,      -CDL00;,       TBx01,      -PT7203;,     Press,		"YES",		"2.2",		"Passive"	} #TBx
#}

###{"$(SYS)$(SUBSYS)$(DEV)-CV7301:Valve",	"$(SYS)$(SUBSYS):EBx01-PT7301:Press",	"$(SYS)$(SUBSYS):VBx02-PT7301:Press",	"$(SYS)$(SUBSYS):TBx03-PT7303:Press",	"E:=ABS(C-D);F:=ABS(C-B);(B<=H&&E<=G&&F<=G)?100:A+5",	"$(INPA)",	"$(INPA)"	}
###"D:=ABS(B-C);(D>=E)?A+0:(D<F)?100:(A>=100)?100:A+G"

file "db/calcout_ao.template" { pattern
{SYS,	    SUBSYS,          DEV,		SUBDEV,			CALC,           INPJ    }							
{SCL31,     -CDL01:,         VBx02,		-XV7301:,		"(A>=J)?A:J",   1       } #1QWR
{SCL31,     -CDL01:,         VBx04,		-XV7301:,		"(A>=J)?A:J",   1       } #2QWR
{SCL31,     -CDL01:,         VBx06,		-XV7301:,		"(A>=J)?A:J",   1       } #3QWR
{SCL31,     -CDL01:,         VBx08,		-XV7301:,		"(A>=J)?A:J",   1       } #4QWR
{SCL31,     -CDL01:,         VBx10,		-XV7301:,		"(A>=J)?A:J",   1       } #5QWR
{SCL31,     -CDL01:,         VBx12,		-XV7301:,		"(A>=J)?A:J",   1       } #6QWR
{SCL31,     -CDL01:,         VBx14,		-XV7301:,		"(A>=J)?A:J",   1       } #7QWR
{SCL31,     -CDL01:,         VBx16,		-XV7301:,		"(A>=J)?A:J",   1       } #8QWR
{SCL31,     -CDL01:,         VBx18,		-XV7301:,		"(A>=J)?A:J",   1       } #9QWR
{SCL31,     -CDL01:,         VBx20,		-XV7301:,		"(A>=J)?A:J",   1       } #10QWR
{SCL31,     -CDL01:,         VBx22,		-XV7301:,		"(A>=J)?A:J",   1       } #11QWR
{SCL32,     -CDL02:,         VBx01,		-XV7201:,		"(A>=J)?A:J",   1       } #12HWRA
{SCL32,     -CDL02:,         VBx02,		-XV7201:,		"(A>=J)?A:J",   1       } #13HWRA
{SCL32,     -CDL02:,         VBx03,		-XV7201:,		"(A>=J)?A:J",   1       } #14HWRA
{SCL32,     -CDL02:,         VBx04,		-XV7201:,		"(A>=J)?A:J",   1       } #15HWRA
{SCL32,     -CDL02:,         VBx05,		-XV7201:,		"(A>=J)?A:J",   1       } #16HWRA
{SCL32,     -CDL02:,         VBx06,		-XV7201:,		"(A>=J)?A:J",   1       } #17HWRA
{SCL32,     -CDL02:,         VBx07,		-XV7201:,		"(A>=J)?A:J",   1       } #18HWRA
{SCL32,     -CDL02:,         VBx08,		-XV7201:,		"(A>=J)?A:J",   1       } #19HWRA
{SCL32,     -CDL02:,         VBx09,		-XV7201:,		"(A>=J)?A:J",   1       } #20HWRA
{SCL32,     -CDL02:,         VBx10,		-XV7201:,		"(A>=J)?A:J",   1       } #21HWRA
{SCL32,     -CDL02:,         VBx11,		-XV7201:,		"(A>=J)?A:J",   1       } #22HWRA
{SCL32,     -CDL02:,         VBx12,		-XV7201:,		"(A>=J)?A:J",   1       } #23HWRA
{SCL32,     -CDL02:,         VBx13,		-XV7201:,		"(A>=J)?A:J",   1       } #24HWRA
{SCL32,     -CDL03:,         VBx01,		-XV7201:,		"(A>=J)?A:J",   1       } #25HWRB
{SCL32,     -CDL03:,         VBx02,		-XV7201:,		"(A>=J)?A:J",   1       } #26HWRB
{SCL32,     -CDL03:,         VBx03,		-XV7201:,		"(A>=J)?A:J",   1       } #27HWRB
{SCL32,     -CDL03:,         VBx04,		-XV7201:,		"(A>=J)?A:J",   1       } #28HWRB
{SCL32,     -CDL03:,         VBx05,		-XV7201:,		"(A>=J)?A:J",   1       } #29HWRB
{SCL32,     -CDL03:,         VBx06,		-XV7201:,		"(A>=J)?A:J",   1       } #30HWRB
{SCL32,     -CDL03:,         VBx07,		-XV7201:,		"(A>=J)?A:J",   1       } #31HWRB
{SCL32,     -CDL03:,         VBx08,		-XV7201:,		"(A>=J)?A:J",   1       } #32HWRB
{SCL32,     -CDL03:,         VBx09,		-XV7201:,		"(A>=J)?A:J",   1       } #33HWRB
{SCL32,     -CDL03:,         VBx10,		-XV7201:,		"(A>=J)?A:J",   1       } #34HWRB
{SCL32,     -CDL03:,         VBx11,		-XV7201:,		"(A>=J)?A:J",   1       } #35HWRB
{SCL32,     -CDL03:,         VBx12,		-XV7201:,		"(A>=J)?A:J",   1       } #36HWRB
{SCL32,     -CDL03:,         VBx13,		-XV7201:,		"(A>=J)?A:J",   1       } #37HWRB
{SCL32,     -CDL03:,         VBx14,		-XV7201:,		"(A>=J)?A:J",   1       } #38HWRB
{SCL32,     -CDL03:,         VBx15,		-XV7201:,		"(A>=J)?A:J",   1       } #39HWRB
{SCL32,     -CDL03:,         VBx16,		-XV7201:,		"(A>=J)?A:J",   1       } #40HWRB
{SCL32,     -CDL03:,         VBx17,		-XV7201:,		"(A>=J)?A:J",   1       } #41HWRB
{SCL32,     -CDL03:,         VBx18,		-XV7201:,		"(A>=J)?A:J",   1       } #42HWRB
{SCL32,     -CDL03:,         VBx19,		-XV7201:,		"(A>=J)?A:J",   1       } #43HWRB
{P2DT,      -CDL04:,         VBx01,		-XV7201:,		"(A>=J)?A:J",   1       } #44P2DT
}

