program CDOM03Logic
option +r;

%% #include <math.h>

int om03logicProc[107];
assign om03logicProc to {
"Cryo-CDL00:TBx01-XV7502:CDLogic.PROC", "Cryo-CDL00:TBx01-XV7501:CDLogic.PROC", "Cryo-CDL00:TBx01-CV7505:CDLogic.PROC", 
"Cryo-CDL00:TBx01-CV7502:CDLogic.PROC", "Cryo-CDL00:TBx01-CV7503:CDLogic.PROC", "Cryo-CDL00:TBx01-CV7501:CDLogic.PROC", 
"SCL31-CDL01:EBx01-CV7501:CDLogic.PROC", "P2DT-CDL04:VBx01-CV7501:CDLogic.PROC", "P2DT-CDL04:VBx01-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx19-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx19-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx18-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx18-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx17-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx17-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx16-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx16-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx15-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx15-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx14-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx14-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx13-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx13-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx12-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx12-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx11-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx11-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx10-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx10-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx09-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx09-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx08-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx08-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx07-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx07-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx06-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx06-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx05-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx05-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx04-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx04-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx03-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx03-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx02-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx02-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx01-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx01-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx13-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx13-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx12-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx12-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx11-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx11-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx10-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx10-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx09-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx09-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx08-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx08-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx07-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx07-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx06-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx06-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx05-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx05-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx04-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx04-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx03-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx03-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx02-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx02-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx01-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx01-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx22-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx20-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx18-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx16-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx14-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx12-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx10-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx08-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx06-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx04-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx02-XV7501:CDLogic.PROC", "SCL31-CDL01:EBx01-CV7502:CDLogic.PROC"
};
monitor om03logicProc;

float valveVal[107];
assign valveVal to {
"Cryo-CDL00:TBx01-XV7502:Valve", "Cryo-CDL00:TBx01-XV7501:Valve", "Cryo-CDL00:TBx01-CV7505:Valve", 
"Cryo-CDL00:TBx01-CV7502:Valve", "Cryo-CDL00:TBx01-CV7503:Valve", "Cryo-CDL00:TBx01-CV7501:Valve", 
"SCL31-CDL01:EBx01-CV7501:Valve", "P2DT-CDL04:VBx01-CV7501:Valve", "P2DT-CDL04:VBx01-XV7501:Valve",
"SCL32-CDL03:VBx19-CV7501:Valve", "SCL32-CDL03:VBx19-XV7501:Valve", "SCL32-CDL03:VBx18-CV7501:Valve",
"SCL32-CDL03:VBx18-XV7501:Valve", "SCL32-CDL03:VBx17-CV7501:Valve", "SCL32-CDL03:VBx17-XV7501:Valve",
"SCL32-CDL03:VBx16-CV7501:Valve", "SCL32-CDL03:VBx16-XV7501:Valve", "SCL32-CDL03:VBx15-CV7501:Valve",
"SCL32-CDL03:VBx15-XV7501:Valve", "SCL32-CDL03:VBx14-CV7501:Valve", "SCL32-CDL03:VBx14-XV7501:Valve",
"SCL32-CDL03:VBx13-CV7501:Valve", "SCL32-CDL03:VBx13-XV7501:Valve", "SCL32-CDL03:VBx12-CV7501:Valve",
"SCL32-CDL03:VBx12-XV7501:Valve", "SCL32-CDL03:VBx11-CV7501:Valve", "SCL32-CDL03:VBx11-XV7501:Valve",
"SCL32-CDL03:VBx10-CV7501:Valve", "SCL32-CDL03:VBx10-XV7501:Valve", "SCL32-CDL03:VBx09-CV7501:Valve",
"SCL32-CDL03:VBx09-XV7501:Valve", "SCL32-CDL03:VBx08-CV7501:Valve", "SCL32-CDL03:VBx08-XV7501:Valve",
"SCL32-CDL03:VBx07-CV7501:Valve", "SCL32-CDL03:VBx07-XV7501:Valve", "SCL32-CDL03:VBx06-CV7501:Valve",
"SCL32-CDL03:VBx06-XV7501:Valve", "SCL32-CDL03:VBx05-CV7501:Valve", "SCL32-CDL03:VBx05-XV7501:Valve",
"SCL32-CDL03:VBx04-CV7501:Valve", "SCL32-CDL03:VBx04-XV7501:Valve", "SCL32-CDL03:VBx03-CV7501:Valve",
"SCL32-CDL03:VBx03-XV7501:Valve", "SCL32-CDL03:VBx02-CV7501:Valve", "SCL32-CDL03:VBx02-XV7501:Valve",
"SCL32-CDL03:VBx01-CV7501:Valve", "SCL32-CDL03:VBx01-XV7501:Valve", "SCL32-CDL02:VBx13-CV7501:Valve",
"SCL32-CDL02:VBx13-XV7501:Valve", "SCL32-CDL02:VBx12-CV7501:Valve", "SCL32-CDL02:VBx12-XV7501:Valve",
"SCL32-CDL02:VBx11-CV7501:Valve", "SCL32-CDL02:VBx11-XV7501:Valve", "SCL32-CDL02:VBx10-CV7501:Valve",
"SCL32-CDL02:VBx10-XV7501:Valve", "SCL32-CDL02:VBx09-CV7501:Valve", "SCL32-CDL02:VBx09-XV7501:Valve",
"SCL32-CDL02:VBx08-CV7501:Valve", "SCL32-CDL02:VBx08-XV7501:Valve", "SCL32-CDL02:VBx07-CV7501:Valve",
"SCL32-CDL02:VBx07-XV7501:Valve", "SCL32-CDL02:VBx06-CV7501:Valve", "SCL32-CDL02:VBx06-XV7501:Valve",
"SCL32-CDL02:VBx05-CV7501:Valve", "SCL32-CDL02:VBx05-XV7501:Valve", "SCL32-CDL02:VBx04-CV7501:Valve",
"SCL32-CDL02:VBx04-XV7501:Valve", "SCL32-CDL02:VBx03-CV7501:Valve", "SCL32-CDL02:VBx03-XV7501:Valve",
"SCL32-CDL02:VBx02-CV7501:Valve", "SCL32-CDL02:VBx02-XV7501:Valve", "SCL32-CDL02:VBx01-CV7501:Valve",
"SCL32-CDL02:VBx01-XV7501:Valve", "SCL31-CDL01:VBx22-CV7501:Valve", "SCL31-CDL01:VBx22-CV7502:Valve",
"SCL31-CDL01:VBx22-XV7501:Valve", "SCL31-CDL01:VBx20-CV7501:Valve", "SCL31-CDL01:VBx20-CV7502:Valve",
"SCL31-CDL01:VBx20-XV7501:Valve", "SCL31-CDL01:VBx18-CV7501:Valve", "SCL31-CDL01:VBx18-CV7502:Valve",
"SCL31-CDL01:VBx18-XV7501:Valve", "SCL31-CDL01:VBx16-CV7501:Valve", "SCL31-CDL01:VBx16-CV7502:Valve",
"SCL31-CDL01:VBx16-XV7501:Valve", "SCL31-CDL01:VBx14-CV7501:Valve", "SCL31-CDL01:VBx14-CV7502:Valve",
"SCL31-CDL01:VBx14-XV7501:Valve", "SCL31-CDL01:VBx12-CV7501:Valve", "SCL31-CDL01:VBx12-CV7502:Valve",
"SCL31-CDL01:VBx12-XV7501:Valve", "SCL31-CDL01:VBx10-CV7501:Valve", "SCL31-CDL01:VBx10-CV7502:Valve",
"SCL31-CDL01:VBx10-XV7501:Valve", "SCL31-CDL01:VBx08-CV7501:Valve", "SCL31-CDL01:VBx08-CV7502:Valve",
"SCL31-CDL01:VBx08-XV7501:Valve", "SCL31-CDL01:VBx06-CV7501:Valve", "SCL31-CDL01:VBx06-CV7502:Valve",
"SCL31-CDL01:VBx06-XV7501:Valve", "SCL31-CDL01:VBx04-CV7501:Valve", "SCL31-CDL01:VBx04-CV7502:Valve",
"SCL31-CDL01:VBx04-XV7501:Valve", "SCL31-CDL01:VBx02-CV7501:Valve", "SCL31-CDL01:VBx02-CV7502:Valve",
"SCL31-CDL01:VBx02-XV7501:Valve", "SCL31-CDL01:EBx01-CV7502:Valve"
};
monitor valveVal;

evflag  evFanout;
sync	valveVal	evFanout;

int index = 0;
assign index to "SCL3:Cooldown:IndexPV";
monitor index;

int proc = 1;

float cdFOVal;
assign cdFOVal to "SCL3:Cooldown:FanoutValue";
monitor cdFOVal;

float cdDelay;
assign cdDelay to "SCL3:Cooldown:ScanTime";
monitor cdDelay;

float	valvewave[77];
assign	valvewave to "SCL3:Cooldown:ValveTot";
monitor valvewave;

ss ss_cdfanout
{
	state CDFanout
	{
		when(delay(cdDelay)) 
		{
			if(cdFOVal == 100) {
				cdFOVal = 0;
				index++;
				pvPut(index, SYNC);
			} else {
				cdFOVal = valveVal[index];
			};

			pvPut(cdFOVal, SYNC);
			if(index < 7)
			{
				om03logicProc[index] = proc;
				pvPut(om03logicProc[index], SYNC);
			};
		}state CDFanout
	}
}

ss ss_valvewave
{
	state init
	{
		when(TRUE)
		{
			efClear(evFanout);
		}state MakeValveWave
	}

	state MakeValveWave
	{
		when(efTestAndClear(evFanout)) 
		{
			int idx = 0;
			%%for(idx = 0; idx < 77;idx++)
				valvewave[idx] = valveVal[idx];

			pvPut(valvewave, SYNC);
		}state MakeValveWave
	}
}

