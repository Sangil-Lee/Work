program CDOM121Logic
option +r;

%% #include <math.h>

int om121LogicProc[2];
assign om121LogicProc to {
"SLC31-CDL01:EBx01-CV7401:CDLogic.PROC", "SLC31-CDL01:EBx01-CV7402:CDLogic.PROC"
};
monitor om121LogicProc;

int     om121HeaterLogicProc;
assign  om121HeaterLogicProc to "SLC31-CDL01:EBx01-EH7401:CDLogic.PROC";
monitor om121HeaterLogicProc;

float valveVal[2];
assign valveVal to {
"SLC31-CDL01:EBx01-CV7401:Valve", "SLC31-CDL01:EBx01-CV7402:Valve"
};
monitor valveVal;

float   heaterVal;
assign  heaterVal to "SLC31-CDL01:EBx01-EH7401:Heater";
monitor heaterVal;

evflag  evFanout;
sync	valveVal	evFanout;

int index = 0;
assign index to "SCL3:CD-OM121:IndexPV";
monitor index;

int proc = 1;

float om121Val;
assign om121Val to "SCL3:CD-OM121:Value";
monitor om121Val;

float cdDelay;
assign cdDelay to "SCL3:CD-OM121:ScanTime";
monitor cdDelay;


ss ssCDOM121
{
	state CDOM121
	{
		when(delay(cdDelay)) 
		{
			if(om121Val == 100) {
				om121Val = 0;
				index++;
				pvPut(index, SYNC);
			} else {
				om121Val = valveVal[index];
			};

			pvPut(om121Val, SYNC);
			if(index < 2)
			{
				om121LogicProc[index] = proc;
				pvPut(om121LogicProc[index], SYNC);
			};
		}state CDOM121
	}
	
}

