program CDOMCompile
option +r;

%% #include <math.h>

//QWR Cycle(0<Cycle<12), HWR Cycle( 12=<Cycle<44), P2DT(Cycle == 44)
//QWR Cycle(OM1.4), 77
//Cycle to 11, Index to 7
//int om14QWRLogicProc[11][7];
int om14QWRLogicProc[77];
assign om14QWRLogicProc to {
//QWR1(Cycle1)																																																																										
"SCL31-CDL01:VBx02-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7401:CDLogic.PROC", "SCL31-BL01:CM01-CV8401:CDLogic.PROC", "SCL31-BL01:CM02-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7401:CDLogic.PROC", "SCL31-BL01:CM01-CV8402:CDLogic.PROC", "SCL31-BL01:CM02-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR2(Cycle2)																																																																										
"SCL31-CDL01:VBx04-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7401:CDLogic.PROC", "SCL31-BL01:CM03-CV8401:CDLogic.PROC", "SCL31-BL01:CM04-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7401:CDLogic.PROC", "SCL31-BL01:CM03-CV8402:CDLogic.PROC", "SCL31-BL01:CM04-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR3(Cycle3)																																																																										
"SCL31-CDL01:VBx06-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7401:CDLogic.PROC", "SCL31-BL01:CM05-CV8401:CDLogic.PROC", "SCL31-BL01:CM06-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7401:CDLogic.PROC", "SCL31-BL01:CM05-CV8402:CDLogic.PROC", "SCL31-BL01:CM06-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR4(Cycle4)																																																																										
"SCL31-CDL01:VBx08-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7401:CDLogic.PROC", "SCL31-BL01:CM07-CV8401:CDLogic.PROC", "SCL31-BL01:CM08-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7401:CDLogic.PROC", "SCL31-BL01:CM07-CV8402:CDLogic.PROC", "SCL31-BL01:CM08-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR5(Cycle5)																																																																										
"SCL31-CDL01:VBx10-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7401:CDLogic.PROC", "SCL31-BL01:CM09-CV8401:CDLogic.PROC", "SCL31-BL01:CM10-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7401:CDLogic.PROC", "SCL31-BL01:CM09-CV8402:CDLogic.PROC", "SCL31-BL01:CM10-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR6(Cycle6)																																																																										
"SCL31-CDL01:VBx12-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7401:CDLogic.PROC", "SCL31-BL01:CM11-CV8401:CDLogic.PROC", "SCL31-BL01:CM12-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7401:CDLogic.PROC", "SCL31-BL01:CM11-CV8402:CDLogic.PROC", "SCL31-BL01:CM12-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR7(Cycle7)																																																																										
"SCL31-CDL01:VBx14-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7401:CDLogic.PROC", "SCL31-BL01:CM13-CV8401:CDLogic.PROC", "SCL31-BL01:CM14-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7401:CDLogic.PROC", "SCL31-BL01:CM13-CV8402:CDLogic.PROC", "SCL31-BL01:CM14-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR8(Cycle8)																																																																										
"SCL31-CDL01:VBx16-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7401:CDLogic.PROC", "SCL31-BL01:CM15-CV8401:CDLogic.PROC", "SCL31-BL01:CM16-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7401:CDLogic.PROC", "SCL31-BL01:CM15-CV8402:CDLogic.PROC", "SCL31-BL01:CM16-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR9(Cycle9)																																																																										
"SCL31-CDL01:VBx18-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7401:CDLogic.PROC", "SCL31-BL01:CM17-CV8401:CDLogic.PROC", "SCL31-BL01:CM18-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7401:CDLogic.PROC", "SCL31-BL01:CM17-CV8402:CDLogic.PROC", "SCL31-BL01:CM18-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR10(Cycle10)																																																																										
"SCL31-CDL01:VBx20-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7401:CDLogic.PROC", "SCL31-BL01:CM19-CV8401:CDLogic.PROC", "SCL31-BL01:CM20-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7401:CDLogic.PROC", "SCL31-BL01:CM19-CV8402:CDLogic.PROC", "SCL31-BL01:CM20-CV8402:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//QWR11(Cycle11)																																																																										
"SCL31-CDL01:VBx22-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7401:CDLogic.PROC", "SCL31-BL01:CM21-CV8401:CDLogic.PROC", "SCL31-BL01:CM22-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7401:CDLogic.PROC", "SCL31-BL01:CM21-CV8402:CDLogic.PROC", "SCL31-BL01:CM22-CV8402:CDLogic.PROC" //-> Next(OM1.5,LHe Filling)
};
monitor om14QWRLogicProc;


//HWR/P2DT Cycle(OM1.4), 33*6=198
//Cycle to 33, Index to 6
//int om14HWRLogicProc[33][6];
int om14HWRLogicProc[198];
assign om14HWRLogicProc to {
//HWRA1(Cycle 12)																																																																										
"SCL32-CDL02:VBx01-XV7201:CDLogic.PROC","SCL32-CDL02:VBx01-CV7401:CDLogic.PROC", "SCL32-BL02:CM01-CV8401:CDLogic.PROC", "SCL32-BL02:CM01-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx01-CV7401:CDLogic.PROC", "SCL32-BL02:CM01-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA2(Cycle 13)																																																																										
"SCL32-CDL02:VBx02-XV7201:CDLogic.PROC","SCL32-CDL02:VBx02-CV7401:CDLogic.PROC", "SCL32-BL02:CM02-CV8401:CDLogic.PROC", "SCL32-BL02:CM02-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx02-CV7401:CDLogic.PROC", "SCL32-BL02:CM02-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA3(Cycle 14)																																																																										
"SCL32-CDL02:VBx03-XV7201:CDLogic.PROC","SCL32-CDL02:VBx03-CV7401:CDLogic.PROC", "SCL32-BL02:CM03-CV8401:CDLogic.PROC", "SCL32-BL02:CM03-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx03-CV7401:CDLogic.PROC", "SCL32-BL02:CM03-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA4(Cycle 15)																																																																										
"SCL32-CDL02:VBx04-XV7201:CDLogic.PROC","SCL32-CDL02:VBx04-CV7401:CDLogic.PROC", "SCL32-BL02:CM04-CV8401:CDLogic.PROC", "SCL32-BL02:CM04-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx04-CV7401:CDLogic.PROC", "SCL32-BL02:CM04-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA5(Cycle 16)																																																																										
"SCL32-CDL02:VBx05-XV7201:CDLogic.PROC","SCL32-CDL02:VBx05-CV7401:CDLogic.PROC", "SCL32-BL02:CM05-CV8401:CDLogic.PROC", "SCL32-BL02:CM05-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx05-CV7401:CDLogic.PROC", "SCL32-BL02:CM05-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA6(Cycle 17)																																																																										
"SCL32-CDL02:VBx06-XV7201:CDLogic.PROC","SCL32-CDL02:VBx06-CV7401:CDLogic.PROC", "SCL32-BL02:CM06-CV8401:CDLogic.PROC", "SCL32-BL02:CM06-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx06-CV7401:CDLogic.PROC", "SCL32-BL02:CM06-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA7(Cycle 18)																																																																										
"SCL32-CDL02:VBx07-XV7201:CDLogic.PROC","SCL32-CDL02:VBx07-CV7401:CDLogic.PROC", "SCL32-BL02:CM07-CV8401:CDLogic.PROC", "SCL32-BL02:CM07-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx07-CV7401:CDLogic.PROC", "SCL32-BL02:CM07-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA8(Cycle 19)																																																																										
"SCL32-CDL02:VBx08-XV7201:CDLogic.PROC","SCL32-CDL02:VBx08-CV7401:CDLogic.PROC", "SCL32-BL02:CM08-CV8401:CDLogic.PROC", "SCL32-BL02:CM08-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx08-CV7401:CDLogic.PROC", "SCL32-BL02:CM08-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA9(Cycle 20)																																																																										
"SCL32-CDL02:VBx09-XV7201:CDLogic.PROC","SCL32-CDL02:VBx09-CV7401:CDLogic.PROC", "SCL32-BL02:CM09-CV8401:CDLogic.PROC", "SCL32-BL02:CM09-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx09-CV7401:CDLogic.PROC", "SCL32-BL02:CM09-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA10(Cycle 21)																																																																										
"SCL32-CDL02:VBx10-XV7201:CDLogic.PROC","SCL32-CDL02:VBx10-CV7401:CDLogic.PROC", "SCL32-BL02:CM10-CV8401:CDLogic.PROC", "SCL32-BL02:CM10-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx10-CV7401:CDLogic.PROC", "SCL32-BL02:CM10-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA11(Cycle 22)																																																																										
"SCL32-CDL02:VBx11-XV7201:CDLogic.PROC","SCL32-CDL02:VBx11-CV7401:CDLogic.PROC", "SCL32-BL02:CM11-CV8401:CDLogic.PROC", "SCL32-BL02:CM11-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx11-CV7401:CDLogic.PROC", "SCL32-BL02:CM11-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA12(Cycle 23)																																																																										
"SCL32-CDL02:VBx12-XV7201:CDLogic.PROC","SCL32-CDL02:VBx12-CV7401:CDLogic.PROC", "SCL32-BL02:CM12-CV8401:CDLogic.PROC", "SCL32-BL02:CM12-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx12-CV7401:CDLogic.PROC", "SCL32-BL02:CM12-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRA13(Cycle 24)																																																																										
"SCL32-CDL02:VBx13-XV7201:CDLogic.PROC","SCL32-CDL02:VBx13-CV7401:CDLogic.PROC", "SCL32-BL02:CM13-CV8401:CDLogic.PROC", "SCL32-BL02:CM13-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx13-CV7401:CDLogic.PROC", "SCL32-BL02:CM13-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB1(Cycle 25)																																																																										
"SCL32-CDL03:VBx01-XV7201:CDLogic.PROC","SCL32-CDL03:VBx01-CV7401:CDLogic.PROC", "SCL32-BL03:CM01-CV8401:CDLogic.PROC", "SCL32-BL03:CM01-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx01-CV7401:CDLogic.PROC", "SCL32-BL03:CM01-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB2(Cycle 26)																																																																										
"SCL32-CDL03:VBx02-XV7201:CDLogic.PROC","SCL32-CDL03:VBx02-CV7401:CDLogic.PROC", "SCL32-BL03:CM02-CV8401:CDLogic.PROC", "SCL32-BL03:CM02-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx02-CV7401:CDLogic.PROC", "SCL32-BL03:CM02-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB3(Cycle 27)																																																																										
"SCL32-CDL03:VBx03-XV7201:CDLogic.PROC","SCL32-CDL03:VBx03-CV7401:CDLogic.PROC", "SCL32-BL03:CM03-CV8401:CDLogic.PROC", "SCL32-BL03:CM03-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx03-CV7401:CDLogic.PROC", "SCL32-BL03:CM03-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB4(Cycle 28)																																																																										
"SCL32-CDL03:VBx04-XV7201:CDLogic.PROC","SCL32-CDL03:VBx04-CV7401:CDLogic.PROC", "SCL32-BL03:CM04-CV8401:CDLogic.PROC", "SCL32-BL03:CM04-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx04-CV7401:CDLogic.PROC", "SCL32-BL03:CM04-CV8403:CDLogic.PROC",  //-> Next(OM1.5,LHe Filling)
//HWRB5(Cycle 29)																																																																										
"SCL32-CDL03:VBx05-XV7201:CDLogic.PROC","SCL32-CDL03:VBx05-CV7401:CDLogic.PROC", "SCL32-BL03:CM05-CV8401:CDLogic.PROC", "SCL32-BL03:CM05-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx05-CV7401:CDLogic.PROC", "SCL32-BL03:CM05-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB6(Cycle 30)																																																																										
"SCL32-CDL03:VBx06-XV7201:CDLogic.PROC","SCL32-CDL03:VBx06-CV7401:CDLogic.PROC", "SCL32-BL03:CM06-CV8401:CDLogic.PROC", "SCL32-BL03:CM06-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx06-CV7401:CDLogic.PROC", "SCL32-BL03:CM06-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB7(Cycle 31)																																																																										
"SCL32-CDL03:VBx07-XV7201:CDLogic.PROC","SCL32-CDL03:VBx07-CV7401:CDLogic.PROC", "SCL32-BL03:CM07-CV8401:CDLogic.PROC", "SCL32-BL03:CM07-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx07-CV7401:CDLogic.PROC", "SCL32-BL03:CM07-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB8(Cycle 32)																																																																										
"SCL32-CDL03:VBx08-XV7201:CDLogic.PROC","SCL32-CDL03:VBx08-CV7401:CDLogic.PROC", "SCL32-BL03:CM08-CV8401:CDLogic.PROC", "SCL32-BL03:CM08-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx08-CV7401:CDLogic.PROC", "SCL32-BL03:CM08-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB9(Cycle 33)																																																																										
"SCL32-CDL03:VBx09-XV7201:CDLogic.PROC","SCL32-CDL03:VBx09-CV7401:CDLogic.PROC", "SCL32-BL03:CM09-CV8401:CDLogic.PROC", "SCL32-BL03:CM09-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx09-CV7401:CDLogic.PROC", "SCL32-BL03:CM09-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB10(Cycle 34)																																																																										
"SCL32-CDL03:VBx10-XV7201:CDLogic.PROC","SCL32-CDL03:VBx10-CV7401:CDLogic.PROC", "SCL32-BL03:CM10-CV8401:CDLogic.PROC", "SCL32-BL03:CM10-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx10-CV7401:CDLogic.PROC", "SCL32-BL03:CM10-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB11(Cycle 35)																																																																										
"SCL32-CDL03:VBx11-XV7201:CDLogic.PROC","SCL32-CDL03:VBx11-CV7401:CDLogic.PROC", "SCL32-BL03:CM11-CV8401:CDLogic.PROC", "SCL32-BL03:CM11-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx11-CV7401:CDLogic.PROC", "SCL32-BL03:CM11-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB12(Cycle 36)																																																																										
"SCL32-CDL03:VBx12-XV7201:CDLogic.PROC","SCL32-CDL03:VBx12-CV7401:CDLogic.PROC", "SCL32-BL03:CM12-CV8401:CDLogic.PROC", "SCL32-BL03:CM12-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx12-CV7401:CDLogic.PROC", "SCL32-BL03:CM12-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB13(Cycle 37)																																																																										
"SCL32-CDL03:VBx13-XV7201:CDLogic.PROC","SCL32-CDL03:VBx13-CV7401:CDLogic.PROC", "SCL32-BL03:CM13-CV8401:CDLogic.PROC", "SCL32-BL03:CM13-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx13-CV7401:CDLogic.PROC", "SCL32-BL03:CM13-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB14(Cycle 38)																																																																										
"SCL32-CDL03:VBx14-XV7201:CDLogic.PROC","SCL32-CDL03:VBx14-CV7401:CDLogic.PROC", "SCL32-BL03:CM14-CV8401:CDLogic.PROC", "SCL32-BL03:CM14-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx14-CV7401:CDLogic.PROC", "SCL32-BL03:CM14-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB15(Cycle 39)																																																																										
"SCL32-CDL03:VBx15-XV7201:CDLogic.PROC","SCL32-CDL03:VBx15-CV7401:CDLogic.PROC", "SCL32-BL03:CM15-CV8401:CDLogic.PROC", "SCL32-BL03:CM15-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx15-CV7401:CDLogic.PROC", "SCL32-BL03:CM15-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB16(Cycle 40)																																																																										
"SCL32-CDL03:VBx16-XV7201:CDLogic.PROC","SCL32-CDL03:VBx16-CV7401:CDLogic.PROC", "SCL32-BL03:CM16-CV8401:CDLogic.PROC", "SCL32-BL03:CM16-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx16-CV7401:CDLogic.PROC", "SCL32-BL03:CM16-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB17(Cycle 41)																																																																										
"SCL32-CDL03:VBx17-XV7201:CDLogic.PROC","SCL32-CDL03:VBx17-CV7401:CDLogic.PROC", "SCL32-BL03:CM17-CV8401:CDLogic.PROC", "SCL32-BL03:CM17-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx17-CV7401:CDLogic.PROC", "SCL32-BL03:CM17-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB18(Cycle 42)																																																																										
"SCL32-CDL03:VBx18-XV7201:CDLogic.PROC","SCL32-CDL03:VBx18-CV7401:CDLogic.PROC", "SCL32-BL03:CM18-CV8401:CDLogic.PROC", "SCL32-BL03:CM18-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx18-CV7401:CDLogic.PROC", "SCL32-BL03:CM18-CV8403:CDLogic.PROC", //-> Next(OM1.5,LHe Filling)
//HWRB19(Cycle 43)																																																																										
"SCL32-CDL03:VBx19-XV7201:CDLogic.PROC","SCL32-CDL03:VBx19-CV7401:CDLogic.PROC", "SCL32-BL03:CM19-CV8401:CDLogic.PROC", "SCL32-BL03:CM19-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx19-CV7401:CDLogic.PROC", "SCL32-BL03:CM19-CV8403:CDLogic.PROC",  //-> Next(OM1.5,LHe Filling)
//P2DT(Cycle 44)																																																																										
"P2DT-CDL04:VBx01-XV7201:CDLogic.PROC",  "P2DT-CDL04:VBx01-CV7401:CDLogic.PROC", "P2DT-BL04:CM01-CV8401:CDLogic.PROC", "P2DT-BL04:CM01-CV8402:CDLogic.PROC", "P2DT-CDL04:VBx01-CV7401:CDLogic.PROC", "P2DT-BL04:CM01-CV8403:CDLogic.PROC" //-> Next(OM1.5,LHe Filling)
};
monitor om14HWRLogicProc;

//QWR Cycle(OM1.5), 77
//Cycle to 11, Index to 7
int om15QWRLogicProc[11][7];
assign om15QWRLogicProc to {
//QWR1(Cycle 1)																																																																															
"SCL31-BL01:CM01-CV8402:CDLogic.PROC", "SCL31-BL01:CM02-CV8402:CDLogic.PROC", "SCL31-BL01:CM01-CV8401:CDLogic.PROC", "SCL31-BL01:CM02-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx02-XV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR2(Cycle 2)																																																																															
"SCL31-BL01:CM03-CV8402:CDLogic.PROC", "SCL31-BL01:CM04-CV8402:CDLogic.PROC", "SCL31-BL01:CM03-CV8401:CDLogic.PROC", "SCL31-BL01:CM04-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx04-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR3(Cycle 3)																																																																															
"SCL31-BL01:CM05-CV8402:CDLogic.PROC", "SCL31-BL01:CM06-CV8402:CDLogic.PROC", "SCL31-BL01:CM05-CV8401:CDLogic.PROC", "SCL31-BL01:CM06-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx06-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR4(Cycle 4)																																																																															
"SCL31-BL01:CM07-CV8402:CDLogic.PROC", "SCL31-BL01:CM08-CV8402:CDLogic.PROC", "SCL31-BL01:CM07-CV8401:CDLogic.PROC", "SCL31-BL01:CM08-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx08-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR5(Cycle 5)																																																																															
"SCL31-BL01:CM09-CV8402:CDLogic.PROC", "SCL31-BL01:CM10-CV8402:CDLogic.PROC", "SCL31-BL01:CM09-CV8401:CDLogic.PROC", "SCL31-BL01:CM10-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx10-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR6(Cycle 6)																																																																															
"SCL31-BL01:CM11-CV8402:CDLogic.PROC", "SCL31-BL01:CM12-CV8402:CDLogic.PROC", "SCL31-BL01:CM11-CV8401:CDLogic.PROC", "SCL31-BL01:CM12-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx12-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR7(Cycle 7)																																																																															
"SCL31-BL01:CM13-CV8402:CDLogic.PROC", "SCL31-BL01:CM14-CV8402:CDLogic.PROC", "SCL31-BL01:CM13-CV8401:CDLogic.PROC", "SCL31-BL01:CM14-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx14-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR8(Cycle 8)																																																																															
"SCL31-BL01:CM15-CV8402:CDLogic.PROC", "SCL31-BL01:CM16-CV8402:CDLogic.PROC", "SCL31-BL01:CM15-CV8401:CDLogic.PROC", "SCL31-BL01:CM16-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx16-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR9(Cycle 9)																																																																															
"SCL31-BL01:CM17-CV8402:CDLogic.PROC", "SCL31-BL01:CM18-CV8402:CDLogic.PROC", "SCL31-BL01:CM17-CV8401:CDLogic.PROC", "SCL31-BL01:CM18-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx18-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR10(Cycle 10)																																																																															
"SCL31-BL01:CM19-CV8402:CDLogic.PROC", "SCL31-BL01:CM20-CV8402:CDLogic.PROC", "SCL31-BL01:CM19-CV8401:CDLogic.PROC", "SCL31-BL01:CM20-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx20-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7301:CDLogic.PROC",  //-> Next Cycle(OM1.4)
//QWR11(Cycle 11)																																																																															
"SCL31-BL01:CM21-CV8402:CDLogic.PROC", "SCL31-BL01:CM22-CV8402:CDLogic.PROC", "SCL31-BL01:CM21-CV8401:CDLogic.PROC", "SCL31-BL01:CM22-CV8401:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7301:CDLogic.PROC", "SCL31-CDL01:VBx22-XV7301:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7301:CDLogic.PROC"  //-> Next Cycle(OM1.4)
};
monitor om15QWRLogicProc;

//HWR/P2DT Cycle(OM1.5), 264
//Cycle to 33, Index to 8
int om15HWRLogicProc[33][8];
assign om15HWRLogicProc to {
//HWRA1(Cycle 12)																																																																															
"SCL32-CDL02:VBx01-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx01-CV7301:CDLogic.PROC", "SCL32-BL02:CM01-CV8403:CDLogic.PROC", "SCL32-BL02:CM01-CV8401:CDLogic.PROC", "SCL32-BL02:CM01-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx01-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx01-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx01-CV7301:CDLogic.PROC",
//HWRA2(Cycle 13)																																																																															
"SCL32-CDL02:VBx02-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx02-CV7301:CDLogic.PROC", "SCL32-BL02:CM02-CV8403:CDLogic.PROC", "SCL32-BL02:CM02-CV8401:CDLogic.PROC", "SCL32-BL02:CM02-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx02-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx02-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx02-CV7301:CDLogic.PROC",
//HWRA3(Cycle 14)																																																																															
"SCL32-CDL02:VBx03-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx03-CV7301:CDLogic.PROC", "SCL32-BL02:CM03-CV8403:CDLogic.PROC", "SCL32-BL02:CM03-CV8401:CDLogic.PROC", "SCL32-BL02:CM03-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx03-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx03-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx03-CV7301:CDLogic.PROC",
//HWRA4(Cycle 15)																																																																															
"SCL32-CDL02:VBx04-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx04-CV7301:CDLogic.PROC", "SCL32-BL02:CM04-CV8403:CDLogic.PROC", "SCL32-BL02:CM04-CV8401:CDLogic.PROC", "SCL32-BL02:CM04-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx04-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx04-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx04-CV7301:CDLogic.PROC",
//HWRA5(Cycle 16)																																																																															
"SCL32-CDL02:VBx05-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx05-CV7301:CDLogic.PROC", "SCL32-BL02:CM05-CV8403:CDLogic.PROC", "SCL32-BL02:CM05-CV8401:CDLogic.PROC", "SCL32-BL02:CM05-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx05-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx05-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx05-CV7301:CDLogic.PROC",
//HWRA6(Cycle 17)																																																																															
"SCL32-CDL02:VBx06-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx06-CV7301:CDLogic.PROC", "SCL32-BL02:CM06-CV8403:CDLogic.PROC", "SCL32-BL02:CM06-CV8401:CDLogic.PROC", "SCL32-BL02:CM06-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx06-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx06-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx06-CV7301:CDLogic.PROC",
//HWRA7(Cycle 18)																																																																															
"SCL32-CDL02:VBx07-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx07-CV7301:CDLogic.PROC", "SCL32-BL02:CM07-CV8403:CDLogic.PROC", "SCL32-BL02:CM07-CV8401:CDLogic.PROC", "SCL32-BL02:CM07-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx07-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx07-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx07-CV7301:CDLogic.PROC",
//HWRA8(Cycle 19)																																																																															
"SCL32-CDL02:VBx08-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx08-CV7301:CDLogic.PROC", "SCL32-BL02:CM08-CV8403:CDLogic.PROC", "SCL32-BL02:CM08-CV8401:CDLogic.PROC", "SCL32-BL02:CM08-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx08-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx08-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx08-CV7301:CDLogic.PROC",
//HWRA9(Cycle 20)																																																																															
"SCL32-CDL02:VBx09-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx09-CV7301:CDLogic.PROC", "SCL32-BL02:CM09-CV8403:CDLogic.PROC", "SCL32-BL02:CM09-CV8401:CDLogic.PROC", "SCL32-BL02:CM09-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx09-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx09-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx09-CV7301:CDLogic.PROC",
//HWRA10(Cycle 21)																																																																															
"SCL32-CDL02:VBx10-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx10-CV7301:CDLogic.PROC", "SCL32-BL02:CM10-CV8403:CDLogic.PROC", "SCL32-BL02:CM10-CV8401:CDLogic.PROC", "SCL32-BL02:CM10-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx10-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx10-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx10-CV7301:CDLogic.PROC",
//HWRA11(Cycle 22)																																																																															
"SCL32-CDL02:VBx11-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx11-CV7301:CDLogic.PROC", "SCL32-BL02:CM11-CV8403:CDLogic.PROC", "SCL32-BL02:CM11-CV8401:CDLogic.PROC", "SCL32-BL02:CM11-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx11-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx11-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx11-CV7301:CDLogic.PROC",
//HWRA12(Cycle 23)																																																																															
"SCL32-CDL02:VBx12-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx12-CV7301:CDLogic.PROC", "SCL32-BL02:CM12-CV8403:CDLogic.PROC", "SCL32-BL02:CM12-CV8401:CDLogic.PROC", "SCL32-BL02:CM12-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx12-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx12-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx12-CV7301:CDLogic.PROC",
//HWRA13(Cycle 24)																																																																															
"SCL32-CDL02:VBx13-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx13-CV7301:CDLogic.PROC", "SCL32-BL02:CM13-CV8403:CDLogic.PROC", "SCL32-BL02:CM13-CV8401:CDLogic.PROC", "SCL32-BL02:CM13-CV8402:CDLogic.PROC", "SCL32-CDL02:VBx13-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx13-XV7201:CDLogic.PROC", "SCL32-CDL02:VBx13-CV7301:CDLogic.PROC",
//HWRB1(Cycle 25)																																																																															
"SCL32-CDL03:VBx01-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx01-CV7301:CDLogic.PROC", "SCL32-BL03:CM01-CV8403:CDLogic.PROC", "SCL32-BL03:CM01-CV8401:CDLogic.PROC", "SCL32-BL03:CM01-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx01-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx01-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx01-CV7301:CDLogic.PROC",
//HWRB2(Cycle 26)																																																																															
"SCL32-CDL03:VBx02-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx02-CV7301:CDLogic.PROC", "SCL32-BL03:CM02-CV8403:CDLogic.PROC", "SCL32-BL03:CM02-CV8401:CDLogic.PROC", "SCL32-BL03:CM02-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx02-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx02-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx02-CV7301:CDLogic.PROC",
//HWRB3(Cycle 27)																																																																															
"SCL32-CDL03:VBx03-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx03-CV7301:CDLogic.PROC", "SCL32-BL03:CM03-CV8403:CDLogic.PROC", "SCL32-BL03:CM03-CV8401:CDLogic.PROC", "SCL32-BL03:CM03-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx03-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx03-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx03-CV7301:CDLogic.PROC",
//HWRB4(Cycle 28)																																																																															
"SCL32-CDL03:VBx04-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx04-CV7301:CDLogic.PROC", "SCL32-BL03:CM04-CV8403:CDLogic.PROC", "SCL32-BL03:CM04-CV8401:CDLogic.PROC", "SCL32-BL03:CM04-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx04-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx04-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx04-CV7301:CDLogic.PROC",
//HWRB5(Cycle 29)																																																																															
"SCL32-CDL03:VBx05-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx05-CV7301:CDLogic.PROC", "SCL32-BL03:CM05-CV8403:CDLogic.PROC", "SCL32-BL03:CM05-CV8401:CDLogic.PROC", "SCL32-BL03:CM05-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx05-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx05-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx05-CV7301:CDLogic.PROC",
//HWRB6(Cycle 30)																																																																															
"SCL32-CDL03:VBx06-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx06-CV7301:CDLogic.PROC", "SCL32-BL03:CM06-CV8403:CDLogic.PROC", "SCL32-BL03:CM06-CV8401:CDLogic.PROC", "SCL32-BL03:CM06-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx06-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx06-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx06-CV7301:CDLogic.PROC",
//HWRB7(Cycle 31)																																																																															
"SCL32-CDL03:VBx07-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx07-CV7301:CDLogic.PROC", "SCL32-BL03:CM07-CV8403:CDLogic.PROC", "SCL32-BL03:CM07-CV8401:CDLogic.PROC", "SCL32-BL03:CM07-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx07-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx07-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx07-CV7301:CDLogic.PROC",
//HWRB8(Cycle 32)																																																																															
"SCL32-CDL03:VBx08-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx08-CV7301:CDLogic.PROC", "SCL32-BL03:CM08-CV8403:CDLogic.PROC", "SCL32-BL03:CM08-CV8401:CDLogic.PROC", "SCL32-BL03:CM08-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx08-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx08-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx08-CV7301:CDLogic.PROC",
//HWRB9(Cycle 33)																																																																															
"SCL32-CDL03:VBx09-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx09-CV7301:CDLogic.PROC", "SCL32-BL03:CM09-CV8403:CDLogic.PROC", "SCL32-BL03:CM09-CV8401:CDLogic.PROC", "SCL32-BL03:CM09-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx09-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx09-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx09-CV7301:CDLogic.PROC",
//HWRB10(Cycle 34)																																																																															
"SCL32-CDL03:VBx10-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx10-CV7301:CDLogic.PROC", "SCL32-BL03:CM10-CV8403:CDLogic.PROC", "SCL32-BL03:CM10-CV8401:CDLogic.PROC", "SCL32-BL03:CM10-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx10-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx10-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx10-CV7301:CDLogic.PROC",
//HWRB11(Cycle 35)																																																																															
"SCL32-CDL03:VBx11-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx11-CV7301:CDLogic.PROC", "SCL32-BL03:CM11-CV8403:CDLogic.PROC", "SCL32-BL03:CM11-CV8401:CDLogic.PROC", "SCL32-BL03:CM11-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx11-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx11-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx11-CV7301:CDLogic.PROC",
//HWRB12(Cycle 36)																																																																															
"SCL32-CDL03:VBx12-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx12-CV7301:CDLogic.PROC", "SCL32-BL03:CM12-CV8403:CDLogic.PROC", "SCL32-BL03:CM12-CV8401:CDLogic.PROC", "SCL32-BL03:CM12-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx12-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx12-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx12-CV7301:CDLogic.PROC",
//HWRB13(Cycle 37)																																																																															
"SCL32-CDL03:VBx13-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx13-CV7301:CDLogic.PROC", "SCL32-BL03:CM13-CV8403:CDLogic.PROC", "SCL32-BL03:CM13-CV8401:CDLogic.PROC", "SCL32-BL03:CM13-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx13-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx13-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx13-CV7301:CDLogic.PROC",
//HWRB14(Cycle 38)																																																																															
"SCL32-CDL03:VBx14-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx14-CV7301:CDLogic.PROC", "SCL32-BL03:CM14-CV8403:CDLogic.PROC", "SCL32-BL03:CM14-CV8401:CDLogic.PROC", "SCL32-BL03:CM14-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx14-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx14-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx14-CV7301:CDLogic.PROC",
//HWRB15(Cycle 39)																																																																															
"SCL32-CDL03:VBx15-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx15-CV7301:CDLogic.PROC", "SCL32-BL03:CM15-CV8403:CDLogic.PROC", "SCL32-BL03:CM15-CV8401:CDLogic.PROC", "SCL32-BL03:CM15-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx15-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx15-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx15-CV7301:CDLogic.PROC",
//HWRB16(Cycle 40)																																																																															
"SCL32-CDL03:VBx16-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx16-CV7301:CDLogic.PROC", "SCL32-BL03:CM16-CV8403:CDLogic.PROC", "SCL32-BL03:CM16-CV8401:CDLogic.PROC", "SCL32-BL03:CM16-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx16-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx16-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx16-CV7301:CDLogic.PROC",
//HWRB17(Cycle 41)																																																																															
"SCL32-CDL03:VBx17-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx17-CV7301:CDLogic.PROC", "SCL32-BL03:CM17-CV8403:CDLogic.PROC", "SCL32-BL03:CM17-CV8401:CDLogic.PROC", "SCL32-BL03:CM17-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx17-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx17-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx17-CV7301:CDLogic.PROC",
//HWRB18(Cycle 42)																																																																															
"SCL32-CDL03:VBx18-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx18-CV7301:CDLogic.PROC", "SCL32-BL03:CM18-CV8403:CDLogic.PROC", "SCL32-BL03:CM18-CV8401:CDLogic.PROC", "SCL32-BL03:CM18-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx18-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx18-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx18-CV7301:CDLogic.PROC",
//HWRB19(Cycle 43)																																																																															
"SCL32-CDL03:VBx19-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx19-CV7301:CDLogic.PROC", "SCL32-BL03:CM19-CV8403:CDLogic.PROC", "SCL32-BL03:CM19-CV8401:CDLogic.PROC", "SCL32-BL03:CM19-CV8402:CDLogic.PROC", "SCL32-CDL03:VBx19-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx19-XV7201:CDLogic.PROC", "SCL32-CDL03:VBx19-CV7301:CDLogic.PROC",
//P2DT(Cycle 44)																																																																															
"P2DT-CDL04:VBx01-CV7201:CDLogic.PROC", "P2DT-CDL04:VBx01-CV7301:CDLogic.PROC", "P2DT-BL04:CM01-CV8403:CDLogic.PROC", "P2DT-BL04:CM01-CV8401:CDLogic.PROC", "P2DT-BL04:CM01-CV8402:CDLogic.PROC", "P2DT-CDL04:VBx01-CV7201:CDLogic.PROC", "P2DT-CDL04:VBx01-XV7201:CDLogic.PROC", "P2DT-CDL04:VBx01-CV7301:CDLogic.PROC"
};
monitor om15HWRLogicProc;

%{
#if 0
//QWR Cycle(Auto Regulate), 33
//Cycle to 11, Index to 3
int omAutoLogicQWRProc[11][3];
assign omAutoLogicQWRProc to {
//Auto Regulate
//(Cycle 1)
"SCL31-BL01:CM01-CV8401:PLCAuto", "SCL31-BL01:CM02-CV8401:PLCAuto", "SCL31-CDL01:VBx02-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 2)
"SCL31-BL01:CM03-CV8401:PLCAuto", "SCL31-BL01:CM04-CV8401:PLCAuto", "SCL31-CDL01:VBx04-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 3)
"SCL31-BL01:CM05-CV8401:PLCAuto", "SCL31-BL01:CM06-CV8401:PLCAuto", "SCL31-CDL01:VBx06-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 4)
"SCL31-BL01:CM07-CV8401:PLCAuto", "SCL31-BL01:CM08-CV8401:PLCAuto", "SCL31-CDL01:VBx08-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 5)
"SCL31-BL01:CM09-CV8401:PLCAuto", "SCL31-BL01:CM10-CV8401:PLCAuto", "SCL31-CDL01:VBx10-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 6)
"SCL31-BL01:CM11-CV8401:PLCAuto", "SCL31-BL01:CM12-CV8401:PLCAuto", "SCL31-CDL01:VBx12-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 7)
"SCL31-BL01:CM13-CV8401:PLCAuto", "SCL31-BL01:CM14-CV8401:PLCAuto", "SCL31-CDL01:VBx14-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 8)
"SCL31-BL01:CM15-CV8401:PLCAuto", "SCL31-BL01:CM16-CV8401:PLCAuto", "SCL31-CDL01:VBx16-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 9)
"SCL31-BL01:CM17-CV8401:PLCAuto", "SCL31-BL01:CM18-CV8401:PLCAuto", "SCL31-CDL01:VBx18-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 10)
"SCL31-BL01:CM19-CV8401:PLCAuto", "SCL31-BL01:CM20-CV8401:PLCAuto", "SCL31-CDL01:VBx20-CV7301:PLCAuto", //-> Next Cycle(OM1.4)
//(Cycle 11)
"SCL31-BL01:CM21-CV8401:PLCAuto", "SCL31-BL01:CM22-CV8401:PLCAuto", "SCL31-CDL01:VBx22-CV7301:PLCAuto" //-> Next Cycle(OM1.4)
};

//HWR/P2DT Cycle(Auto Regulate), 33
//Cycle to 33, Index to 4
int omAutoLogicHWRProc[33][4];
assign omAutoLogicHWRProc to {
//HWRA(1-13)
//(Cycle 12)
"SCL32-BL02:CM01-CV8401:PLCAuto", "SCL32-BL02:CM01-CV8402:PLCAuto", "SCL32-CDL02:VBx01-CV7301:PLCAuto", "SCL32-CDL02:VBx01-CV7201:PLCAuto",
//(Cycle 13)
"SCL32-BL02:CM02-CV8401:PLCAuto", "SCL32-BL02:CM02-CV8402:PLCAuto", "SCL32-CDL02:VBx02-CV7301:PLCAuto", "SCL32-CDL02:VBx02-CV7201:PLCAuto",
//(Cycle 14)
"SCL32-BL02:CM03-CV8401:PLCAuto", "SCL32-BL02:CM03-CV8402:PLCAuto", "SCL32-CDL02:VBx03-CV7301:PLCAuto", "SCL32-CDL02:VBx03-CV7201:PLCAuto",
//(Cycle 15)
"SCL32-BL02:CM04-CV8401:PLCAuto", "SCL32-BL02:CM04-CV8402:PLCAuto", "SCL32-CDL02:VBx04-CV7301:PLCAuto", "SCL32-CDL02:VBx04-CV7201:PLCAuto",
//(Cycle 16)
"SCL32-BL02:CM05-CV8401:PLCAuto", "SCL32-BL02:CM05-CV8402:PLCAuto", "SCL32-CDL02:VBx05-CV7301:PLCAuto", "SCL32-CDL02:VBx05-CV7201:PLCAuto",
//(Cycle 17)
"SCL32-BL02:CM06-CV8401:PLCAuto", "SCL32-BL02:CM06-CV8402:PLCAuto", "SCL32-CDL02:VBx06-CV7301:PLCAuto", "SCL32-CDL02:VBx06-CV7201:PLCAuto",
//(Cycle 18)
"SCL32-BL02:CM07-CV8401:PLCAuto", "SCL32-BL02:CM07-CV8402:PLCAuto", "SCL32-CDL02:VBx07-CV7301:PLCAuto", "SCL32-CDL02:VBx07-CV7201:PLCAuto",
//(Cycle 19)
"SCL32-BL02:CM08-CV8401:PLCAuto", "SCL32-BL02:CM08-CV8402:PLCAuto", "SCL32-CDL02:VBx08-CV7301:PLCAuto", "SCL32-CDL02:VBx08-CV7201:PLCAuto",
//(Cycle 20)
"SCL32-BL02:CM09-CV8401:PLCAuto", "SCL32-BL02:CM09-CV8402:PLCAuto", "SCL32-CDL02:VBx09-CV7301:PLCAuto", "SCL32-CDL02:VBx09-CV7201:PLCAuto",
//(Cycle 21)
"SCL32-BL02:CM10-CV8401:PLCAuto", "SCL32-BL02:CM10-CV8402:PLCAuto", "SCL32-CDL02:VBx10-CV7301:PLCAuto", "SCL32-CDL02:VBx10-CV7201:PLCAuto",
//(Cycle 22)
"SCL32-BL02:CM11-CV8401:PLCAuto", "SCL32-BL02:CM11-CV8402:PLCAuto", "SCL32-CDL02:VBx11-CV7301:PLCAuto", "SCL32-CDL02:VBx11-CV7201:PLCAuto",
//(Cycle 23)
"SCL32-BL02:CM12-CV8401:PLCAuto", "SCL32-BL02:CM12-CV8402:PLCAuto", "SCL32-CDL02:VBx12-CV7301:PLCAuto", "SCL32-CDL02:VBx12-CV7201:PLCAuto",
//(Cycle 24)
"SCL32-BL02:CM13-CV8401:PLCAuto", "SCL32-BL02:CM13-CV8402:PLCAuto", "SCL32-CDL02:VBx13-CV7301:PLCAuto", "SCL32-CDL02:VBx13-CV7201:PLCAuto",
//(Cycle 25)HWRB(1-19)
"SCL32-BL03:CM01-CV8401:PLCAuto", "SCL32-CDL03:VBx01-CV7301:PLCAuto", "SCL32-BL03:CM01-CV8402:PLCAuto", "SCL32-CDL03:VBx01-CV7201:PLCAuto",
//(Cycle 26)
"SCL32-BL03:CM02-CV8401:PLCAuto", "SCL32-CDL03:VBx02-CV7301:PLCAuto", "SCL32-BL03:CM02-CV8402:PLCAuto", "SCL32-CDL03:VBx02-CV7201:PLCAuto",
//(Cycle 27)
"SCL32-BL03:CM03-CV8401:PLCAuto", "SCL32-CDL03:VBx03-CV7301:PLCAuto", "SCL32-BL03:CM03-CV8402:PLCAuto", "SCL32-CDL03:VBx03-CV7201:PLCAuto",
//(Cycle 28)
"SCL32-BL03:CM04-CV8401:PLCAuto", "SCL32-CDL03:VBx04-CV7301:PLCAuto", "SCL32-BL03:CM04-CV8402:PLCAuto", "SCL32-CDL03:VBx04-CV7201:PLCAuto",
//(Cycle 29)
"SCL32-BL03:CM05-CV8401:PLCAuto", "SCL32-CDL03:VBx05-CV7301:PLCAuto", "SCL32-BL03:CM05-CV8402:PLCAuto", "SCL32-CDL03:VBx05-CV7201:PLCAuto",
//(Cycle 30)
"SCL32-BL03:CM06-CV8401:PLCAuto", "SCL32-CDL03:VBx06-CV7301:PLCAuto", "SCL32-BL03:CM06-CV8402:PLCAuto", "SCL32-CDL03:VBx06-CV7201:PLCAuto",
//(Cycle 31)
"SCL32-BL03:CM07-CV8401:PLCAuto", "SCL32-CDL03:VBx07-CV7301:PLCAuto", "SCL32-BL03:CM07-CV8402:PLCAuto", "SCL32-CDL03:VBx07-CV7201:PLCAuto",
//(Cycle 32)
"SCL32-BL03:CM08-CV8401:PLCAuto", "SCL32-CDL03:VBx08-CV7301:PLCAuto", "SCL32-BL03:CM08-CV8402:PLCAuto", "SCL32-CDL03:VBx08-CV7201:PLCAuto",
//(Cycle 33)
"SCL32-BL03:CM09-CV8401:PLCAuto", "SCL32-CDL03:VBx09-CV7301:PLCAuto", "SCL32-BL03:CM09-CV8402:PLCAuto", "SCL32-CDL03:VBx09-CV7201:PLCAuto",
//(Cycle 34)
"SCL32-BL03:CM10-CV8401:PLCAuto", "SCL32-CDL03:VBx10-CV7301:PLCAuto", "SCL32-BL03:CM10-CV8402:PLCAuto", "SCL32-CDL03:VBx10-CV7201:PLCAuto",
//(Cycle 35)
"SCL32-BL03:CM11-CV8401:PLCAuto", "SCL32-CDL03:VBx11-CV7301:PLCAuto", "SCL32-BL03:CM11-CV8402:PLCAuto", "SCL32-CDL03:VBx11-CV7201:PLCAuto",
//(Cycle 36)
"SCL32-BL03:CM12-CV8401:PLCAuto", "SCL32-CDL03:VBx12-CV7301:PLCAuto", "SCL32-BL03:CM12-CV8402:PLCAuto", "SCL32-CDL03:VBx12-CV7201:PLCAuto",
//(Cycle 37)
"SCL32-BL03:CM13-CV8401:PLCAuto", "SCL32-CDL03:VBx13-CV7301:PLCAuto", "SCL32-BL03:CM13-CV8402:PLCAuto", "SCL32-CDL03:VBx13-CV7201:PLCAuto",
//(Cycle 38)
"SCL32-BL03:CM14-CV8401:PLCAuto", "SCL32-CDL03:VBx14-CV7301:PLCAuto", "SCL32-BL03:CM14-CV8402:PLCAuto", "SCL32-CDL03:VBx14-CV7201:PLCAuto",
//(Cycle 39)
"SCL32-BL03:CM15-CV8401:PLCAuto", "SCL32-CDL03:VBx15-CV7301:PLCAuto", "SCL32-BL03:CM15-CV8402:PLCAuto", "SCL32-CDL03:VBx15-CV7201:PLCAuto",
//(Cycle 40)
"SCL32-BL03:CM16-CV8401:PLCAuto", "SCL32-CDL03:VBx16-CV7301:PLCAuto", "SCL32-BL03:CM16-CV8402:PLCAuto", "SCL32-CDL03:VBx16-CV7201:PLCAuto",
//(Cycle 41)
"SCL32-BL03:CM17-CV8401:PLCAuto", "SCL32-CDL03:VBx17-CV7301:PLCAuto", "SCL32-BL03:CM17-CV8402:PLCAuto", "SCL32-CDL03:VBx17-CV7201:PLCAuto",
//(Cycle 42)
"SCL32-BL03:CM18-CV8401:PLCAuto", "SCL32-CDL03:VBx18-CV7301:PLCAuto", "SCL32-BL03:CM18-CV8402:PLCAuto", "SCL32-CDL03:VBx18-CV7201:PLCAuto",
//(Cycle 43)
"SCL32-BL03:CM19-CV8401:PLCAuto", "SCL32-CDL03:VBx19-CV7301:PLCAuto", "SCL32-BL03:CM19-CV8402:PLCAuto", "SCL32-CDL03:VBx19-CV7201:PLCAuto",
//(Cycle 44)P2DT
"P2DT-BL04:CM01-CV8401:PLCAuto", "P2DT-CDL04:VBx01-CV7301:PLCAuto", "P2DT-BL04:CM01-CV8402:PLCAuto", "P2DT-CDL04:VBx01-CV7201:PLCAuto"
};
monitor omAutoLogicProc;
#endif
}%

int omQWRPhaseEndProc[11][2];
assign omQWRPhaseEndProc to {
//PhaseEnd
//(Cycle 1)                                                         
"SCL31-BL01:CM01-LT8401:Level",  "SCL31-BL01:CM02-LT8401:Level",
//(Cycle 2)                                                         
"SCL31-BL01:CM03-LT8401:Level",  "SCL31-BL01:CM04-LT8401:Level",
//(Cycle 3)                                                         
"SCL31-BL01:CM05-LT8401:Level",  "SCL31-BL01:CM06-LT8401:Level",
//(Cycle 4)                                                         
"SCL31-BL01:CM07-LT8401:Level",  "SCL31-BL01:CM08-LT8401:Level",
//(Cycle 5)                                                         
"SCL31-BL01:CM09-LT8401:Level",  "SCL31-BL01:CM010-LT8401:Level",
//(Cycle 6)                                                         
"SCL31-BL01:CM011-LT8401:Level", "SCL31-BL01:CM012-LT8401:Level",
//(Cycle 7)                                                         
"SCL31-BL01:CM013-LT8401:Level", "SCL31-BL01:CM014-LT8401:Level",
//(Cycle 8)                                                         
"SCL31-BL01:CM015-LT8401:Level", "SCL31-BL01:CM016-LT8401:Level",
//(Cycle 9)                                                         
"SCL31-BL01:CM017-LT8401:Level", "SCL31-BL01:CM018-LT8401:Level",
//(Cycle 10)                                                         
"SCL31-BL01:CM019-LT8401:Level", "SCL31-BL01:CM020-LT8401:Level",
//(Cycle 11)                                                         
"SCL31-BL01:CM021-LT8401:Level", "SCL31-BL01:CM022-LT8401:Level"
};
monitor omQWRPhaseEndProc;

int omHWRPhaseEndProc[33][2];
assign omHWRPhaseEndProc to {
//(Cycle 12)                                                         
"SCL32-BL02:CM01-LT8201:Level", "SCL32-BL02:CM01-LT8401:Level",
//(Cycle 13)                                                         
"SCL32-BL02:CM02-LT8201:Level", "SCL32-BL02:CM02-LT8401:Level",
//(Cycle 14)                                                         
"SCL32-BL02:CM03-LT8201:Level", "SCL32-BL02:CM03-LT8401:Level",
//(Cycle 15)                                                         
"SCL32-BL02:CM04-LT8201:Level", "SCL32-BL02:CM04-LT8401:Level",
//(Cycle 16)                                                         
"SCL32-BL02:CM05-LT8201:Level", "SCL32-BL02:CM05-LT8401:Level",
//(Cycle 17)                                                         
"SCL32-BL02:CM06-LT8201:Level", "SCL32-BL02:CM06-LT8401:Level",
//(Cycle 18)                                                         
"SCL32-BL02:CM07-LT8201:Level", "SCL32-BL02:CM07-LT8401:Level",
//(Cycle 19)                                                         
"SCL32-BL02:CM08-LT8201:Level", "SCL32-BL02:CM08-LT8401:Level",
//(Cycle 20)                                                         
"SCL32-BL02:CM09-LT8201:Level", "SCL32-BL02:CM09-LT8401:Level",
//(Cycle 21)                                                         
"SCL32-BL02:CM10-LT8201:Level", "SCL32-BL02:CM10-LT8401:Level",
//(Cycle 22)                                                         
"SCL32-BL02:CM11-LT8201:Level", "SCL32-BL02:CM11-LT8401:Level",
//(Cycle 23)                                                         
"SCL32-BL02:CM12-LT8201:Level", "SCL32-BL02:CM12-LT8401:Level",
//(Cycle 24)                                                         
"SCL32-BL02:CM13-LT8201:Level", "SCL32-BL02:CM13-LT8401:Level",
//(Cycle 25)                                                         
"SCL32-BL03:CM01-LT8201:Level", "SCL32-BL03:CM01-LT8401:Level",
//(Cycle 26)                                                         
"SCL32-BL03:CM02-LT8201:Level", "SCL32-BL03:CM02-LT8401:Level",
//(Cycle 27)                                                         
"SCL32-BL03:CM03-LT8201:Level", "SCL32-BL03:CM03-LT8401:Level",
//(Cycle 28)                                                         
"SCL32-BL03:CM04-LT8201:Level", "SCL32-BL03:CM04-LT8401:Level",
//(Cycle 29)                                                         
"SCL32-BL03:CM05-LT8201:Level", "SCL32-BL03:CM05-LT8401:Level",
//(Cycle 30)                                                         
"SCL32-BL03:CM06-LT8201:Level", "SCL32-BL03:CM06-LT8401:Level",
//(Cycle 31)                                                         
"SCL32-BL03:CM07-LT8201:Level", "SCL32-BL03:CM07-LT8401:Level",
//(Cycle 32)                                                         
"SCL32-BL03:CM08-LT8201:Level", "SCL32-BL03:CM08-LT8401:Level",
//(Cycle 33)                                                         
"SCL32-BL03:CM09-LT8201:Level", "SCL32-BL03:CM09-LT8401:Level",
//(Cycle 34)                                                         
"SCL32-BL03:CM10-LT8201:Level", "SCL32-BL03:CM10-LT8401:Level",
//(Cycle 35)                                                         
"SCL32-BL03:CM11-LT8201:Level", "SCL32-BL03:CM11-LT8401:Level",
//(Cycle 36)                                                         
"SCL32-BL03:CM12-LT8201:Level", "SCL32-BL03:CM12-LT8401:Level",
//(Cycle 37)                                                         
"SCL32-BL03:CM13-LT8201:Level", "SCL32-BL03:CM13-LT8401:Level",
//(Cycle 38)                                                         
"SCL32-BL03:CM14-LT8201:Level", "SCL32-BL03:CM14-LT8401:Level",
//(Cycle 39)                                                         
"SCL32-BL03:CM15-LT8201:Level", "SCL32-BL03:CM15-LT8401:Level",
//(Cycle 40)                                                         
"SCL32-BL03:CM16-LT8201:Level", "SCL32-BL03:CM16-LT8401:Level",
//(Cycle 41)                                                         
"SCL32-BL03:CM17-LT8201:Level", "SCL32-BL03:CM17-LT8401:Level",
//(Cycle 42)                                                         
"SCL32-BL03:CM18-LT8201:Level", "SCL32-BL03:CM18-LT8401:Level",
//(Cycle 43)                                                         
"SCL32-BL03:CM19-LT8201:Level", "SCL32-BL03:CM19-LT8401:Level",
//(Cycle 44)                                                         
"P2DT-BL04:CM01-LT8201:Level",  "P2DT-BL04:CM01-LT8401:Level"
};
monitor omHWRPhaseEndProc;


float om14QWRValve[77];
assign om14QWRValve to {
//QWR1(Cycle1)																																																																										
"SCL31-CDL01:VBx02-XV7301:Valve", "SCL31-CDL01:VBx02-CV7401:Valve", "SCL31-BL01:CM01-CV8401:Valve", "SCL31-BL01:CM02-CV8401:Valve", "SCL31-CDL01:VBx02-CV7401:Valve", "SCL31-BL01:CM01-CV8402:Valve", "SCL31-BL01:CM02-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR2(Cycle2)																																																																										
"SCL31-CDL01:VBx04-XV7301:Valve", "SCL31-CDL01:VBx04-CV7401:Valve", "SCL31-BL01:CM03-CV8401:Valve", "SCL31-BL01:CM04-CV8401:Valve", "SCL31-CDL01:VBx04-CV7401:Valve", "SCL31-BL01:CM03-CV8402:Valve", "SCL31-BL01:CM04-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR3(Cycle3)																																																																										
"SCL31-CDL01:VBx06-XV7301:Valve", "SCL31-CDL01:VBx06-CV7401:Valve", "SCL31-BL01:CM05-CV8401:Valve", "SCL31-BL01:CM06-CV8401:Valve", "SCL31-CDL01:VBx06-CV7401:Valve", "SCL31-BL01:CM05-CV8402:Valve", "SCL31-BL01:CM06-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR4(Cycle4)																																																																										
"SCL31-CDL01:VBx08-XV7301:Valve", "SCL31-CDL01:VBx08-CV7401:Valve", "SCL31-BL01:CM07-CV8401:Valve", "SCL31-BL01:CM08-CV8401:Valve", "SCL31-CDL01:VBx08-CV7401:Valve", "SCL31-BL01:CM07-CV8402:Valve", "SCL31-BL01:CM08-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR5(Cycle5)																																																																										
"SCL31-CDL01:VBx10-XV7301:Valve", "SCL31-CDL01:VBx10-CV7401:Valve", "SCL31-BL01:CM09-CV8401:Valve", "SCL31-BL01:CM10-CV8401:Valve", "SCL31-CDL01:VBx10-CV7401:Valve", "SCL31-BL01:CM09-CV8402:Valve", "SCL31-BL01:CM10-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR6(Cycle6)																																																																										
"SCL31-CDL01:VBx12-XV7301:Valve", "SCL31-CDL01:VBx12-CV7401:Valve", "SCL31-BL01:CM11-CV8401:Valve", "SCL31-BL01:CM12-CV8401:Valve", "SCL31-CDL01:VBx12-CV7401:Valve", "SCL31-BL01:CM11-CV8402:Valve", "SCL31-BL01:CM12-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR7(Cycle7)																																																																										
"SCL31-CDL01:VBx14-XV7301:Valve", "SCL31-CDL01:VBx14-CV7401:Valve", "SCL31-BL01:CM13-CV8401:Valve", "SCL31-BL01:CM14-CV8401:Valve", "SCL31-CDL01:VBx14-CV7401:Valve", "SCL31-BL01:CM13-CV8402:Valve", "SCL31-BL01:CM14-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR8(Cycle8)																																																																										
"SCL31-CDL01:VBx16-XV7301:Valve", "SCL31-CDL01:VBx16-CV7401:Valve", "SCL31-BL01:CM15-CV8401:Valve", "SCL31-BL01:CM16-CV8401:Valve", "SCL31-CDL01:VBx16-CV7401:Valve", "SCL31-BL01:CM15-CV8402:Valve", "SCL31-BL01:CM16-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR9(Cycle9)																																																																										
"SCL31-CDL01:VBx18-XV7301:Valve", "SCL31-CDL01:VBx18-CV7401:Valve", "SCL31-BL01:CM17-CV8401:Valve", "SCL31-BL01:CM18-CV8401:Valve", "SCL31-CDL01:VBx18-CV7401:Valve", "SCL31-BL01:CM17-CV8402:Valve", "SCL31-BL01:CM18-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR10(Cycle10)																																																																										
"SCL31-CDL01:VBx20-XV7301:Valve", "SCL31-CDL01:VBx20-CV7401:Valve", "SCL31-BL01:CM19-CV8401:Valve", "SCL31-BL01:CM20-CV8401:Valve", "SCL31-CDL01:VBx20-CV7401:Valve", "SCL31-BL01:CM19-CV8402:Valve", "SCL31-BL01:CM20-CV8402:Valve", //-> Next(OM1.5,LHe Filling)
//QWR11(Cycle11)																																																																										
"SCL31-CDL01:VBx22-XV7301:Valve", "SCL31-CDL01:VBx22-CV7401:Valve", "SCL31-BL01:CM21-CV8401:Valve", "SCL31-BL01:CM22-CV8401:Valve", "SCL31-CDL01:VBx22-CV7401:Valve", "SCL31-BL01:CM21-CV8402:Valve", "SCL31-BL01:CM22-CV8402:Valve" //-> Next(OM1.5,LHe Filling)
};
monitor om14QWRValve;

float om14HWRValve[77];
assign om14HWRValve to {
//HWRA1(Cycle 12)																																																																										
"SCL32-CDL02:VBx01-XV7201:Valve","SCL32-CDL02:VBx01-CV7401:Valve", "SCL32-BL02:CM01-CV8401:Valve", "SCL32-BL02:CM01-CV8402:Valve", "SCL32-CDL02:VBx01-CV7401:Valve", "SCL32-BL02:CM01-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA2(Cycle 13)																																																																										
"SCL32-CDL02:VBx02-XV7201:Valve","SCL32-CDL02:VBx02-CV7401:Valve", "SCL32-BL02:CM02-CV8401:Valve", "SCL32-BL02:CM02-CV8402:Valve", "SCL32-CDL02:VBx02-CV7401:Valve", "SCL32-BL02:CM02-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA3(Cycle 14)																																																																										
"SCL32-CDL02:VBx03-XV7201:Valve","SCL32-CDL02:VBx03-CV7401:Valve", "SCL32-BL02:CM03-CV8401:Valve", "SCL32-BL02:CM03-CV8402:Valve", "SCL32-CDL02:VBx03-CV7401:Valve", "SCL32-BL02:CM03-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA4(Cycle 15)																																																																										
"SCL32-CDL02:VBx04-XV7201:Valve","SCL32-CDL02:VBx04-CV7401:Valve", "SCL32-BL02:CM04-CV8401:Valve", "SCL32-BL02:CM04-CV8402:Valve", "SCL32-CDL02:VBx04-CV7401:Valve", "SCL32-BL02:CM04-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA5(Cycle 16)																																																																										
"SCL32-CDL02:VBx05-XV7201:Valve","SCL32-CDL02:VBx05-CV7401:Valve", "SCL32-BL02:CM05-CV8401:Valve", "SCL32-BL02:CM05-CV8402:Valve", "SCL32-CDL02:VBx05-CV7401:Valve", "SCL32-BL02:CM05-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA6(Cycle 17)																																																																										
"SCL32-CDL02:VBx06-XV7201:Valve","SCL32-CDL02:VBx06-CV7401:Valve", "SCL32-BL02:CM06-CV8401:Valve", "SCL32-BL02:CM06-CV8402:Valve", "SCL32-CDL02:VBx06-CV7401:Valve", "SCL32-BL02:CM06-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA7(Cycle 18)																																																																										
"SCL32-CDL02:VBx07-XV7201:Valve","SCL32-CDL02:VBx07-CV7401:Valve", "SCL32-BL02:CM07-CV8401:Valve", "SCL32-BL02:CM07-CV8402:Valve", "SCL32-CDL02:VBx07-CV7401:Valve", "SCL32-BL02:CM07-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA8(Cycle 19)																																																																										
"SCL32-CDL02:VBx08-XV7201:Valve","SCL32-CDL02:VBx08-CV7401:Valve", "SCL32-BL02:CM08-CV8401:Valve", "SCL32-BL02:CM08-CV8402:Valve", "SCL32-CDL02:VBx08-CV7401:Valve", "SCL32-BL02:CM08-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA9(Cycle 20)																																																																										
"SCL32-CDL02:VBx09-XV7201:Valve","SCL32-CDL02:VBx09-CV7401:Valve", "SCL32-BL02:CM09-CV8401:Valve", "SCL32-BL02:CM09-CV8402:Valve", "SCL32-CDL02:VBx09-CV7401:Valve", "SCL32-BL02:CM09-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA10(Cycle 21)																																																																										
"SCL32-CDL02:VBx10-XV7201:Valve","SCL32-CDL02:VBx10-CV7401:Valve", "SCL32-BL02:CM10-CV8401:Valve", "SCL32-BL02:CM10-CV8402:Valve", "SCL32-CDL02:VBx10-CV7401:Valve", "SCL32-BL02:CM10-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA11(Cycle 22)																																																																										
"SCL32-CDL02:VBx11-XV7201:Valve","SCL32-CDL02:VBx11-CV7401:Valve", "SCL32-BL02:CM11-CV8401:Valve", "SCL32-BL02:CM11-CV8402:Valve", "SCL32-CDL02:VBx11-CV7401:Valve", "SCL32-BL02:CM11-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA12(Cycle 23)																																																																										
"SCL32-CDL02:VBx12-XV7201:Valve","SCL32-CDL02:VBx12-CV7401:Valve", "SCL32-BL02:CM12-CV8401:Valve", "SCL32-BL02:CM12-CV8402:Valve", "SCL32-CDL02:VBx12-CV7401:Valve", "SCL32-BL02:CM12-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRA13(Cycle 24)																																																																										
"SCL32-CDL02:VBx13-XV7201:Valve","SCL32-CDL02:VBx13-CV7401:Valve", "SCL32-BL02:CM13-CV8401:Valve", "SCL32-BL02:CM13-CV8402:Valve", "SCL32-CDL02:VBx13-CV7401:Valve", "SCL32-BL02:CM13-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB1(Cycle 25)																																																																										
"SCL32-CDL03:VBx01-XV7201:Valve","SCL32-CDL03:VBx01-CV7401:Valve", "SCL32-BL03:CM01-CV8401:Valve", "SCL32-BL03:CM01-CV8402:Valve", "SCL32-CDL03:VBx01-CV7401:Valve", "SCL32-BL03:CM01-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB2(Cycle 26)																																																																										
"SCL32-CDL03:VBx02-XV7201:Valve","SCL32-CDL03:VBx02-CV7401:Valve", "SCL32-BL03:CM02-CV8401:Valve", "SCL32-BL03:CM02-CV8402:Valve", "SCL32-CDL03:VBx02-CV7401:Valve", "SCL32-BL03:CM02-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB3(Cycle 27)																																																																										
"SCL32-CDL03:VBx03-XV7201:Valve","SCL32-CDL03:VBx03-CV7401:Valve", "SCL32-BL03:CM03-CV8401:Valve", "SCL32-BL03:CM03-CV8402:Valve", "SCL32-CDL03:VBx03-CV7401:Valve", "SCL32-BL03:CM03-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB4(Cycle 28)																																																																										
"SCL32-CDL03:VBx04-XV7201:Valve","SCL32-CDL03:VBx04-CV7401:Valve", "SCL32-BL03:CM04-CV8401:Valve", "SCL32-BL03:CM04-CV8402:Valve", "SCL32-CDL03:VBx04-CV7401:Valve", "SCL32-BL03:CM04-CV8403:Valve",  //-> Next(OM1.5,LHe Filling)
//HWRB5(Cycle 29)																																																																										
"SCL32-CDL03:VBx05-XV7201:Valve","SCL32-CDL03:VBx05-CV7401:Valve", "SCL32-BL03:CM05-CV8401:Valve", "SCL32-BL03:CM05-CV8402:Valve", "SCL32-CDL03:VBx05-CV7401:Valve", "SCL32-BL03:CM05-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB6(Cycle 30)																																																																										
"SCL32-CDL03:VBx06-XV7201:Valve","SCL32-CDL03:VBx06-CV7401:Valve", "SCL32-BL03:CM06-CV8401:Valve", "SCL32-BL03:CM06-CV8402:Valve", "SCL32-CDL03:VBx06-CV7401:Valve", "SCL32-BL03:CM06-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB7(Cycle 31)																																																																										
"SCL32-CDL03:VBx07-XV7201:Valve","SCL32-CDL03:VBx07-CV7401:Valve", "SCL32-BL03:CM07-CV8401:Valve", "SCL32-BL03:CM07-CV8402:Valve", "SCL32-CDL03:VBx07-CV7401:Valve", "SCL32-BL03:CM07-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB8(Cycle 32)																																																																										
"SCL32-CDL03:VBx08-XV7201:Valve","SCL32-CDL03:VBx08-CV7401:Valve", "SCL32-BL03:CM08-CV8401:Valve", "SCL32-BL03:CM08-CV8402:Valve", "SCL32-CDL03:VBx08-CV7401:Valve", "SCL32-BL03:CM08-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB9(Cycle 33)																																																																										
"SCL32-CDL03:VBx09-XV7201:Valve","SCL32-CDL03:VBx09-CV7401:Valve", "SCL32-BL03:CM09-CV8401:Valve", "SCL32-BL03:CM09-CV8402:Valve", "SCL32-CDL03:VBx09-CV7401:Valve", "SCL32-BL03:CM09-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB10(Cycle 34)																																																																										
"SCL32-CDL03:VBx10-XV7201:Valve","SCL32-CDL03:VBx10-CV7401:Valve", "SCL32-BL03:CM10-CV8401:Valve", "SCL32-BL03:CM10-CV8402:Valve", "SCL32-CDL03:VBx10-CV7401:Valve", "SCL32-BL03:CM10-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB11(Cycle 35)																																																																										
"SCL32-CDL03:VBx11-XV7201:Valve","SCL32-CDL03:VBx11-CV7401:Valve", "SCL32-BL03:CM11-CV8401:Valve", "SCL32-BL03:CM11-CV8402:Valve", "SCL32-CDL03:VBx11-CV7401:Valve", "SCL32-BL03:CM11-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB12(Cycle 36)																																																																										
"SCL32-CDL03:VBx12-XV7201:Valve","SCL32-CDL03:VBx12-CV7401:Valve", "SCL32-BL03:CM12-CV8401:Valve", "SCL32-BL03:CM12-CV8402:Valve", "SCL32-CDL03:VBx12-CV7401:Valve", "SCL32-BL03:CM12-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB13(Cycle 37)																																																																										
"SCL32-CDL03:VBx13-XV7201:Valve","SCL32-CDL03:VBx13-CV7401:Valve", "SCL32-BL03:CM13-CV8401:Valve", "SCL32-BL03:CM13-CV8402:Valve", "SCL32-CDL03:VBx13-CV7401:Valve", "SCL32-BL03:CM13-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB14(Cycle 38)																																																																										
"SCL32-CDL03:VBx14-XV7201:Valve","SCL32-CDL03:VBx14-CV7401:Valve", "SCL32-BL03:CM14-CV8401:Valve", "SCL32-BL03:CM14-CV8402:Valve", "SCL32-CDL03:VBx14-CV7401:Valve", "SCL32-BL03:CM14-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB15(Cycle 39)																																																																										
"SCL32-CDL03:VBx15-XV7201:Valve","SCL32-CDL03:VBx15-CV7401:Valve", "SCL32-BL03:CM15-CV8401:Valve", "SCL32-BL03:CM15-CV8402:Valve", "SCL32-CDL03:VBx15-CV7401:Valve", "SCL32-BL03:CM15-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB16(Cycle 40)																																																																										
"SCL32-CDL03:VBx16-XV7201:Valve","SCL32-CDL03:VBx16-CV7401:Valve", "SCL32-BL03:CM16-CV8401:Valve", "SCL32-BL03:CM16-CV8402:Valve", "SCL32-CDL03:VBx16-CV7401:Valve", "SCL32-BL03:CM16-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB17(Cycle 41)																																																																										
"SCL32-CDL03:VBx17-XV7201:Valve","SCL32-CDL03:VBx17-CV7401:Valve", "SCL32-BL03:CM17-CV8401:Valve", "SCL32-BL03:CM17-CV8402:Valve", "SCL32-CDL03:VBx17-CV7401:Valve", "SCL32-BL03:CM17-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB18(Cycle 42)																																																																										
"SCL32-CDL03:VBx18-XV7201:Valve","SCL32-CDL03:VBx18-CV7401:Valve", "SCL32-BL03:CM18-CV8401:Valve", "SCL32-BL03:CM18-CV8402:Valve", "SCL32-CDL03:VBx18-CV7401:Valve", "SCL32-BL03:CM18-CV8403:Valve", //-> Next(OM1.5,LHe Filling)
//HWRB19(Cycle 43)																																																																										
"SCL32-CDL03:VBx19-XV7201:Valve","SCL32-CDL03:VBx19-CV7401:Valve", "SCL32-BL03:CM19-CV8401:Valve", "SCL32-BL03:CM19-CV8402:Valve", "SCL32-CDL03:VBx19-CV7401:Valve", "SCL32-BL03:CM19-CV8403:Valve",  //-> Next(OM1.5,LHe Filling)
//P2DT(Cycle 44)																																																																										
"P2DT-CDL04:VBx01-XV7201:Valve",  "P2DT-CDL04:VBx01-CV7401:Valve", "P2DT-BL04:CM01-CV8401:Valve", "P2DT-BL04:CM01-CV8402:Valve", "P2DT-CDL04:VBx01-CV7401:Valve", "P2DT-BL04:CM01-CV8403:Valve" //-> Next(OM1.5,LHe Filling)
};
monitor om14HWRValve;

evflag  evFanout;
sync	om14QWRValve	evFanout;

int cycle = 0;
assign cycle to "SCL3:CD-OM1415:Cycle";
monitor cycle;

int index = 0;
assign index to "SCL3:CD-OM1415:IndexPV";
monitor index;

int proc = 1;

float om1415Val;
assign om1415Val to "SCL3:CD-OM1415:Value";
monitor om1415Val;

float cdDelay;
assign cdDelay to "SCL3:CD-OM1415:ScanTime";
monitor cdDelay;

float	valvewave[1];
assign	valvewave to "SCL3:CD-OM1415:ValveWave";
monitor valvewave;

evflag	efNext;

ss ssCDOM14
{
	state init
	{
		when(TRUE)
		{
			cycle = 0;
			index = 0;
			pvPut(cycle, SYNC);
			pvPut(index, SYNC);
			efClear(efNext);
		}state CDOM141QWR
	}
	//XV7301/XV7201 Regulation
	//QWR
	state CDOM141QWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 1) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14QWRValve[index];
			};
			om14QWRLogicProc[cycle*index] = proc;
			pvPut(om14QWRLogicProc[cycle*index], SYNC);
		}state CDOM141QWR

		when(efTestAndClear(efNext))
		{
		}state CDOM142QWR
	}

	//HWR
	state CDOM141HWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 1) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14HWRValve[index];
			};
			cycle -= 11;	//Ex. QWR Cycle 
			om14HWRLogicProc[cycle*index] = proc;
			pvPut(om14HWRLogicProc[cycle*index], SYNC);
		}state CDOM141HWR

		when(efTestAndClear(efNext))
		{
		}state CDOM142HWR
	}

	//CV7401 Regulation
	//QWR
	state CDOM142QWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 5) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14QWRValve[index];
			};
			om14QWRLogicProc[cycle*index] = proc;
			pvPut(om14QWRLogicProc[cycle*index], SYNC);
		}state CDOM142QWR

		when(efTestAndClear(efNext))
		{
		}state CDOM143QWR
	}

	//HWR
	state CDOM142HWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 5) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14HWRValve[index];
			};
			cycle -= 11;	//Ex. HWR Cycle 
			om14HWRLogicProc[cycle*index] = proc;
			pvPut(om14HWRLogicProc[cycle*index], SYNC);
		}state CDOM142HWR

		when(efTestAndClear(efNext))
		{
		}state CDOM143HWR
	}

	//CV8401 Regulation
	//QWR
	state CDOM143QWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 5) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14QWRValve[index];
			};
			om14QWRLogicProc[cycle*index] = proc;
			pvPut(om14QWRLogicProc[cycle*index], SYNC);
		}state CDOM143QWR

		when(efTestAndClear(efNext))
		{
		}state CDOM145QWR
	}
	//HWR
	state CDOM143HWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 5) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14HWRValve[index];
			};
			cycle -= 11;	//Ex. HWR Cycle 
			om14HWRLogicProc[cycle*index] = proc;
			pvPut(om14HWRLogicProc[cycle*index], SYNC);
		}state CDOM143HWR

		when(efTestAndClear(efNext))
		{
		}state CDOM144HWR
	}

	//CV8402 5% Regulation
	//HWR
	state CDOM144HWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 5) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14HWRValve[index];
			};
			cycle -= 11;	//Ex. HWR Cycle 
			om14HWRLogicProc[cycle*index] = proc;
			pvPut(om14HWRLogicProc[cycle*index], SYNC);
		}state CDOM144HWR

		when(efTestAndClear(efNext))
		{
		}state CDOM145HWR
	}

	//CV7401 100% Regulation
	//QWR
	state CDOM145QWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 100) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14QWRValve[index];
			};
			om14QWRLogicProc[cycle*index] = proc;
			pvPut(om14QWRLogicProc[cycle*index], SYNC);
		}state CDOM145QWR

		//
		when(efTestAndClear(efNext))
		{
		}state CDOM146
	}
	//HWR
	state CDOM145HWR
	{
		when(delay(cdDelay)) 
		{
			if(om1415Val == 100) {
				om1415Val = 0;
				index++;
				pvPut(index, SYNC);
				efSet(efNext);
			} else {
				om1415Val = om14HWRValve[index];
			};
			cycle -= 11;	//Ex. HWR Cycle 
			om14HWRLogicProc[cycle*index] = proc;
			pvPut(om14HWRLogicProc[cycle*index], SYNC);
		}state CDOM145HWR

		//
		when(efTestAndClear(efNext))
		{
		}state CDOM147
	}

	//QWR CV8402 5% Regulation
	state CDOM146
	{
		when(delay(cdDelay)) 
		{
			om1415Val = om14HWRValve[index];

		}state CDOM146
	}

	//HWR/P2DT CV8403 Regulation
	state CDOM147
	{
		when(delay(cdDelay)) 
		{
		}state CDOM147
	}

	//QWR Phase End, 4.2K Reservior LT8401:Level >= 50%
	state CDOM148
	{
		when(delay(cdDelay)) 
		{
		}state CDOM148
	}

	//HWR/P2DT Phase End, 2K Reservior LT8201:Level >= 50%
	state CDOM149
	{
		when(delay(cdDelay)) 
		{
		}state CDOM149
	}
}

ss ssCDOM15
{
	//QWR, CM01/CM02-CV8402(-5%) / CM01/CM02-CV8401(+5%) Regulation
	state CDOM151
	{
		when(delay(cdDelay)) 
		{
		}state CDOM151
	}

	//QWR, CDL01:VBxxx-CV7301(+1%, to 5%) Regulation
	state CDOM152
	{
		when(delay(cdDelay)) 
		{
		}state CDOM152
	}

	//QWR, CDL01:VBxxx-XV7301(100 -> 0%),  CV7301(5% -> 50%) Regulation
	state CDOM153
	{
		when(delay(cdDelay)) 
		{
		}state CDOM153
	}

	//QWR,CV8401(100 -> 0%), LT8401 >= 70 % +- 5%
	state CDOM154
	{
		when(delay(cdDelay)) 
		{
		}state CDOM154
	}

	//QWR,CV7301(Auto Regulate), 4.5K Reservior Pressure > 1.3bara
	state CDOM155
	{
		when(delay(cdDelay)) 
		{
		}state CDOM155
	}

	//QWR,Phase End
	state CDOM156
	{
		when(delay(cdDelay)) 
		{
		}state CDOM156
	}

	//HWR/P2DT,
	state CDOM157
	{
		when(delay(cdDelay)) 
		{
		}state CDOM157
	}

	//HWR/P2DT,
	state CDOM158
	{
		when(delay(cdDelay)) 
		{
		}state CDOM158
	}

	//HWR/P2DT,
	state CDOM159
	{
		when(delay(cdDelay)) 
		{
		}state CDOM159
	}

	//HWR/P2DT,
	state CDOM1510
	{
		when(delay(cdDelay)) 
		{
		}state CDOM1510
	}

	//HWR/P2DT,
	state CDOM1511
	{
		when(delay(cdDelay)) 
		{
		}state CDOM1511
	}

	//HWR,	Phase End
	state CDOM1512
	{
		when(delay(cdDelay)) 
		{
		}state CDOM1512
	}


}

ss ssOM14ValveWave
{
	state init
	{
		when(TRUE)
		{
			efClear(evFanout);
		}state MakeOM141ValveWave
	}

	state MakeOM141ValveWave
	{
		when(efTestAndClear(evFanout)) 
		{
			int idx = 0;
			for(idx = 0; idx < 77;idx++)
				valvewave[idx] = om14QWRValve[idx];

			pvPut(valvewave, SYNC);
		}state MakeOM141ValveWave
	}
}

