program CDOM21Logic
option +r;

%% #include <math.h>

int om21LogicProc[6];
assign om21LogicProc to {
"Cryo-CDL00:TBx01-XV7201:CDLogic.PROC",
"Cryo-CDL00:TBx01-CV7201:CDLogic.PROC",
"Cryo-CDL00:TBx01-CV7303:CDLogic.PROC",
"Cryo-CDL00:TBx01-XV7302:CDLogic.PROC",
"SCL32-CDL02:VBx01-CV7302:CDLogic.PROC",
"SCL32-CDL02:VBx01-XV7301:CDLogic.PROC"
};
monitor om21LogicProc;

float valveVal[6];
assign valveVal to {
"Cryo-CDL00:TBx01-XV7201:Valve",
"Cryo-CDL00:TBx01-CV7201:Valve",
"Cryo-CDL00:TBx01-CV7303:Valve",
"Cryo-CDL00:TBx01-XV7302:Valve",
"SCL32-CDL02:VBx01-CV7302:Valve",
"SCL32-CDL02:VBx01-XV7301:Valve"
};
monitor valveVal;
//Auto Regulate
{
	//HWRA(1-13)
	"SCL32-BL02:CM01-CV8401:PLCAuto",
	"SCL32-BL02:CM01-CV8402:PLCAuto",
	"SCL32-BL02:CM02-CV8401:PLCAuto",
	"SCL32-BL02:CM02-CV8402:PLCAuto",
	"SCL32-BL02:CM03-CV8401:PLCAuto",
	"SCL32-BL02:CM03-CV8402:PLCAuto",
	"SCL32-BL02:CM04-CV8401:PLCAuto",
	"SCL32-BL02:CM04-CV8402:PLCAuto",
	"SCL32-BL02:CM05-CV8401:PLCAuto",
	"SCL32-BL02:CM05-CV8402:PLCAuto",
	"SCL32-BL02:CM06-CV8401:PLCAuto",
	"SCL32-BL02:CM06-CV8402:PLCAuto",
	"SCL32-BL02:CM07-CV8401:PLCAuto",
	"SCL32-BL02:CM07-CV8402:PLCAuto",
	"SCL32-BL02:CM08-CV8401:PLCAuto",
	"SCL32-BL02:CM08-CV8402:PLCAuto",
	"SCL32-BL02:CM09-CV8401:PLCAuto",
	"SCL32-BL02:CM09-CV8402:PLCAuto",
	"SCL32-BL02:CM10-CV8401:PLCAuto",
	"SCL32-BL02:CM10-CV8402:PLCAuto",
	"SCL32-BL02:CM11-CV8401:PLCAuto",
	"SCL32-BL02:CM11-CV8402:PLCAuto",
	"SCL32-BL02:CM12-CV8401:PLCAuto",
	"SCL32-BL02:CM12-CV8402:PLCAuto",
	"SCL32-BL02:CM13-CV8401:PLCAuto",
	"SCL32-BL02:CM13-CV8402:PLCAuto",

	//HWRB(1-19)
	"SCL32-BL03:CM01-CV8401:PLCAuto",
	"SCL32-BL03:CM01-CV8402:PLCAuto",
	"SCL32-BL03:CM02-CV8401:PLCAuto",
	"SCL32-BL03:CM02-CV8402:PLCAuto",
	"SCL32-BL03:CM03-CV8401:PLCAuto",
	"SCL32-BL03:CM03-CV8402:PLCAuto",
	"SCL32-BL03:CM04-CV8401:PLCAuto",
	"SCL32-BL03:CM04-CV8402:PLCAuto",
	"SCL32-BL03:CM05-CV8401:PLCAuto",
	"SCL32-BL03:CM05-CV8402:PLCAuto",
	"SCL32-BL03:CM06-CV8401:PLCAuto",
	"SCL32-BL03:CM06-CV8402:PLCAuto",
	"SCL32-BL03:CM07-CV8401:PLCAuto",
	"SCL32-BL03:CM07-CV8402:PLCAuto",
	"SCL32-BL03:CM08-CV8401:PLCAuto",
	"SCL32-BL03:CM08-CV8402:PLCAuto",
	"SCL32-BL03:CM09-CV8401:PLCAuto",
	"SCL32-BL03:CM09-CV8402:PLCAuto",
	"SCL32-BL03:CM10-CV8401:PLCAuto",
	"SCL32-BL03:CM10-CV8402:PLCAuto",
	"SCL32-BL03:CM11-CV8401:PLCAuto",
	"SCL32-BL03:CM11-CV8402:PLCAuto",
	"SCL32-BL03:CM12-CV8401:PLCAuto",
	"SCL32-BL03:CM12-CV8402:PLCAuto",
	"SCL32-BL03:CM13-CV8401:PLCAuto",
	"SCL32-BL03:CM13-CV8402:PLCAuto",
	"SCL32-BL03:CM14-CV8401:PLCAuto",
	"SCL32-BL03:CM14-CV8402:PLCAuto",
	"SCL32-BL03:CM15-CV8401:PLCAuto",
	"SCL32-BL03:CM15-CV8402:PLCAuto",
	"SCL32-BL03:CM16-CV8401:PLCAuto",
	"SCL32-BL03:CM16-CV8402:PLCAuto",
	"SCL32-BL03:CM17-CV8401:PLCAuto",
	"SCL32-BL03:CM17-CV8402:PLCAuto",
	"SCL32-BL03:CM18-CV8401:PLCAuto",
	"SCL32-BL03:CM18-CV8402:PLCAuto",
	"SCL32-BL03:CM19-CV8401:PLCAuto",
	"SCL32-BL03:CM19-CV8402:PLCAuto",
	//P2DT
	"P2DT-BL04:CM01-CV8401:PLCAuto",
	"P2DT-BL04:CM01-CV8402:PLCAuto",

	//HWRA(1-13)
	"SCL32-CDL02:VBx01-CV7301:PLCAuto",
	"SCL32-CDL02:VBx01-CV7201:PLCAuto",
	"SCL32-CDL02:VBx02-CV7301:PLCAuto",
	"SCL32-CDL02:VBx02-CV7201:PLCAuto",
	"SCL32-CDL02:VBx03-CV7301:PLCAuto",
	"SCL32-CDL02:VBx03-CV7201:PLCAuto",
	"SCL32-CDL02:VBx04-CV7301:PLCAuto",
	"SCL32-CDL02:VBx04-CV7201:PLCAuto",
	"SCL32-CDL02:VBx05-CV7301:PLCAuto",
	"SCL32-CDL02:VBx05-CV7201:PLCAuto",
	"SCL32-CDL02:VBx06-CV7301:PLCAuto",
	"SCL32-CDL02:VBx06-CV7201:PLCAuto",
	"SCL32-CDL02:VBx07-CV7301:PLCAuto",
	"SCL32-CDL02:VBx07-CV7201:PLCAuto",
	"SCL32-CDL02:VBx08-CV7301:PLCAuto",
	"SCL32-CDL02:VBx08-CV7201:PLCAuto",
	"SCL32-CDL02:VBx09-CV7301:PLCAuto",
	"SCL32-CDL02:VBx09-CV7201:PLCAuto",
	"SCL32-CDL02:VBx10-CV7301:PLCAuto",
	"SCL32-CDL02:VBx10-CV7201:PLCAuto",
	"SCL32-CDL02:VBx11-CV7301:PLCAuto",
	"SCL32-CDL02:VBx11-CV7201:PLCAuto",
	"SCL32-CDL02:VBx12-CV7301:PLCAuto",
	"SCL32-CDL02:VBx12-CV7201:PLCAuto",
	"SCL32-CDL02:VBx13-CV7301:PLCAuto",
	"SCL32-CDL02:VBx13-CV7201:PLCAuto",

	//HWRB(1-19)
	"SCL32-CDL03:VBx01-CV7301:PLCAuto",
	"SCL32-CDL03:VBx01-CV7201:PLCAuto",
	"SCL32-CDL03:VBx02-CV7301:PLCAuto",
	"SCL32-CDL03:VBx02-CV7201:PLCAuto",
	"SCL32-CDL03:VBx03-CV7301:PLCAuto",
	"SCL32-CDL03:VBx03-CV7201:PLCAuto",
	"SCL32-CDL03:VBx04-CV7301:PLCAuto",
	"SCL32-CDL03:VBx04-CV7201:PLCAuto",
	"SCL32-CDL03:VBx05-CV7301:PLCAuto",
	"SCL32-CDL03:VBx05-CV7201:PLCAuto",
	"SCL32-CDL03:VBx06-CV7301:PLCAuto",
	"SCL32-CDL03:VBx06-CV7201:PLCAuto",
	"SCL32-CDL03:VBx07-CV7301:PLCAuto",
	"SCL32-CDL03:VBx07-CV7201:PLCAuto",
	"SCL32-CDL03:VBx08-CV7301:PLCAuto",
	"SCL32-CDL03:VBx08-CV7201:PLCAuto",
	"SCL32-CDL03:VBx09-CV7301:PLCAuto",
	"SCL32-CDL03:VBx09-CV7201:PLCAuto",
	"SCL32-CDL03:VBx10-CV7301:PLCAuto",
	"SCL32-CDL03:VBx10-CV7201:PLCAuto",
	"SCL32-CDL03:VBx11-CV7301:PLCAuto",
	"SCL32-CDL03:VBx11-CV7201:PLCAuto",
	"SCL32-CDL03:VBx12-CV7301:PLCAuto",
	"SCL32-CDL03:VBx12-CV7201:PLCAuto",
	"SCL32-CDL03:VBx13-CV7301:PLCAuto",
	"SCL32-CDL03:VBx13-CV7201:PLCAuto",
	"SCL32-CDL03:VBx14-CV7301:PLCAuto",
	"SCL32-CDL03:VBx14-CV7201:PLCAuto",
	"SCL32-CDL03:VBx15-CV7301:PLCAuto",
	"SCL32-CDL03:VBx15-CV7201:PLCAuto",
	"SCL32-CDL03:VBx16-CV7301:PLCAuto",
	"SCL32-CDL03:VBx16-CV7201:PLCAuto",
	"SCL32-CDL03:VBx17-CV7301:PLCAuto",
	"SCL32-CDL03:VBx17-CV7201:PLCAuto",
	"SCL32-CDL03:VBx18-CV7301:PLCAuto",
	"SCL32-CDL03:VBx18-CV7201:PLCAuto",
	"SCL32-CDL03:VBx19-CV7301:PLCAuto",
	"SCL32-CDL03:VBx19-CV7201:PLCAuto",
	//P2DT
	"P2DT-CDL04:VBx01-CV7301:PLCAuto",
	"P2DT-CDL04:VBx01-CV7201:PLCAuto",

	//PhaseEnd
	"SCL32-BL02:CM01-LT8201:Level","SCL32-BL02:CM01-LT8401:Level",
	"SCL32-BL02:CM02-LT8201:Level","SCL32-BL02:CM02-LT8401:Level",
	"SCL32-BL02:CM03-LT8201:Level","SCL32-BL02:CM03-LT8401:Level",
	"SCL32-BL02:CM04-LT8201:Level","SCL32-BL02:CM04-LT8401:Level",
	"SCL32-BL02:CM05-LT8201:Level","SCL32-BL02:CM05-LT8401:Level",
	"SCL32-BL02:CM06-LT8201:Level","SCL32-BL02:CM06-LT8401:Level",
	"SCL32-BL02:CM07-LT8201:Level","SCL32-BL02:CM07-LT8401:Level",
	"SCL32-BL02:CM08-LT8201:Level","SCL32-BL02:CM08-LT8401:Level",
	"SCL32-BL02:CM09-LT8201:Level","SCL32-BL02:CM09-LT8401:Level",
	"SCL32-BL02:CM10-LT8201:Level","SCL32-BL02:CM10-LT8401:Level",
	"SCL32-BL02:CM11-LT8201:Level","SCL32-BL02:CM11-LT8401:Level",
	"SCL32-BL02:CM12-LT8201:Level","SCL32-BL02:CM12-LT8401:Level",
	"SCL32-BL02:CM13-LT8201:Level","SCL32-BL02:CM13-LT8401:Level",
	"SCL32-BL03:CM01-LT8201:Level","SCL32-BL03:CM01-LT8401:Level",
	"SCL32-BL03:CM02-LT8201:Level","SCL32-BL03:CM02-LT8401:Level",
	"SCL32-BL03:CM03-LT8201:Level","SCL32-BL03:CM03-LT8401:Level",
	"SCL32-BL03:CM04-LT8201:Level","SCL32-BL03:CM04-LT8401:Level",
	"SCL32-BL03:CM05-LT8201:Level","SCL32-BL03:CM05-LT8401:Level",
	"SCL32-BL03:CM06-LT8201:Level","SCL32-BL03:CM06-LT8401:Level",
	"SCL32-BL03:CM07-LT8201:Level","SCL32-BL03:CM07-LT8401:Level",
	"SCL32-BL03:CM08-LT8201:Level","SCL32-BL03:CM08-LT8401:Level",
	"SCL32-BL03:CM09-LT8201:Level","SCL32-BL03:CM09-LT8401:Level",
	"SCL32-BL03:CM10-LT8201:Level","SCL32-BL03:CM10-LT8401:Level",
	"SCL32-BL03:CM11-LT8201:Level","SCL32-BL03:CM11-LT8401:Level",
	"SCL32-BL03:CM12-LT8201:Level","SCL32-BL03:CM12-LT8401:Level",
	"SCL32-BL03:CM13-LT8201:Level","SCL32-BL03:CM13-LT8401:Level",
	"SCL32-BL03:CM14-LT8201:Level","SCL32-BL03:CM14-LT8401:Level",
	"SCL32-BL03:CM15-LT8201:Level","SCL32-BL03:CM15-LT8401:Level",
	"SCL32-BL03:CM16-LT8201:Level","SCL32-BL03:CM16-LT8401:Level",
	"SCL32-BL03:CM17-LT8201:Level","SCL32-BL03:CM17-LT8401:Level",
	"SCL32-BL03:CM18-LT8201:Level","SCL32-BL03:CM18-LT8401:Level",
	"SCL32-BL03:CM19-LT8201:Level","SCL32-BL03:CM19-LT8401:Level",
	"P2DT-BL04:CM01-LT8201:Level", "P2DT-BL04:CM01-LT8401:Level",

};

evflag  evFanout;
sync	valveVal	evFanout;

int index = 0;
assign index to "SCL3:CD-OM21:IndexPV";
monitor index;

int proc = 1;

float om21Val;
assign om21Val to "SCL3:CD-OM21:Value";
monitor om21Val;

float cdDelay;
assign cdDelay to "SCL3:CD-OM21:ScanTime";
monitor cdDelay;

float	valvewave[1];
assign	valvewave to "SCL3:CD-OM21:ValveWave";
monitor valvewave;


ss ssCDOM21
{
	state CDOM21
	{
		when(delay(cdDelay)) 
		{
			if(index == 0  || index == 1  || index == 8  || index == 10 ||
			   index == 12 || index == 14 || index == 16 || index == 18 || index == 20 || 
			   index == 22 || index == 24 || index == 26 || index == 28 || index == 30 || 
			   index == 32 || index == 34 || index == 36 || index == 38 || index == 40 || 
			   index == 42 || index == 44 || index == 46 || index == 48 || index == 50 || 
			   index == 52 || index == 54 || index == 56 || index == 58 || index == 60 || 
			   index == 62 || index == 64 || index == 66 || index == 68 || index == 70 || 
			   index == 72 || index == 75 || index == 78 || index == 81 || index == 84 || 
			   index == 87 || index == 90 || index == 93 || index == 96 || index == 99 || 
			   index == 102|| index == 105)
			{
				if(om21Val == 1) {
					om21Val = 0;
					index++;
					pvPut(index, SYNC);
				} else {
					om21Val = valveVal[index];
				};
			}
			else
			{
				if(om21Val == 100) {
					om21Val = 0;
					index++;
					pvPut(index, SYNC);
				} else {
					om21Val = valveVal[index];
				};
			};


			pvPut(om21Val, SYNC);
			if(index < 107)
			{
				om21LogicProc[index] = proc;
				pvPut(om21LogicProc[index], SYNC);
			};
		}state CDOM21
	}
	
}

ss ssOM21ValveWave
{
	state init
	{
		when(TRUE)
		{
			efClear(evFanout);
		}state MakeOM21ValveWave
	}

	state MakeOM21ValveWave
	{
		when(efTestAndClear(evFanout)) 
		{
			int idx = 0;
			%%for(idx = 0; idx < 107;idx++)
				valvewave[idx] = valveVal[idx];

			pvPut(valvewave, SYNC);
		}state MakeOM21ValveWave
	}
}

