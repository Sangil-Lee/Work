program CDOM0434Logic
option +r;

%% #include <math.h>

int om0434LogicProc[33];
assign om0434LogicProc to {
"P2DT-CDL04:VBx01-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx19-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx18-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx17-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx16-CV7201:CDLogic.PROC",
"SCL32-CDL03:VBx15-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx14-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx13-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx12-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx11-CV7201:CDLogic.PROC",
"SCL32-CDL03:VBx10-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx09-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx08-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx07-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx06-CV7201:CDLogic.PROC",
"SCL32-CDL03:VBx05-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx04-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx03-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx02-CV7201:CDLogic.PROC", "SCL32-CDL03:VBx01-CV7201:CDLogic.PROC",
"SCL32-CDL02:VBx13-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx12-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx11-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx10-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx09-CV7201:CDLogic.PROC",
"SCL32-CDL02:VBx08-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx07-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx06-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx05-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx04-CV7201:CDLogic.PROC",
"SCL32-CDL02:VBx03-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx02-CV7201:CDLogic.PROC", "SCL32-CDL02:VBx01-CV7201:CDLogic.PROC"
};
monitor om0434LogicProc;

float valveVal[33];
assign valveVal to {
"P2DT-CDL04:VBx01-CV7201:Valve",  "SCL32-CDL03:VBx19-CV7201:Valve", "SCL32-CDL03:VBx18-CV7201:Valve", "SCL32-CDL03:VBx17-CV7201:Valve", "SCL32-CDL03:VBx16-CV7201:Valve",
"SCL32-CDL03:VBx15-CV7201:Valve", "SCL32-CDL03:VBx14-CV7201:Valve", "SCL32-CDL03:VBx13-CV7201:Valve", "SCL32-CDL03:VBx12-CV7201:Valve", "SCL32-CDL03:VBx11-CV7201:Valve",
"SCL32-CDL03:VBx10-CV7201:Valve", "SCL32-CDL03:VBx09-CV7201:Valve", "SCL32-CDL03:VBx08-CV7201:Valve", "SCL32-CDL03:VBx07-CV7201:Valve", "SCL32-CDL03:VBx06-CV7201:Valve",
"SCL32-CDL03:VBx05-CV7201:Valve", "SCL32-CDL03:VBx04-CV7201:Valve", "SCL32-CDL03:VBx03-CV7201:Valve", "SCL32-CDL03:VBx02-CV7201:Valve", "SCL32-CDL03:VBx01-CV7201:Valve",
"SCL32-CDL02:VBx13-CV7201:Valve", "SCL32-CDL02:VBx12-CV7201:Valve", "SCL32-CDL02:VBx11-CV7201:Valve", "SCL32-CDL02:VBx10-CV7201:Valve", "SCL32-CDL02:VBx09-CV7201:Valve",
"SCL32-CDL02:VBx08-CV7201:Valve", "SCL32-CDL02:VBx07-CV7201:Valve", "SCL32-CDL02:VBx06-CV7201:Valve", "SCL32-CDL02:VBx05-CV7201:Valve", "SCL32-CDL02:VBx04-CV7201:Valve",
"SCL32-CDL02:VBx03-CV7201:Valve", "SCL32-CDL02:VBx02-CV7201:Valve", "SCL32-CDL02:VBx01-CV7201:Valve"
};

monitor valveVal;

evflag  evFanout;
sync	valveVal	evFanout;

int index = 0;
assign index to "SCL3:CD-OM0434:IndexPV";
monitor index;

int proc = 1;

float om0434Val;
assign om0434Val to "SCL3:CD-OM0434:Value";
monitor om0434Val;

float cdDelay;
assign cdDelay to "SCL3:CD-OM0434:ScanTime";
monitor cdDelay;

float	valvewave[33];
assign	valvewave to "SCL3:CD-OM0434:ValveWave";
monitor valvewave;

evflag	efNext;

ss ssCDOM0434
{
	state init
	{
		when(TRUE)
		{
			index = 1;
			pvPut(index, SYNC);
			cdDelay = 10.0;
			pvPut(cdDelay, SYNC);
		}state CDOM0434
	}

	state CDOM0434
	{
		when(delay(cdDelay)) 
		{
			int idx = 0;
			float value = 0.0;
			int count = 0;
			int until = 0;

			idx = (index*5)-5;

			if(index == 7) {
				until = idx+3;
			} else {
				until = idx+5;
			};

			for(; idx < until;idx++)
			{
				om0434LogicProc[idx] = proc;
				pvPut(om0434LogicProc[idx], SYNC);
				value = valveVal[idx];
				if((int)value == 0) count++;
			};

			if(index == 7) {
				if(count == 3) efSet(efNext);
			} else {
				if(count == 5) efSet(efNext);
			};

		}state CDOM0434

		when(efTestAndClear(efNext))
		{
			index++;
			pvPut(index, SYNC);
		}state CDOM0434

		//PhaseEndCond -> index == 8 && Done -> Transition
	}
	
}

ss ssOM0434ValveWave
{
	state init
	{
		when(TRUE)
		{
			efClear(evFanout);
		}state MakeOM0434ValveWave
	}

	state MakeOM0434ValveWave
	{
		when(efTestAndClear(evFanout)) 
		{
			int idx = 0;
			for(idx = 0; idx < 33;idx++)
				valvewave[idx] = valveVal[idx];

			pvPut(valvewave, SYNC);
		}state MakeOM0434ValveWave
	}
}

