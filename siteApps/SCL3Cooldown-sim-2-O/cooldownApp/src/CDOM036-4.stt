program CDOM0364Logic
option +r;

%% #include <math.h>

int om0364LogicProc[22];
assign om0364LogicProc to {
"SCL31-BL01:CM01-CV8402:CDLogic.PROC", "SCL31-BL01:CM02-CV8402:CDLogic.PROC", "SCL31-BL01:CM03-CV8402:CDLogic.PROC",
"SCL31-BL01:CM04-CV8402:CDLogic.PROC", "SCL31-BL01:CM05-CV8402:CDLogic.PROC", "SCL31-BL01:CM06-CV8402:CDLogic.PROC",
"SCL31-BL01:CM07-CV8402:CDLogic.PROC", "SCL31-BL01:CM08-CV8402:CDLogic.PROC", "SCL31-BL01:CM09-CV8402:CDLogic.PROC",
"SCL31-BL01:CM10-CV8402:CDLogic.PROC", "SCL31-BL01:CM11-CV8402:CDLogic.PROC", "SCL31-BL01:CM12-CV8402:CDLogic.PROC",
"SCL31-BL01:CM13-CV8402:CDLogic.PROC", "SCL31-BL01:CM14-CV8402:CDLogic.PROC", "SCL31-BL01:CM15-CV8402:CDLogic.PROC",
"SCL31-BL01:CM16-CV8402:CDLogic.PROC", "SCL31-BL01:CM17-CV8402:CDLogic.PROC", "SCL31-BL01:CM18-CV8402:CDLogic.PROC",
"SCL31-BL01:CM19-CV8402:CDLogic.PROC", "SCL31-BL01:CM20-CV8402:CDLogic.PROC", "SCL31-BL01:CM21-CV8402:CDLogic.PROC",
"SCL31-BL01:CM22-CV8402:CDLogic.PROC"
};
monitor om0364LogicProc;

float valveVal[22];
assign valveVal to {
"SCL31-BL01:CM01-CV8402:Valve", "SCL31-BL01:CM02-CV8402:Valve", "SCL31-BL01:CM03-CV8402:Valve",
"SCL31-BL01:CM04-CV8402:Valve", "SCL31-BL01:CM05-CV8402:Valve", "SCL31-BL01:CM06-CV8402:Valve",
"SCL31-BL01:CM07-CV8402:Valve", "SCL31-BL01:CM08-CV8402:Valve", "SCL31-BL01:CM09-CV8402:Valve",
"SCL31-BL01:CM10-CV8402:Valve", "SCL31-BL01:CM11-CV8402:Valve", "SCL31-BL01:CM12-CV8402:Valve",
"SCL31-BL01:CM13-CV8402:Valve", "SCL31-BL01:CM14-CV8402:Valve", "SCL31-BL01:CM15-CV8402:Valve",
"SCL31-BL01:CM16-CV8402:Valve", "SCL31-BL01:CM17-CV8402:Valve", "SCL31-BL01:CM18-CV8402:Valve",
"SCL31-BL01:CM19-CV8402:Valve", "SCL31-BL01:CM20-CV8402:Valve", "SCL31-BL01:CM21-CV8402:Valve",
"SCL31-BL01:CM22-CV8402:Valve"
};
monitor valveVal;

evflag  evFanout;
sync	valveVal	evFanout;

int index = 0;
assign index to "SCL3:CD-OM0364:IndexPV";
monitor index;

int proc = 1;

float om0364Val;
assign om0364Val to "SCL3:CD-OM0364:Value";
monitor om0364Val;

float cdDelay;
assign cdDelay to "SCL3:CD-OM0364:ScanTime";
monitor cdDelay;

float	valvewave[22];
assign	valvewave to "SCL3:CD-OM0364:ValveWave";
monitor valvewave;


ss ssCDOM0364
{
	state CDOM0364
	{
		when(delay(cdDelay)) 
		{
			if(om0364Val == 50) {
				om0364Val = 0;
				index++;
				pvPut(index, SYNC);
			} else {
				om0364Val = valveVal[index];
			};


			pvPut(om0364Val, SYNC);
			if(index < 22)
			{
				om0364LogicProc[index] = proc;
				pvPut(om0364LogicProc[index], SYNC);
			};
		}state CDOM0364
	}
	
}

ss ssOM0364ValveWave
{
	state init
	{
		when(TRUE)
		{
			efClear(evFanout);
		}state MakeOM0364ValveWave
	}

	state MakeOM0364ValveWave
	{
		when(efTestAndClear(evFanout)) 
		{
			int idx = 0;
			for(idx = 0; idx < 22;idx++)
				valvewave[idx] = valveVal[idx];

			pvPut(valvewave, SYNC);
		}state MakeOM0364ValveWave
	}
}

