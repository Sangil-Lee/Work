program CDOM0365Logic
option +r;

%% #include <math.h>

int om0365LogicProc[66];
assign om0365LogicProc to {
"SCL32-BL02:CM01-CV8402:CDLogic.PROC", "SCL32-BL02:CM02-CV8402:CDLogic.PROC", "SCL32-BL02:CM03-CV8402:CDLogic.PROC",
"SCL32-BL02:CM04-CV8402:CDLogic.PROC", "SCL32-BL02:CM05-CV8402:CDLogic.PROC", "SCL32-BL02:CM06-CV8402:CDLogic.PROC",
"SCL32-BL02:CM07-CV8402:CDLogic.PROC", "SCL32-BL02:CM08-CV8402:CDLogic.PROC", "SCL32-BL02:CM09-CV8402:CDLogic.PROC",
"SCL32-BL02:CM10-CV8402:CDLogic.PROC", "SCL32-BL02:CM11-CV8402:CDLogic.PROC", "SCL32-BL02:CM12-CV8402:CDLogic.PROC",
"SCL32-BL02:CM13-CV8402:CDLogic.PROC", "SCL32-BL03:CM01-CV8402:CDLogic.PROC", "SCL32-BL03:CM02-CV8402:CDLogic.PROC",
"SCL32-BL03:CM03-CV8402:CDLogic.PROC", "SCL32-BL03:CM04-CV8402:CDLogic.PROC", "SCL32-BL03:CM05-CV8402:CDLogic.PROC",
"SCL32-BL03:CM06-CV8402:CDLogic.PROC", "SCL32-BL03:CM07-CV8402:CDLogic.PROC", "SCL32-BL03:CM08-CV8402:CDLogic.PROC",
"SCL32-BL03:CM09-CV8402:CDLogic.PROC", "SCL32-BL03:CM10-CV8402:CDLogic.PROC", "SCL32-BL03:CM11-CV8402:CDLogic.PROC",
"SCL32-BL03:CM12-CV8402:CDLogic.PROC", "SCL32-BL03:CM13-CV8402:CDLogic.PROC", "SCL32-BL03:CM14-CV8402:CDLogic.PROC",
"SCL32-BL03:CM15-CV8402:CDLogic.PROC", "SCL32-BL03:CM16-CV8402:CDLogic.PROC", "SCL32-BL03:CM17-CV8402:CDLogic.PROC",
"SCL32-BL03:CM18-CV8402:CDLogic.PROC", "SCL32-BL03:CM19-CV8402:CDLogic.PROC", "P2DT-BL04:CM01-CV8402:CDLogic.PROC",
"SCL32-BL02:CM01-CV8403:CDLogic.PROC", "SCL32-BL02:CM02-CV8403:CDLogic.PROC", "SCL32-BL02:CM03-CV8403:CDLogic.PROC",
"SCL32-BL02:CM04-CV8403:CDLogic.PROC", "SCL32-BL02:CM05-CV8403:CDLogic.PROC", "SCL32-BL02:CM06-CV8403:CDLogic.PROC",
"SCL32-BL02:CM07-CV8403:CDLogic.PROC", "SCL32-BL02:CM08-CV8403:CDLogic.PROC", "SCL32-BL02:CM09-CV8403:CDLogic.PROC",
"SCL32-BL02:CM10-CV8403:CDLogic.PROC", "SCL32-BL02:CM11-CV8403:CDLogic.PROC", "SCL32-BL02:CM12-CV8403:CDLogic.PROC",
"SCL32-BL02:CM13-CV8403:CDLogic.PROC", "SCL32-BL03:CM01-CV8403:CDLogic.PROC", "SCL32-BL03:CM02-CV8403:CDLogic.PROC",
"SCL32-BL03:CM03-CV8403:CDLogic.PROC", "SCL32-BL03:CM04-CV8403:CDLogic.PROC", "SCL32-BL03:CM05-CV8403:CDLogic.PROC",
"SCL32-BL03:CM06-CV8403:CDLogic.PROC", "SCL32-BL03:CM07-CV8403:CDLogic.PROC", "SCL32-BL03:CM08-CV8403:CDLogic.PROC",
"SCL32-BL03:CM09-CV8403:CDLogic.PROC", "SCL32-BL03:CM10-CV8403:CDLogic.PROC", "SCL32-BL03:CM11-CV8403:CDLogic.PROC",
"SCL32-BL03:CM12-CV8403:CDLogic.PROC", "SCL32-BL03:CM13-CV8403:CDLogic.PROC", "SCL32-BL03:CM14-CV8403:CDLogic.PROC",
"SCL32-BL03:CM15-CV8403:CDLogic.PROC", "SCL32-BL03:CM16-CV8403:CDLogic.PROC", "SCL32-BL03:CM17-CV8403:CDLogic.PROC",
"SCL32-BL03:CM18-CV8403:CDLogic.PROC", "SCL32-BL03:CM19-CV8403:CDLogic.PROC", "P2DT-BL04:CM01-CV8403:CDLogic.PROC"
};
monitor om0365LogicProc;

float valveVal[66];
assign valveVal to {
":Valve"
"SCL32-BL02:CM01-CV8402:Valve", "SCL32-BL02:CM02-CV8402:Valve", "SCL32-BL02:CM03-CV8402:Valve",
"SCL32-BL02:CM04-CV8402:Valve", "SCL32-BL02:CM05-CV8402:Valve", "SCL32-BL02:CM06-CV8402:Valve",
"SCL32-BL02:CM07-CV8402:Valve", "SCL32-BL02:CM08-CV8402:Valve", "SCL32-BL02:CM09-CV8402:Valve",
"SCL32-BL02:CM10-CV8402:Valve", "SCL32-BL02:CM11-CV8402:Valve", "SCL32-BL02:CM12-CV8402:Valve",
"SCL32-BL02:CM13-CV8402:Valve", "SCL32-BL03:CM01-CV8402:Valve", "SCL32-BL03:CM02-CV8402:Valve",
"SCL32-BL03:CM03-CV8402:Valve", "SCL32-BL03:CM04-CV8402:Valve", "SCL32-BL03:CM05-CV8402:Valve",
"SCL32-BL03:CM06-CV8402:Valve", "SCL32-BL03:CM07-CV8402:Valve", "SCL32-BL03:CM08-CV8402:Valve",
"SCL32-BL03:CM09-CV8402:Valve", "SCL32-BL03:CM10-CV8402:Valve", "SCL32-BL03:CM11-CV8402:Valve",
"SCL32-BL03:CM12-CV8402:Valve", "SCL32-BL03:CM13-CV8402:Valve", "SCL32-BL03:CM14-CV8402:Valve",
"SCL32-BL03:CM15-CV8402:Valve", "SCL32-BL03:CM16-CV8402:Valve", "SCL32-BL03:CM17-CV8402:Valve",
"SCL32-BL03:CM18-CV8402:Valve", "SCL32-BL03:CM19-CV8402:Valve", "P2DT-BL04:CM01-CV8402:Valve",
"SCL32-BL02:CM01-CV8403:Valve", "SCL32-BL02:CM02-CV8403:Valve", "SCL32-BL02:CM03-CV8403:Valve",
"SCL32-BL02:CM04-CV8403:Valve", "SCL32-BL02:CM05-CV8403:Valve", "SCL32-BL02:CM06-CV8403:Valve",
"SCL32-BL02:CM07-CV8403:Valve", "SCL32-BL02:CM08-CV8403:Valve", "SCL32-BL02:CM09-CV8403:Valve",
"SCL32-BL02:CM10-CV8403:Valve", "SCL32-BL02:CM11-CV8403:Valve", "SCL32-BL02:CM12-CV8403:Valve",
"SCL32-BL02:CM13-CV8403:Valve", "SCL32-BL03:CM01-CV8403:Valve", "SCL32-BL03:CM02-CV8403:Valve",
"SCL32-BL03:CM03-CV8403:Valve", "SCL32-BL03:CM04-CV8403:Valve", "SCL32-BL03:CM05-CV8403:Valve",
"SCL32-BL03:CM06-CV8403:Valve", "SCL32-BL03:CM07-CV8403:Valve", "SCL32-BL03:CM08-CV8403:Valve",
"SCL32-BL03:CM09-CV8403:Valve", "SCL32-BL03:CM10-CV8403:Valve", "SCL32-BL03:CM11-CV8403:Valve",
"SCL32-BL03:CM12-CV8403:Valve", "SCL32-BL03:CM13-CV8403:Valve", "SCL32-BL03:CM14-CV8403:Valve",
"SCL32-BL03:CM15-CV8403:Valve", "SCL32-BL03:CM16-CV8403:Valve", "SCL32-BL03:CM17-CV8403:Valve",
"SCL32-BL03:CM18-CV8403:Valve", "SCL32-BL03:CM19-CV8403:Valve", "P2DT-BL04:CM01-CV8403:Valve"
};

monitor valveVal;

evflag  evFanout;
sync	valveVal	evFanout;

int index = 0;
assign index to "SCL3:CD-OM0365:IndexPV";
monitor index;

int proc = 1;

float om0365Val;
assign om0365Val to "SCL3:CD-OM0365:Value";
monitor om0365Val;

float cdDelay;
assign cdDelay to "SCL3:CD-OM0365:ScanTime";
monitor cdDelay;

float	valvewave[66];
assign	valvewave to "SCL3:CD-OM0365:ValveWave";
monitor valvewave;


ss ssCDOM0365
{
	state CDOM0365
	{
		when(delay(cdDelay)) 
		{
			if(index < 33)
			{
				if(om0365Val == 100) {
					om0365Val = 0;
					index++;
					pvPut(index, SYNC);
				} else {
					om0365Val = valveVal[index];
				};
			}
			else
			{
				if(om0365Val == 50) {
					om0365Val = 0;
					index++;
					pvPut(index, SYNC);
				} else {
					om0365Val = valveVal[index];
				};
			};


			pvPut(om0365Val, SYNC);
			if(index < 66)
			{
				om0365LogicProc[index] = proc;
				pvPut(om0365LogicProc[index], SYNC);
			};
		}state CDOM0365
	}
	
}

ss ssOM0365ValveWave
{
	state init
	{
		when(TRUE)
		{
			efClear(evFanout);
		}state MakeOM0365ValveWave
	}

	state MakeOM0365ValveWave
	{
		when(efTestAndClear(evFanout)) 
		{
			int idx = 0;
			for(idx = 0; idx < 66;idx++)
				valvewave[idx] = valveVal[idx];

			pvPut(valvewave, SYNC);
		}state MakeOM0365ValveWave
	}
}

