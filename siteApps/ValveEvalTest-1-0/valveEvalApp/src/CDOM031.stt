program CDOM031Logic
option +r;

%% #include <math.h>

char om03logicProc[107][60] = {
"Cryo-CDL00:TBx01-XV7502:CDLogic.PROC", "Cryo-CDL00:TBx01-XV7501:CDLogic.PROC", "Cryo-CDL00:TBx01-CV7505:CDLogic.PROC", 
"Cryo-CDL00:TBx01-CV7502:CDLogic.PROC", "Cryo-CDL00:TBx01-CV7503:CDLogic.PROC", "Cryo-CDL00:TBx01-CV7501:CDLogic.PROC", 
"SCL31-CDL01:EBx01-CV7501:CDLogic.PROC", "P2DT-CDL04:VBx01-CV7501:CDLogic.PROC", "P2DT-CDL04:VBx01-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx19-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx19-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx18-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx18-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx17-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx17-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx16-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx16-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx15-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx15-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx14-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx14-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx13-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx13-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx12-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx12-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx11-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx11-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx10-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx10-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx09-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx09-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx08-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx08-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx07-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx07-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx06-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx06-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx05-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx05-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx04-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx04-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx03-CV7501:CDLogic.PROC",
"SCL32-CDL03:VBx03-XV7501:CDLogic.PROC", "SCL32-CDL03:VBx02-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx02-XV7501:CDLogic.PROC",
"SCL32-CDL03:VBx01-CV7501:CDLogic.PROC", "SCL32-CDL03:VBx01-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx13-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx13-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx12-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx12-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx11-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx11-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx10-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx10-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx09-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx09-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx08-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx08-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx07-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx07-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx06-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx06-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx05-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx05-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx04-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx04-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx03-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx03-XV7501:CDLogic.PROC",
"SCL32-CDL02:VBx02-CV7501:CDLogic.PROC", "SCL32-CDL02:VBx02-XV7501:CDLogic.PROC", "SCL32-CDL02:VBx01-CV7501:CDLogic.PROC",
"SCL32-CDL02:VBx01-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx22-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx22-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx20-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx20-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx18-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx18-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx16-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx16-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx14-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx14-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx12-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx12-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx10-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx10-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx08-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx08-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx06-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx06-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx04-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx04-XV7501:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7501:CDLogic.PROC", "SCL31-CDL01:VBx02-CV7502:CDLogic.PROC",
"SCL31-CDL01:VBx02-XV7501:CDLogic.PROC", "SCL31-CDL01:EBx01-CV7502:CDLogic.PROC"
};

char valveName[107][60] = {
"Cryo-CDL00:TBx01-XV7502:Valve", "Cryo-CDL00:TBx01-XV7501:Valve", "Cryo-CDL00:TBx01-CV7505:Valve", 
"Cryo-CDL00:TBx01-CV7502:Valve", "Cryo-CDL00:TBx01-CV7503:Valve", "Cryo-CDL00:TBx01-CV7501:Valve", 
"SCL31-CDL01:EBx01-CV7501:Valve", "P2DT-CDL04:VBx01-CV7501:Valve", "P2DT-CDL04:VBx01-XV7501:Valve",
"SCL32-CDL03:VBx19-CV7501:Valve", "SCL32-CDL03:VBx19-XV7501:Valve", "SCL32-CDL03:VBx18-CV7501:Valve",
"SCL32-CDL03:VBx18-XV7501:Valve", "SCL32-CDL03:VBx17-CV7501:Valve", "SCL32-CDL03:VBx17-XV7501:Valve",
"SCL32-CDL03:VBx16-CV7501:Valve", "SCL32-CDL03:VBx16-XV7501:Valve", "SCL32-CDL03:VBx15-CV7501:Valve",
"SCL32-CDL03:VBx15-XV7501:Valve", "SCL32-CDL03:VBx14-CV7501:Valve", "SCL32-CDL03:VBx14-XV7501:Valve",
"SCL32-CDL03:VBx13-CV7501:Valve", "SCL32-CDL03:VBx13-XV7501:Valve", "SCL32-CDL03:VBx12-CV7501:Valve",
"SCL32-CDL03:VBx12-XV7501:Valve", "SCL32-CDL03:VBx11-CV7501:Valve", "SCL32-CDL03:VBx11-XV7501:Valve",
"SCL32-CDL03:VBx10-CV7501:Valve", "SCL32-CDL03:VBx10-XV7501:Valve", "SCL32-CDL03:VBx09-CV7501:Valve",
"SCL32-CDL03:VBx09-XV7501:Valve", "SCL32-CDL03:VBx08-CV7501:Valve", "SCL32-CDL03:VBx08-XV7501:Valve",
"SCL32-CDL03:VBx07-CV7501:Valve", "SCL32-CDL03:VBx07-XV7501:Valve", "SCL32-CDL03:VBx06-CV7501:Valve",
"SCL32-CDL03:VBx06-XV7501:Valve", "SCL32-CDL03:VBx05-CV7501:Valve", "SCL32-CDL03:VBx05-XV7501:Valve",
"SCL32-CDL03:VBx04-CV7501:Valve", "SCL32-CDL03:VBx04-XV7501:Valve", "SCL32-CDL03:VBx03-CV7501:Valve",
"SCL32-CDL03:VBx03-XV7501:Valve", "SCL32-CDL03:VBx02-CV7501:Valve", "SCL32-CDL03:VBx02-XV7501:Valve",
"SCL32-CDL03:VBx01-CV7501:Valve", "SCL32-CDL03:VBx01-XV7501:Valve", "SCL32-CDL02:VBx13-CV7501:Valve",
"SCL32-CDL02:VBx13-XV7501:Valve", "SCL32-CDL02:VBx12-CV7501:Valve", "SCL32-CDL02:VBx12-XV7501:Valve",
"SCL32-CDL02:VBx11-CV7501:Valve", "SCL32-CDL02:VBx11-XV7501:Valve", "SCL32-CDL02:VBx10-CV7501:Valve",
"SCL32-CDL02:VBx10-XV7501:Valve", "SCL32-CDL02:VBx09-CV7501:Valve", "SCL32-CDL02:VBx09-XV7501:Valve",
"SCL32-CDL02:VBx08-CV7501:Valve", "SCL32-CDL02:VBx08-XV7501:Valve", "SCL32-CDL02:VBx07-CV7501:Valve",
"SCL32-CDL02:VBx07-XV7501:Valve", "SCL32-CDL02:VBx06-CV7501:Valve", "SCL32-CDL02:VBx06-XV7501:Valve",
"SCL32-CDL02:VBx05-CV7501:Valve", "SCL32-CDL02:VBx05-XV7501:Valve", "SCL32-CDL02:VBx04-CV7501:Valve",
"SCL32-CDL02:VBx04-XV7501:Valve", "SCL32-CDL02:VBx03-CV7501:Valve", "SCL32-CDL02:VBx03-XV7501:Valve",
"SCL32-CDL02:VBx02-CV7501:Valve", "SCL32-CDL02:VBx02-XV7501:Valve", "SCL32-CDL02:VBx01-CV7501:Valve",
"SCL32-CDL02:VBx01-XV7501:Valve", "SCL31-CDL01:VBx22-CV7501:Valve", "SCL31-CDL01:VBx22-CV7502:Valve",
"SCL31-CDL01:VBx22-XV7501:Valve", "SCL31-CDL01:VBx20-CV7501:Valve", "SCL31-CDL01:VBx20-CV7502:Valve",
"SCL31-CDL01:VBx20-XV7501:Valve", "SCL31-CDL01:VBx18-CV7501:Valve", "SCL31-CDL01:VBx18-CV7502:Valve",
"SCL31-CDL01:VBx18-XV7501:Valve", "SCL31-CDL01:VBx16-CV7501:Valve", "SCL31-CDL01:VBx16-CV7502:Valve",
"SCL31-CDL01:VBx16-XV7501:Valve", "SCL31-CDL01:VBx14-CV7501:Valve", "SCL31-CDL01:VBx14-CV7502:Valve",
"SCL31-CDL01:VBx14-XV7501:Valve", "SCL31-CDL01:VBx12-CV7501:Valve", "SCL31-CDL01:VBx12-CV7502:Valve",
"SCL31-CDL01:VBx12-XV7501:Valve", "SCL31-CDL01:VBx10-CV7501:Valve", "SCL31-CDL01:VBx10-CV7502:Valve",
"SCL31-CDL01:VBx10-XV7501:Valve", "SCL31-CDL01:VBx08-CV7501:Valve", "SCL31-CDL01:VBx08-CV7502:Valve",
"SCL31-CDL01:VBx08-XV7501:Valve", "SCL31-CDL01:VBx06-CV7501:Valve", "SCL31-CDL01:VBx06-CV7502:Valve",
"SCL31-CDL01:VBx06-XV7501:Valve", "SCL31-CDL01:VBx04-CV7501:Valve", "SCL31-CDL01:VBx04-CV7502:Valve",
"SCL31-CDL01:VBx04-XV7501:Valve", "SCL31-CDL01:VBx02-CV7501:Valve", "SCL31-CDL01:VBx02-CV7502:Valve",
"SCL31-CDL01:VBx02-XV7501:Valve", "SCL31-CDL01:EBx01-CV7502:Valve"
};

int index = 0;
assign index to "SCL3:CD-OM031:IndexPV";
monitor index;


float om031Val;
assign om031Val to "SCL3:CD-OM031:Value";
monitor om031Val;

float cdDelay;
assign cdDelay to "SCL3:CD-OM031:ScanTime";
monitor cdDelay;

float	valvewave[107];
assign	valvewave to "SCL3:CD-OM031:ValveWave";
monitor valvewave;

//float	valveval[107];
char	logicname[60];
int proc = 1;
assign proc to "";

char	valvename[60];
float	valveval;
assign  valveval to "";

evflag	efNext;

ss ssCDOM031
{
	state init
	{
		when(TRUE)
		{
			//efSet(efNext);
		}state CDOM031_Init
	}
	state CDOM031_Init
	{
		//when(delay(cdDelay)&&efTest(efNext))
		when(delay(cdDelay))
		{
			sprintf(logicname, "%s", om03logicProc[index]);
			printf("%s\n", logicname);
			sprintf(valvename, "%s", valveName[index]);
			printf("%s\n", valvename);

			pvAssign(valveval, valvename);
			pvMonitor(valveval);

			pvAssign(proc, logicname);
			pvMonitor(proc);

		}state CDOM031_Proc
	}

	state CDOM031_Proc
	{
		when(delay(cdDelay) && valveval < 100)
		{
			printf("CDOM031_Proc\n");
			proc = 1;
			pvPut(proc, SYNC);
		}state CDOM031_Proc

		when(delay(cdDelay)&& valveval == 100)
		{
			pvStopMonitor(valveval);
			pvStopMonitor(proc);
			pvAssign(valveval, "");
			pvAssign(proc, "");

			index++;
			pvPut(index, SYNC);
		}state CDOM031_Init
	}
	
}
