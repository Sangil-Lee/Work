# These are the Digital Coil inputs with StepMTst
file "db/bi_bit.template" { pattern
{P,           R,         PORT,             OFFSET,   ZNAM,   ONAM,  ZSV,       OSV,    SCAN}
{STEP:,    CInB0,     Step_Motor_CIn_Bit,     0,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB1,     Step_Motor_CIn_Bit,     1,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB2,     Step_Motor_CIn_Bit,     2,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB3,     Step_Motor_CIn_Bit,     3,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB4,     Step_Motor_CIn_Bit,     4,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB5,     Step_Motor_CIn_Bit,     5,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB6,     Step_Motor_CIn_Bit,     6,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB7,     Step_Motor_CIn_Bit,     7,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
}

# These are the Xn inputs done with bit access X0-X7
file "db/bi_bit.template" { pattern
{P,           R,       PORT,				OFFSET,		ZNAM,   ONAM,  ZSV,       OSV,    SCAN}
{STEP:,    DInB0,     Step_Motor_DIn_Bit,     0,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    DInB1,     Step_Motor_DIn_Bit,     1,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    DInB2,     Step_Motor_DIn_Bit,     2,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    DInB3,     Step_Motor_DIn_Bit,     3,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    DInB4,     Step_Motor_DIn_Bit,     4,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    DInB5,     Step_Motor_DIn_Bit,     5,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    DInB6,     Step_Motor_DIn_Bit,     6,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    DInB7,     Step_Motor_DIn_Bit,     7,        Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
}
#
#ese are the Xn inputs done with word access X0-X7
#file "db/bi_word.template" { pattern
#{P,           R,       PORT,           OFFSET, ZNAM, ONAM,  ZSV,       OSV,    MASK,      SCAN}
#{STEP:,    WHR0,     Step_Motor_WHR,     0,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#{STEP:,    WHR1,     Step_Motor_WHR,     1,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#{STEP:,    WHR2,     Step_Motor_WHR,     2,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#{STEP:,    WHR3,     Step_Motor_WHR,     3,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#{STEP:,    WHR4,     Step_Motor_WHR,     4,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#{STEP:,    WHR5,     Step_Motor_WHR,     5,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#{STEP:,    WHR6,     Step_Motor_WHR,     6,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#{STEP:,    WHR7,     Step_Motor_WHR,     7,    Low,  High,  NO_ALARM,  MAJOR,   0xFFFF,   "I/O Intr"}
#}
#
file "db/bi_word.template" { pattern
{P,           R,         PORT,         OFFSET,     MASK,     ZNAM,    ONAM,  ZSV,       OSV,    SCAN}
{STEP:,    WIn0,     Step_Motor_WIn,     0,        0x0001,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    WIn1,     Step_Motor_WIn,     0,        0x0002,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    WIn2,     Step_Motor_WIn,     0,        0x0004,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    WIn3,     Step_Motor_WIn,     0,        0x0008,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    WIn4,     Step_Motor_WIn,     0,        0x0010,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    WIn5,     Step_Motor_WIn,     0,        0x0020,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    WIn6,     Step_Motor_WIn,     0,        0x0040,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    WIn7,     Step_Motor_WIn,     0,        0x0080,    Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
}
#

file "db/bo_bit.template" { pattern
{P,        R,		   PORT,              OFFSET,   ZNAM,   ONAM}
{STEP:,    COutB0,     Step_Motor_BOut,     0,        Low,    High}
{STEP:,    COutB1,     Step_Motor_BOut,     1,        Low,    High}
{STEP:,    COutB2,     Step_Motor_BOut,     2,        Low,    High}
{STEP:,    COutB3,     Step_Motor_BOut,     3,        Low,    High}
{STEP:,    COutB4,     Step_Motor_BOut,     4,        Low,    High}
{STEP:,    COutB5,     Step_Motor_BOut,     5,        Low,    High}
{STEP:,    COutB6,     Step_Motor_BOut,     6,        Low,    High}
{STEP:,    COutB7,     Step_Motor_BOut,     7,        Low,    High}
}
#
file "db/bo_word.template" { pattern
{P,           R,          PORT,               OFFSET,   MASK,      ZNAM,   ONAM}
{STEP:,    DOutW0,     Step_Motor_WOut,     0,        0xFFFF,    Low,    High}
{STEP:,    DOutW1,     Step_Motor_WOut,     1,        0xFFFF,    Low,    High}
{STEP:,    DOutW2,     Step_Motor_WOut,     2,        0xFFFF,    Low,    High}
{STEP:,    DOutW3,     Step_Motor_WOut,     3,        0xFFFF,    Low,    High}
{STEP:,    DOutW4,     Step_Motor_WOut,     4,        0xFFFF,    Low,    High}
{STEP:,    DOutW5,     Step_Motor_WOut,     5,        0xFFFF,    Low,    High}
{STEP:,    DOutW6,     Step_Motor_WOut,     6,        0xFFFF,    Low,    High}
{STEP:,    DOutW7,     Step_Motor_WOut,     7,        0xFFFF,    Low,    High}
}
#
file "db/intarray_out.template" { pattern
{P,           R,            PORT,                   NELM}
{STEP:,    OutBArray,  Step_Motor_BAOut,    0400}
}

file "db/intarray_out.template" { pattern
{P,           R,            PORT,                  NELM}
{STEP:,    OutWArray,  Step_Motor_WAOut,    10}
}

#file "db/ai.template" { pattern
#{P,         R,      PORT,            OFFSET, BITS,  EGUL,  EGUF,   PREC,   SCAN}
#{STEP:,    FInF1,   Step_Motor_FIn,   0,      -13,   -10.,    10.,    3,      "I/O Intr"}
#{STEP:,    FInF2,   Step_Motor_FIn,   2,      -13,   -10.,    10.,    3,      "I/O Intr"}
#}

file "db/aiFloat64.template" { pattern
{P,           R,               PORT,      OFFSET,   DATA_TYPE,    LOPR, HOPR, PREC  SCAN}
{STEP:,    FInF0,        Step_Motor_FIn,   0,    FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF1,        Step_Motor_FIn,   2,    FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF2,        Step_Motor_FIn,   4,    FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF3,        Step_Motor_FIn,   6,    FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF4,        Step_Motor_FIn,   8,    FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF5,        Step_Motor_FIn,   10,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF6,        Step_Motor_FIn,   12,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF7,        Step_Motor_FIn,   14,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF8,        Step_Motor_FIn,   16,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF9,        Step_Motor_FIn,   18,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF10,       Step_Motor_FIn,   20,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF11,       Step_Motor_FIn,   22,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF12,       Step_Motor_FIn,   24,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF13,       Step_Motor_FIn,   26,   FLOAT32_BE,   -1e6,  1e6,    6   ".5 second"}
}

file "db/aoFloat64.template" { pattern
{P,           R,               PORT,      OFFSET,   DATA_TYPE,    LOPR, HOPR, PREC}
{STEP:,    FOutF0,        Step_Motor_FOut,   0,    FLOAT32_BE,   -1e6,  1e6,    6}
{STEP:,    FOutF1,        Step_Motor_FOut,   2,    FLOAT32_BE,   -1e6,  1e6,    6}
{STEP:,    FOutF2,        Step_Motor_FOut,   4,    FLOAT32_BE,   -1e6,  1e6,    6}
{STEP:,    FOutF3,        Step_Motor_FOut,   6,    FLOAT32_BE,   -1e6,  1e6,    6}
}
