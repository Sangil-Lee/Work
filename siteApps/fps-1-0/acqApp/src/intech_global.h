/**
 * Project Name : FPS - Fast Protection System
 * 
 * Copyright 2018 by Intech Telecom Corporation, Inc
 * All right reserved.
 * 
 * Project Description :    To protect the accelerators from sudden beam loss during RAON accelerator operation, 
 *                          we want to develop a Fast Protection System (FPS) based on Field Programmable Gate Array (FPGA).
 *                          Prior to the fabrication of the FPS including the entire range of the RAON accelerator, 
 *                          one chain consisting of one mitigation node and seven acquisition nodes is to be tested.
 *                          Monitoring and operation of this system is performed in the CS-Studio (CSS) Operator Interface (OPI) 
 *                          environment and the data is transferred to the central control system through the EPICS IOC.
 */

/** 
 * File name : intech_global.h
 *
 * File Description : Includes information that includes the header file included in the functions generated by the intra-terecom.
 *
 * Author : Kim Jong In (jongink@imcu.co.kr)
 * Dept : Software
 * Created Date : 2018.07.xx
 * Version	: .
 */

#ifndef __INTECH_GLOBAL_H
#define __INTECH_GLOBAL_H

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <set>
#include <bitset>
#include <iterator>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <stdint.h>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <iocsh.h>
#include <stddef.h>
#include <sys/mman.h>
#include <sys/time.h>
#include <sys/ioctl.h>


/* fps header */
// #include "define.h"
#include "intech_define.h"

/* epics header */
#include <epicsTypes.h>
#include <epicsTime.h>
#include <epicsThread.h>
#include <epicsString.h>
#include <epicsTimer.h>
#include <epicsMutex.h>
#include <epicsEvent.h>
#include <registryFunction.h>
#include <epicsExport.h>
#include <dbCommon.h>




typedef struct _ACQUISITION{
    unsigned short 	interlock;
    unsigned short 	year;
    unsigned short 	day;
    unsigned short 	hour;
    unsigned short 	min;
    unsigned short 	sec;
    unsigned short 	msec;
    unsigned int 	count;
    unsigned int 	dry_data;
    unsigned int 	wet_data;
}ACQ;

#pragma pack(push, 1)

	typedef struct PMS_Time{
		unsigned short interlock	:  1;
		unsigned short year         :  7;
		unsigned short day          :  9;
		unsigned short hour         :  5;
		unsigned short min          :  6;
		unsigned short sec          :  6;
		unsigned short msec         : 10;
		unsigned int   count        : 20;

	}PMS_Time_t;

	typedef struct PMS_Data{
		PMS_Time_t 		Time_Data;
		unsigned int 	Dry_Data;
		unsigned int 	Wet_Data;

	}PMS_Data_t;    // 16Byte

#pragma pack(pop)


#endif