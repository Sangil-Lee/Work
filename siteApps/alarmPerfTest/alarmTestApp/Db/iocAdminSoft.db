# Used by Channel Access Security to determine access to this IOC.
record(mbbo, "$(IOC):ACCESS")
{
  field(DESC, "$(IOC) Acc Mode")
  field(PINI, "YES")
  field(ZRST, "Running")
  field(ZRSV, "NO_ALARM")
  field(ONST, "Maintenance")
  field(ONSV, "MINOR")
  field(TWST, "Test")
  field(TWSV, "MINOR")
  field(THST, "OFFLINE")
  field(THSV, "MAJOR")
  info(autosaveFields, "VAL")
}
record(stringin, "$(IOC):STARTTOD")
{
    field(DESC, "Time and date of startup")
    field(DTYP, "Soft Timestamp")
    field(PINI, "YES")
    field(INP, "@%m/%d/%Y %H:%M:%S")
}
record(stringin, "$(IOC):TOD")
{
    field(DESC, "Current time and date")
    field(DTYP, "Soft Timestamp")
    field(SCAN, "1 second")
    field(INP, "@%m/%d/%Y %H:%M:%S")
}
record(calcout, "$(IOC):HEARTBEAT")
{
    field(DESC, "1 Hz counter since startup")
    field(CALC, "(A<2147483647)?A+1:1")
    field(SCAN, "1 second")
    field(INPA, "$(IOC):HEARTBEAT")
}
# if autosave is working, START_CNT creates a running count of 
# number of times the IOC was started.
record(calcout, "$(IOC):START_CNT")
{
    field(DESC, "Increments at startup")
    field(CALC, "A+1")
    field(PINI, "YES")
    field(INPA, "$(IOC):START_CNT")
    info(autosaveFields_pass0, "VAL")
}
#
# Using an existing internal set of subroutines, this
# PV updates the Access Security mechanism dynamically.
# The .acf file is re-read.
#
record( sub, "$(IOC):READACF")
{
    field( DESC, "$(IOC) ACF Update")
    field( INAM, "asSubInit")
    field( SNAM, "asSubProcess")
    field( BRSV, "INVALID")
}
record(sub, "$(IOC):SYSRESET")
{
    alias("$(IOC):SysReset")
    field(DESC, "IOC Restart" )
    field(SNAM, "rebootProc")
    field(BRSV,"INVALID")
    field(L,"1")
}

record(ai, "$(IOC):CA_CLNT_CNT") {
  field(DESC, "Number of CA Clients")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ca_clients")
  field(HOPR, "200")
  field(HIHI, "175")
  field(HIGH, "100")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "$(IOC):CA_CONN_CNT") {
  field(DESC, "Number of CA Connections")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ca_connections")
  field(HOPR, "5000")
  field(HIHI, "4500")
  field(HIGH, "4000")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "$(IOC):RECORD_CNT") {
  field(DESC, "Number of Records")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@records")
}

record(ai, "$(IOC):FD_MAX") {
  field(DESC, "Max File Descriptors")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@maxfd")
}

record(ai, "$(IOC):FD_CNT") {
  field(DESC, "Allocated File Descriptors")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(FLNK, "$(IOC):FD_FREE  PP MS")
  field(INP, "@fd")
}

record(calc, "$(IOC):FD_FREE") {
  field(DESC, "Available FDs")
  field(CALC, "B>0?B-A:C")
  field(INPA, "$(IOC):FD_CNT  NPP MS")
  field(INPB, "$(IOC):FD_MAX  NPP MS")
  field(INPC, "1000")
  field(HOPR, "150")
  field(LOLO, "5")
  field(LOW, "20")
  field(LLSV, "MAJOR")
  field(LSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR LOW LOLO LSV LLSV")
}

record(ai, "$(IOC):SYS_CPU_LOAD") {
  field(DESC, "System CPU Load")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@sys_cpuload")
  field(EGU, "%")
  field(PREC, "1")
  field(HOPR, "100")
  field(HIHI, "80")
  field(HIGH, "70")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "$(IOC):IOC_CPU_LOAD") {
  alias("$(IOC):LOAD")
  field(DESC, "IOC CPU Load")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ioc_cpuload")
  field(EGU, "%")
  field(PREC, "1")
  field(HOPR, "100")
  field(HIHI, "80")
  field(HIGH, "70")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "$(IOC):CPU_CNT") {
  field(DESC, "Number of CPUs")
  field(DTYP, "IOC stats")
  field(INP, "@no_of_cpus")
  field(PINI, "YES")
}

record(ai, "$(IOC):SUSP_TASK_CNT") {
  field(DESC, "Number Suspended Tasks")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@suspended_tasks")
  field(HIHI, "1")
  field(HHSV, "MAJOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "$(IOC):MEM_USED") {
  field(DESC, "Allocated Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@allocated_bytes")
  field(EGU, "byte")
}

record(ai, "$(IOC):MEM_FREE") {
  field(DESC, "Free Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@free_bytes")
  field(EGU, "byte")
  field(LLSV, "MAJOR")
  field(LSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR LOW LOLO LSV LLSV")
}

record(ai, "$(IOC):MEM_MAX") {
  field(DESC, "Maximum Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@total_bytes")
  field(EGU, "byte")
}

record(ao, "$(IOC):CA_UPD_TIME") {
  field(DESC, "CA Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@ca_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "15")
  field(PINI, "YES")
}

record(ao, "$(IOC):FD_UPD_TIME") {
  field(DESC, "FD Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@fd_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "20")
  field(PINI, "YES")
}

record(ao, "$(IOC):LOAD_UPD_TIME") {
  field(DESC, "CPU Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@cpu_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "10")
  field(PINI, "YES")
}

record(ao, "$(IOC):MEM_UPD_TIME") {
  field(DESC, "Memory Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@memory_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "10")
  field(PINI, "YES")
}

record(stringin, "$(IOC):ST_SCRIPT1") {
  field(DESC, "Startup Script Part1")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script_1")
  field(PINI, "YES")
}

record(stringin, "$(IOC):ST_SCRIPT2") {
  field(DESC, "Startup Script Part2")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script_2")
  field(PINI, "YES")
}

record(waveform, "$(IOC):ST_SCRIPT") {
  field(DESC, "Startup Script")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script")
  field(NELM, "120")
  field(FTVL, "CHAR")
  field(PINI, "YES")
}

record(stringin, "$(IOC):KERNEL_VERS") {
  field(DESC, "Kernel Version")
  field(DTYP, "IOC stats")
  field(INP, "@kernel_ver")
  field(PINI, "YES")
}

record(stringin, "$(IOC):EPICS_VERS") {
  field(DESC, "EPICS Version")
  field(DTYP, "IOC stats")
  field(INP, "@epics_ver")
  field(PINI, "YES")
}

record(waveform, "$(IOC):EPICS_VERSION") {
  field(DESC, "EPICS Version")
  field(DTYP, "IOC stats")
  field(INP, "@epics_ver")
  field(NELM, "120")
  field(FTVL, "CHAR")
  field(PINI, "YES")
}

record(stringin, "$(IOC):HOSTNAME") {
  field(DESC, "Host Name")
  field(DTYP, "IOC stats")
  field(INP, "@hostname")
  field(PINI, "YES")
}

record(stringin, "$(IOC):APP_DIR1") {
  field(DESC, "Application Directory Part 1")
  field(DTYP, "IOC stats")
  field(INP, "@pwd1")
  field(PINI, "YES")
}

record(stringin, "$(IOC):APP_DIR2") {
  field(DESC, "Application Directory Part 2")
  field(DTYP, "IOC stats")
  field(INP, "@pwd2")
  field(PINI, "YES")
}

record(waveform, "$(IOC):APP_DIR") {
  field(DESC, "Application Directory")
  field(DTYP, "IOC stats")
  field(INP, "@pwd")
  field(NELM, "160")
  field(FTVL, "CHAR")
  field(PINI, "YES")
}

record(stringin, "$(IOC):UPTIME") {
  field(DESC, "Elapsed Time since Start")
  field(SCAN, "1 second")
  field(DTYP, "IOC stats")
  field(INP, "@up_time")
  field(PINI, "YES")
}

record(stringin, "$(IOC):ENGINEER") {
  field(DESC, "Engineer")
  field(DTYP, "IOC stats")
  field(INP, "@engineer")
  field(PINI, "YES")
}

record(stringin, "$(IOC):LOCATION") {
  field(DESC, "Location")
  field(DTYP, "IOC stats")
  field(INP, "@location")
  field(PINI, "YES")
}

record(ai, "$(IOC):PROCESS_ID") {
  field(DESC, "Process ID")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@proc_id")
}

record(ai, "$(IOC):PARENT_ID") {
  field(DESC, "Parent Process ID")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@parent_proc_id")
}

record(ai, "$(IOC):SCANONCE_Q_SIZE") {
  field(DESC, "max # entries in IOC scanOnce queue")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueSize")
  field(PINI, "YES")
}
record(ai, "$(IOC):CB_Q_SIZE") {
  field(DESC, "max # entries in IOC callback queues")
  field(DTYP, "IOC stats")
  field(INP,  "@cbQueueSize")
  field(PINI, "YES")
}

record(ai, "$(IOC):SCANONCE_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's scanOnce queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "$(IOC):SCANONCE_Q_HIGHPER")
}

record(calc, "$(IOC):SCANONCE_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's scanOnce queue")
  field(INPA, "$(IOC):SCANONCE_Q_HIGH NPP MS")
  field(INPB, "$(IOC):SCANONCE_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):SCANONCE_Q_USED") {
  field(DESC, "# of entries in IOC's scanOnce queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueUsed")
  field(PINI, "YES")
  field(FLNK, "$(IOC):SCANONCE_Q_USEDPER")
}

record(calc, "$(IOC):SCANONCE_Q_USEDPER") {
  field(DESC, "Percentage of IOC's scanOnce queue used")
  field(INPA, "$(IOC):SCANONCE_Q_USED NPP MS")
  field(INPB, "$(IOC):SCANONCE_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):SCANONCE_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's scanOnce queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueOverruns")
  field(PINI, "YES")
}

record(ai, "$(IOC):CBLOW_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's cbLow queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbLowQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "$(IOC):CBLOW_Q_HIGHPER")
}

record(calc, "$(IOC):CBLOW_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's cbLow queue")
  field(INPA, "$(IOC):CBLOW_Q_HIGH NPP MS")
  field(INPB, "$(IOC):CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):CBLOW_Q_USED") {
  field(DESC, "# of entries in IOC's cbLow queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbLowQueueUsed")
  field(PINI, "YES")
  field(FLNK, "$(IOC):CBLOW_Q_USEDPER")
}

record(calc, "$(IOC):CBLOW_Q_USEDPER") {
  field(DESC, "Percentage of IOC's cbLow queue used")
  field(INPA, "$(IOC):CBLOW_Q_USED NPP MS")
  field(INPB, "$(IOC):CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):CBLOW_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's cbLow queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbLowQueueOverruns")
  field(PINI, "YES")
}

record(ai, "$(IOC):CBMEDIUM_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's cbMedium queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbMediumQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "$(IOC):CBMEDIUM_Q_HIGHPER")
}

record(calc, "$(IOC):CBMEDIUM_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's cbMedium queue")
  field(INPA, "$(IOC):CBMEDIUM_Q_HIGH NPP MS")
  field(INPB, "$(IOC):CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):CBMEDIUM_Q_USED") {
  field(DESC, "# of entries in IOC's cbMedium queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbMediumQueueUsed")
  field(PINI, "YES")
  field(FLNK, "$(IOC):CBMEDIUM_Q_USEDPER")
}

record(calc, "$(IOC):CBMEDIUM_Q_USEDPER") {
  field(DESC, "Percentage of IOC's cbMedium queue used")
  field(INPA, "$(IOC):CBMEDIUM_Q_USED NPP MS")
  field(INPB, "$(IOC):CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):CBMEDIUM_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's cbMedium queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbMediumQueueOverruns")
  field(PINI, "YES")
}

record(ai, "$(IOC):CBHIGH_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's cbHigh queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbHighQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "$(IOC):CBHIGH_Q_HIGHPER")
}

record(calc, "$(IOC):CBHIGH_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's cbHigh queue")
  field(INPA, "$(IOC):CBHIGH_Q_HIGH NPP MS")
  field(INPB, "$(IOC):CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):CBHIGH_Q_USED") {
  field(DESC, "# of entries in IOC's cbHigh queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbHighQueueUsed")
  field(PINI, "YES")
  field(FLNK, "$(IOC):CBHIGH_Q_USEDPER")
}

record(calc, "$(IOC):CBHIGH_Q_USEDPER") {
  field(DESC, "Percentage of IOC's cbHigh queue used")
  field(INPA, "$(IOC):CBHIGH_Q_USED NPP MS")
  field(INPB, "$(IOC):CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "$(IOC):CBHIGH_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's cbHigh queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbHighQueueOverruns")
  field(PINI, "YES")
}
record(ai, "$(IOC):GTIM_TIME") {
  field(DESC, "Gen Time Secs since 1990")
  field(SCAN, "1 second")
  field(DTYP, "General Time")
  field(PREC, "3")
  field(INP,  "@TIME")
  field(EGU,  "sec")
}

record(bo, "$(IOC):GTIM_RESET") {
  field(DESC, "Gen Time Error Reset")
  field(DTYP, "General Time")
  field(OUT,  "@RSTERRCNT")
  field(ZNAM, "Reset")
  field(ONAM, "Reset")
}

record(longin, "$(IOC):GTIM_ERR_CNT") {
  field(DESC, "Gen Time Error Count")
  field(DTYP, "General Time")
  field(INP,  "@GETERRCNT")
  field(SCAN, "1 second")
  field(HIHI, "1")
  field(HHSV, "MAJOR")
}

record(stringin, "$(IOC):GTIM_CUR_SRC") {
  field(DESC, "Gen Time Current Provider")
  field(DTYP, "General Time")
  field(INP,  "@BESTTCP")
  field(SCAN, "1 second")
}

record(stringin, "$(IOC):GTIM_EVT_SRC") {
  field(DESC, "Gen Time Event Provider")
  field(DTYP, "General Time")
  field(INP,  "@BESTTEP")
  field(SCAN, "1 second")
}

record(stringin, "$(IOC):GTIM_HI_SRC") {
  field(DESC, "Gen Time Highest Provider")
  field(DTYP, "General Time")
  field(INP,  "@TOPTCP")
  field(SCAN, "1 second")
}
record(bo, "$(IOC):01HZ_MODE") {
	field(DESC, "01HZ Mode")
	field(DOL, "1")
	field(PINI, "YES")
	field(ZNAM, "Relative")
	field(ONAM, "Absolute")
}
record(sub, "$(IOC):01HZ_UPD_TIME") {
	field(DESC, "01HZ Update Time")
	field(SCAN, "10 second")
	field(EGU, "second")
	field(PREC, "5")
	field(MDEL, "0.00001")
	field(HYST, "0.00002")
	field(INAM, "scanMonInit")
	field(SNAM, "scanMon")
	field(HHSV, "MAJOR")
	field(HSV, "MINOR")
	field(LSV, "MINOR")
	field(LLSV, "MAJOR")
	field(BRSV, "INVALID")
	field(INPA, "$(IOC):01HZ_MODE")
	field(B,    "1.0")
	field(C,    "5.0")
}
record(bo, "$(IOC):02HZ_MODE") {
	field(DESC, "02HZ Mode")
	field(DOL, "1")
	field(PINI, "YES")
	field(ZNAM, "Relative")
	field(ONAM, "Absolute")
}
record(sub, "$(IOC):02HZ_UPD_TIME") {
	field(DESC, "02HZ Update Time")
	field(SCAN, "5 second")
	field(EGU, "second")
	field(PREC, "5")
	field(MDEL, "0.00001")
	field(HYST, "0.00002")
	field(INAM, "scanMonInit")
	field(SNAM, "scanMon")
	field(HHSV, "MAJOR")
	field(HSV, "MINOR")
	field(LSV, "MINOR")
	field(LLSV, "MAJOR")
	field(BRSV, "INVALID")
	field(INPA, "$(IOC):02HZ_MODE")
	field(B,    "1.0")
	field(C,    "5.0")
}
record(bo, "$(IOC):05HZ_MODE") {
	field(DESC, "05HZ Mode")
	field(DOL, "1")
	field(PINI, "YES")
	field(ZNAM, "Relative")
	field(ONAM, "Absolute")
}
record(sub, "$(IOC):05HZ_UPD_TIME") {
	field(DESC, "05HZ Update Time")
	field(SCAN, "2 second")
	field(EGU, "second")
	field(PREC, "5")
	field(MDEL, "0.00001")
	field(HYST, "0.00002")
	field(INAM, "scanMonInit")
	field(SNAM, "scanMon")
	field(HHSV, "MAJOR")
	field(HSV, "MINOR")
	field(LSV, "MINOR")
	field(LLSV, "MAJOR")
	field(BRSV, "INVALID")
	field(INPA, "$(IOC):05HZ_MODE")
	field(B,    "1.0")
	field(C,    "5.0")
}
record(bo, "$(IOC):1HZ_MODE") {
	field(DESC, "1HZ Mode")
	field(DOL, "1")
	field(PINI, "YES")
	field(ZNAM, "Relative")
	field(ONAM, "Absolute")
}
record(sub, "$(IOC):1HZ_UPD_TIME") {
	field(DESC, "1HZ Update Time")
	field(SCAN, "1 second")
	field(EGU, "second")
	field(PREC, "5")
	field(MDEL, "0.00001")
	field(HYST, "0.00002")
	field(INAM, "scanMonInit")
	field(SNAM, "scanMon")
	field(HHSV, "MAJOR")
	field(HSV, "MINOR")
	field(LSV, "MINOR")
	field(LLSV, "MAJOR")
	field(BRSV, "INVALID")
	field(INPA, "$(IOC):1HZ_MODE")
	field(B,    "1.0")
	field(C,    "5.0")
}
record(bo, "$(IOC):2HZ_MODE") {
	field(DESC, "2HZ Mode")
	field(DOL, "1")
	field(PINI, "YES")
	field(ZNAM, "Relative")
	field(ONAM, "Absolute")
}
record(sub, "$(IOC):2HZ_UPD_TIME") {
	field(DESC, "2HZ Update Time")
	field(SCAN, ".5 second")
	field(EGU, "second")
	field(PREC, "5")
	field(MDEL, "0.00001")
	field(HYST, "0.00002")
	field(INAM, "scanMonInit")
	field(SNAM, "scanMon")
	field(HHSV, "MAJOR")
	field(HSV, "MINOR")
	field(LSV, "MINOR")
	field(LLSV, "MAJOR")
	field(BRSV, "INVALID")
	field(INPA, "$(IOC):2HZ_MODE")
	field(B,    "1.0")
	field(C,    "5.0")
}
record(bo, "$(IOC):5HZ_MODE") {
	field(DESC, "5HZ Mode")
	field(DOL, "1")
	field(PINI, "YES")
	field(ZNAM, "Relative")
	field(ONAM, "Absolute")
}
record(sub, "$(IOC):5HZ_UPD_TIME") {
	field(DESC, "5HZ Update Time")
	field(SCAN, ".2 second")
	field(EGU, "second")
	field(PREC, "5")
	field(MDEL, "0.00001")
	field(HYST, "0.00002")
	field(INAM, "scanMonInit")
	field(SNAM, "scanMon")
	field(HHSV, "MAJOR")
	field(HSV, "MINOR")
	field(LSV, "MINOR")
	field(LLSV, "MAJOR")
	field(BRSV, "INVALID")
	field(INPA, "$(IOC):5HZ_MODE")
	field(B,    "1.0")
	field(C,    "5.0")
}
record(bo, "$(IOC):10HZ_MODE") {
	field(DESC, "10HZ Mode")
	field(DOL, "1")
	field(PINI, "YES")
	field(ZNAM, "Relative")
	field(ONAM, "Absolute")
}
record(sub, "$(IOC):10HZ_UPD_TIME") {
	field(DESC, "10HZ Update Time")
	field(SCAN, ".1 second")
	field(EGU, "second")
	field(PREC, "5")
	field(MDEL, "0.00001")
	field(HYST, "0.00002")
	field(INAM, "scanMonInit")
	field(SNAM, "scanMon")
	field(HHSV, "MAJOR")
	field(HSV, "MINOR")
	field(LSV, "MINOR")
	field(LLSV, "MAJOR")
	field(BRSV, "INVALID")
	field(INPA, "$(IOC):10HZ_MODE")
	field(B,    "1.0")
	field(C,    "5.0")
}

record(calc, "$(IOC):SCANMON_SEVR") {
    field(DESC, "ScanMon Max Severity")
    field(SCAN, "1 second")
    field(CALC, "0")
    field(INPA, "$(IOC):01HZ_UPD_TIME.SEVR MS")
    field(INPB, "$(IOC):02HZ_UPD_TIME.SEVR MS")
    field(INPC, "$(IOC):05HZ_UPD_TIME.SEVR MS")
    field(INPD, "$(IOC):1HZ_UPD_TIME.SEVR MS")
    field(INPE, "$(IOC):2HZ_UPD_TIME.SEVR MS")
    field(INPF, "$(IOC):5HZ_UPD_TIME.SEVR MS")
    field(INPG, "$(IOC):10HZ_UPD_TIME.SEVR MS")
}

record(stringin, "$(IOC):CA_ADDR_LIST") {
  field(DESC, "EPICS_CA_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_ADDR_LIST")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CA_CONN_TIME") {
  field(DESC, "EPICS_CA_CONN_TMO")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_CONN_TMO")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CA_AUTO_ADDR") {
  field(DESC, "EPICS_CA_AUTO_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_AUTO_ADDR_LIST")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CA_RPTR_PORT") {
  field(DESC, "EPICS_CA_REPEATER_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_REPEATER_PORT")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CA_SRVR_PORT") {
  field(DESC, "EPICS_CA_SERVER_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_SERVER_PORT")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CA_MAX_ARRAY") {
  field(DESC, "EPICS_CA_MAX_ARRAY_BYTES")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_MAX_ARRAY_BYTES")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CA_SRCH_TIME") {
  field(DESC, "EPICS_CA_MAX_SEARCH_PERIOD")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_MAX_SEARCH_PERIOD")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CA_BEAC_TIME") {
  field(DESC, "EPICS_CA_BEACON_PERIOD")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_BEACON_PERIOD")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CAS_SRVR_PORT") {
  field(DESC, "EPICS_CAS_SERVER_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CAS_SERVER_PORT")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CAS_AUTO_ADDR") {
  field(DESC, "EPICS_CAS_AUTO_BEACON_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CAS_AUTO_BEACON_ADDR_LIST")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CAS_ADDR_LIST") {
  field(DESC, "EPICS_CAS_BEACON_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CAS_BEACON_ADDR_LIST")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CAS_BEACON_PERIOD") {
  field(DESC, "EPICS_CAS_BEACON_PERIOD")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CAS_BEACON_PERIOD")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CAS_BEACON_PORT") {
  field(DESC, "EPICS_CAS_BEACON_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CAS_BEACON_PORT")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CAS_ADDR_INTF_LIST") {
  field(DESC, "EPICS_CAS_INTF_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CAS_INTF_ADDR_LIST")
  field(PINI, "YES")
}
record(stringin, "$(IOC):CAS_ADDR_IGNORE_LIST") {
  field(DESC, "EPICS_CAS_IGNORE_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CAS_IGNORE_ADDR_LIST")
  field(PINI, "YES")
}
record(stringin, "$(IOC):TS_NTP_INET") {
  field(DESC, "EPICS_TS_NTP_INET")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_TS_NTP_INET")
  field(PINI, "YES")
}
record(stringin, "$(IOC):IOC_LOG_PORT") {
  field(DESC, "EPICS_IOC_LOG_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_IOC_LOG_PORT")
  field(PINI, "YES")
}
record(stringin, "$(IOC):IOC_LOG_INET") {
  field(DESC, "EPICS_IOC_LOG_INET")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_IOC_LOG_INET")
  field(PINI, "YES")
}
