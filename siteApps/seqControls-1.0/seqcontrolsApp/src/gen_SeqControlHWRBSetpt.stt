program 

option +r;

float groupPVs[38];
assign groupPVs to {
"SCL32-CDL03:VBx01-CV7401:Setpt", "SCL32-CDL03:VBx02-CV7401:Setpt", "SCL32-CDL03:VBx03-CV7401:Setpt",
"SCL32-CDL03:VBx04-CV7401:Setpt", "SCL32-CDL03:VBx05-CV7401:Setpt", "SCL32-CDL03:VBx06-CV7401:Setpt",
"SCL32-CDL03:VBx07-CV7401:Setpt", "SCL32-CDL03:VBx08-CV7401:Setpt", "SCL32-CDL03:VBx09-CV7401:Setpt",
"SCL32-CDL03:VBx10-CV7401:Setpt", "SCL32-CDL03:VBx11-CV7401:Setpt", "SCL32-CDL03:VBx12-CV7401:Setpt",
"SCL32-CDL03:VBx13-CV7401:Setpt", "SCL32-CDL03:VBx14-CV7401:Setpt", "SCL32-CDL03:VBx15-CV7401:Setpt",
"SCL32-CDL03:VBx16-CV7401:Setpt", "SCL32-CDL03:VBx17-CV7401:Setpt", "SCL32-CDL03:VBx18-CV7401:Setpt",
"SCL32-CDL03:VBx19-CV7401:Setpt", "SCL32-CDL03:VBx01-CV7401:SetManuRamp", "SCL32-CDL03:VBx02-CV7401:SetManuRamp",
"SCL32-CDL03:VBx03-CV7401:SetManuRamp", "SCL32-CDL03:VBx04-CV7401:SetManuRamp", "SCL32-CDL03:VBx05-CV7401:SetManuRamp",
"SCL32-CDL03:VBx06-CV7401:SetManuRamp", "SCL32-CDL03:VBx07-CV7401:SetManuRamp", "SCL32-CDL03:VBx08-CV7401:SetManuRamp",
"SCL32-CDL03:VBx09-CV7401:SetManuRamp", "SCL32-CDL03:VBx10-CV7401:SetManuRamp", "SCL32-CDL03:VBx11-CV7401:SetManuRamp",
"SCL32-CDL03:VBx12-CV7401:SetManuRamp", "SCL32-CDL03:VBx13-CV7401:SetManuRamp", "SCL32-CDL03:VBx14-CV7401:SetManuRamp",
"SCL32-CDL03:VBx15-CV7401:SetManuRamp", "SCL32-CDL03:VBx16-CV7401:SetManuRamp", "SCL32-CDL03:VBx17-CV7401:SetManuRamp",
"SCL32-CDL03:VBx18-CV7401:SetManuRamp", "SCL32-CDL03:VBx19-CV7401:SetManuRamp"
};

float	controlPV;
assign	controlPV to "{C_PV}";
monitor controlPV;
evflag  evControl;
sync 	controlPV evControl;

int index = 0;
int pvcnt = 0;

ss seq_controls_
{
	state init
	{
		when(TRUE)
		{
			efClear(evControl);
		}state WaitEvent
	}

	state WaitEvent
	{
		when(efTestAndClear(evControl))
		{
			index = 0;
			pvcnt = sizeof(groupPVs)/sizeof(groupPVs[0]);
			for(index = 0; index < pvcnt;index++) {
				groupPVs[index] = controlPV;
				pvPut(groupPVs[index], ASYNC);
			}
		}state GrpControls
	}

	state GrpControls
	{
		when(pvArrayPutComplete(groupPVs,TRUE) )
		{
		}state WaitEvent
	}
}
