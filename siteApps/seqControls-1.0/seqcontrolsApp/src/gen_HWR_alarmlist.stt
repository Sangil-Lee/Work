program HWRAlarm
option +r;


float HVBxPT7501HIHIArray[32];
assign HVBxPT7501HIHIArray to {
 "SCL32-CDL02:VBx01-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7501:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7501:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7501:PresR.HIHI"

};
float	HVBxPT7501HIHI;
assign	HVBxPT7501HIHI to "{GrpHVBxPT7501}.HIHI";
monitor HVBxPT7501HIHI;
evflag  evHVBxPT7501HIHI;
sync 	HVBxPT7501HIHI evHVBxPT7501HIHI;

float HVBxPT7502HIHIArray[32];
assign HVBxPT7502HIHIArray to {
 "SCL32-CDL02:VBx01-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7502:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7502:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7502:PresR.HIHI"

};
float	HVBxPT7502HIHI;
assign	HVBxPT7502HIHI to "{GrpHVBxPT7502}.HIHI";
monitor HVBxPT7502HIHI;
evflag  evHVBxPT7502HIHI;
sync 	HVBxPT7502HIHI evHVBxPT7502HIHI;

float HVBxPT7503HIHIArray[32];
assign HVBxPT7503HIHIArray to {
 "SCL32-CDL02:VBx01-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7503:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7503:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7503:PresR.HIHI"

};
float	HVBxPT7503HIHI;
assign	HVBxPT7503HIHI to "{GrpHVBxPT7503}.HIHI";
monitor HVBxPT7503HIHI;
evflag  evHVBxPT7503HIHI;
sync 	HVBxPT7503HIHI evHVBxPT7503HIHI;

float HVBxPT7401HIHIArray[32];
assign HVBxPT7401HIHIArray to {
 "SCL32-CDL02:VBx01-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7401:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7401:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7401:PresR.HIHI"

};
float	HVBxPT7401HIHI;
assign	HVBxPT7401HIHI to "{GrpHVBxPT7401}.HIHI";
monitor HVBxPT7401HIHI;
evflag  evHVBxPT7401HIHI;
sync 	HVBxPT7401HIHI evHVBxPT7401HIHI;

float HVBxPT7301HIHIArray[32];
assign HVBxPT7301HIHIArray to {
 "SCL32-CDL02:VBx01-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7301:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7301:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7301:PresR.HIHI"

};
float	HVBxPT7301HIHI;
assign	HVBxPT7301HIHI to "{GrpHVBxPT7301}.HIHI";
monitor HVBxPT7301HIHI;
evflag  evHVBxPT7301HIHI;
sync 	HVBxPT7301HIHI evHVBxPT7301HIHI;

float HVBxPT7201HIHIArray[32];
assign HVBxPT7201HIHIArray to {
 "SCL32-CDL02:VBx01-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7201:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7201:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7201:PresR.HIHI"

};
float	HVBxPT7201HIHI;
assign	HVBxPT7201HIHI to "{GrpHVBxPT7201}.HIHI";
monitor HVBxPT7201HIHI;
evflag  evHVBxPT7201HIHI;
sync 	HVBxPT7201HIHI evHVBxPT7201HIHI;

float HVBxPT7102HIHIArray[5];
assign HVBxPT7102HIHIArray to {
 "SCL32-CDL02:VBx04-PT7102:VacuumR.HIHI",
 "SCL32-CDL02:VBx09-PT7102:VacuumR.HIHI",
 "SCL32-CDL03:VBx04-PT7102:VacuumR.HIHI",
 "SCL32-CDL03:VBx09-PT7102:VacuumR.HIHI",
 "SCL32-CDL03:VBx18-PT7102:VacuumR.HIHI"

};
float	HVBxPT7102HIHI;
assign	HVBxPT7102HIHI to "{GrpHVBxPT7102}.HIHI";
monitor HVBxPT7102HIHI;
evflag  evHVBxPT7102HIHI;
sync 	HVBxPT7102HIHI evHVBxPT7102HIHI;

float HVBxPT7202HIHIArray[32];
assign HVBxPT7202HIHIArray to {
 "SCL32-CDL02:VBx01-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7202:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7202:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7202:PresR.HIHI"

};
float	HVBxPT7202HIHI;
assign	HVBxPT7202HIHI to "{GrpHVBxPT7202}.HIHI";
monitor HVBxPT7202HIHI;
evflag  evHVBxPT7202HIHI;
sync 	HVBxPT7202HIHI evHVBxPT7202HIHI;

float HVBxPT7203HIHIArray[32];
assign HVBxPT7203HIHIArray to {
 "SCL32-CDL02:VBx01-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx02-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx03-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx04-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx05-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx06-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx07-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx08-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx09-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx10-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx11-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx12-PT7203:PresR.HIHI",
 "SCL32-CDL02:VBx13-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx01-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx02-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx03-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx04-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx05-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx06-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx07-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx08-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx09-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx10-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx11-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx12-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx13-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx14-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx15-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx16-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx17-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx18-PT7203:PresR.HIHI",
 "SCL32-CDL03:VBx19-PT7203:PresR.HIHI"

};
float	HVBxPT7203HIHI;
assign	HVBxPT7203HIHI to "{GrpHVBxPT7203}.HIHI";
monitor HVBxPT7203HIHI;
evflag  evHVBxPT7203HIHI;
sync 	HVBxPT7203HIHI evHVBxPT7203HIHI;

float HVBxTT7501HIHIArray[32];
assign HVBxTT7501HIHIArray to {
 "SCL32-CDL02:VBx01-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx02-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx03-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx04-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx05-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx06-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx07-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx08-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx09-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx10-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx11-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx12-TT7501:TempR.HIHI",
 "SCL32-CDL02:VBx13-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx01-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx02-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx03-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx04-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx05-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx06-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx07-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx08-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx09-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx10-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx11-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx12-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx13-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx14-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx15-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx16-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx17-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx18-TT7501:TempR.HIHI",
 "SCL32-CDL03:VBx19-TT7501:TempR.HIHI"

};
float	HVBxTT7501HIHI;
assign	HVBxTT7501HIHI to "{GrpHVBxTT7501}.HIHI";
monitor HVBxTT7501HIHI;
evflag  evHVBxTT7501HIHI;
sync 	HVBxTT7501HIHI evHVBxTT7501HIHI;

float HVBxTT7502HIHIArray[32];
assign HVBxTT7502HIHIArray to {
 "SCL32-CDL02:VBx01-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx02-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx03-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx04-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx05-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx06-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx07-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx08-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx09-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx10-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx11-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx12-TT7502:TempR.HIHI",
 "SCL32-CDL02:VBx13-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx01-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx02-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx03-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx04-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx05-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx06-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx07-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx08-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx09-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx10-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx11-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx12-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx13-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx14-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx15-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx16-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx17-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx18-TT7502:TempR.HIHI",
 "SCL32-CDL03:VBx19-TT7502:TempR.HIHI"

};
float	HVBxTT7502HIHI;
assign	HVBxTT7502HIHI to "{GrpHVBxTT7502}.HIHI";
monitor HVBxTT7502HIHI;
evflag  evHVBxTT7502HIHI;
sync 	HVBxTT7502HIHI evHVBxTT7502HIHI;

float HVBxTT7503HIHIArray[32];
assign HVBxTT7503HIHIArray to {
 "SCL32-CDL02:VBx01-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx02-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx03-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx04-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx05-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx06-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx07-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx08-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx09-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx10-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx11-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx12-TT7503:TempR.HIHI",
 "SCL32-CDL02:VBx13-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx01-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx02-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx03-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx04-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx05-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx06-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx07-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx08-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx09-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx10-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx11-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx12-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx13-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx14-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx15-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx16-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx17-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx18-TT7503:TempR.HIHI",
 "SCL32-CDL03:VBx19-TT7503:TempR.HIHI"

};
float	HVBxTT7503HIHI;
assign	HVBxTT7503HIHI to "{GrpHVBxTT7503}.HIHI";
monitor HVBxTT7503HIHI;
evflag  evHVBxTT7503HIHI;
sync 	HVBxTT7503HIHI evHVBxTT7503HIHI;

float HVBxTT7504HIHIArray[32];
assign HVBxTT7504HIHIArray to {
 "SCL32-CDL02:VBx01-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx02-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx03-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx04-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx05-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx06-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx07-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx08-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx09-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx10-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx11-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx12-TT7504:TempR.HIHI",
 "SCL32-CDL02:VBx13-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx01-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx02-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx03-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx04-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx05-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx06-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx07-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx08-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx09-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx10-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx11-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx12-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx13-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx14-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx15-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx16-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx17-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx18-TT7504:TempR.HIHI",
 "SCL32-CDL03:VBx19-TT7504:TempR.HIHI"

};
float	HVBxTT7504HIHI;
assign	HVBxTT7504HIHI to "{GrpHVBxTT7504}.HIHI";
monitor HVBxTT7504HIHI;
evflag  evHVBxTT7504HIHI;
sync 	HVBxTT7504HIHI evHVBxTT7504HIHI;

float HVBxTT7401HIHIArray[32];
assign HVBxTT7401HIHIArray to {
 "SCL32-CDL02:VBx01-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx02-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx03-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx04-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx05-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx06-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx07-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx08-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx09-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx10-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx11-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx12-TT7401:TempR.HIHI",
 "SCL32-CDL02:VBx13-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx01-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx02-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx03-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx04-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx05-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx06-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx07-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx08-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx09-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx10-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx11-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx12-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx13-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx14-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx15-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx16-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx17-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx18-TT7401:TempR.HIHI",
 "SCL32-CDL03:VBx19-TT7401:TempR.HIHI"

};
float	HVBxTT7401HIHI;
assign	HVBxTT7401HIHI to "{GrpHVBxTT7401}.HIHI";
monitor HVBxTT7401HIHI;
evflag  evHVBxTT7401HIHI;
sync 	HVBxTT7401HIHI evHVBxTT7401HIHI;

float HVBxTT7301HIHIArray[32];
assign HVBxTT7301HIHIArray to {
 "SCL32-CDL02:VBx01-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx02-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx03-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx04-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx05-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx06-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx07-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx08-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx09-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx10-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx11-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx12-TT7301:TempR.HIHI",
 "SCL32-CDL02:VBx13-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx01-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx02-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx03-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx04-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx05-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx06-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx07-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx08-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx09-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx10-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx11-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx12-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx13-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx14-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx15-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx16-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx17-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx18-TT7301:TempR.HIHI",
 "SCL32-CDL03:VBx19-TT7301:TempR.HIHI"

};
float	HVBxTT7301HIHI;
assign	HVBxTT7301HIHI to "{GrpHVBxTT7301}.HIHI";
monitor HVBxTT7301HIHI;
evflag  evHVBxTT7301HIHI;
sync 	HVBxTT7301HIHI evHVBxTT7301HIHI;

float HVBxTT7201HIHIArray[32];
assign HVBxTT7201HIHIArray to {
 "SCL32-CDL02:VBx01-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx02-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx03-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx04-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx05-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx06-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx07-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx08-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx09-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx10-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx11-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx12-TT7201:TempR.HIHI",
 "SCL32-CDL02:VBx13-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx01-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx02-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx03-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx04-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx05-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx06-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx07-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx08-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx09-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx10-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx11-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx12-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx13-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx14-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx15-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx16-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx17-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx18-TT7201:TempR.HIHI",
 "SCL32-CDL03:VBx19-TT7201:TempR.HIHI"

};
float	HVBxTT7201HIHI;
assign	HVBxTT7201HIHI to "{GrpHVBxTT7201}.HIHI";
monitor HVBxTT7201HIHI;
evflag  evHVBxTT7201HIHI;
sync 	HVBxTT7201HIHI evHVBxTT7201HIHI;

float HCMPT8501HIHIArray[32];
assign HCMPT8501HIHIArray to {
 "SCL32-BL02:CM01-PT8501:PresR.HIHI",
 "SCL32-BL02:CM02-PT8501:PresR.HIHI",
 "SCL32-BL02:CM03-PT8501:PresR.HIHI",
 "SCL32-BL02:CM04-PT8501:PresR.HIHI",
 "SCL32-BL02:CM05-PT8501:PresR.HIHI",
 "SCL32-BL02:CM06-PT8501:PresR.HIHI",
 "SCL32-BL02:CM07-PT8501:PresR.HIHI",
 "SCL32-BL02:CM08-PT8501:PresR.HIHI",
 "SCL32-BL02:CM09-PT8501:PresR.HIHI",
 "SCL32-BL02:CM10-PT8501:PresR.HIHI",
 "SCL32-BL02:CM11-PT8501:PresR.HIHI",
 "SCL32-BL02:CM12-PT8501:PresR.HIHI",
 "SCL32-BL02:CM13-PT8501:PresR.HIHI",
 "SCL32-BL03:CM01-PT8501:PresR.HIHI",
 "SCL32-BL03:CM02-PT8501:PresR.HIHI",
 "SCL32-BL03:CM03-PT8501:PresR.HIHI",
 "SCL32-BL03:CM04-PT8501:PresR.HIHI",
 "SCL32-BL03:CM05-PT8501:PresR.HIHI",
 "SCL32-BL03:CM06-PT8501:PresR.HIHI",
 "SCL32-BL03:CM07-PT8501:PresR.HIHI",
 "SCL32-BL03:CM08-PT8501:PresR.HIHI",
 "SCL32-BL03:CM09-PT8501:PresR.HIHI",
 "SCL32-BL03:CM10-PT8501:PresR.HIHI",
 "SCL32-BL03:CM11-PT8501:PresR.HIHI",
 "SCL32-BL03:CM12-PT8501:PresR.HIHI",
 "SCL32-BL03:CM13-PT8501:PresR.HIHI",
 "SCL32-BL03:CM14-PT8501:PresR.HIHI",
 "SCL32-BL03:CM15-PT8501:PresR.HIHI",
 "SCL32-BL03:CM16-PT8501:PresR.HIHI",
 "SCL32-BL03:CM17-PT8501:PresR.HIHI",
 "SCL32-BL03:CM18-PT8501:PresR.HIHI",
 "SCL32-BL03:CM19-PT8501:PresR.HIHI"

};
float	HCMPT8501HIHI;
assign	HCMPT8501HIHI to "{GrpHCMPT8501}.HIHI";
monitor HCMPT8501HIHI;
evflag  evHCMPT8501HIHI;
sync 	HCMPT8501HIHI evHCMPT8501HIHI;

float HCMPT8301HIHIArray[32];
assign HCMPT8301HIHIArray to {
 "SCL32-BL02:CM01-PT8301:PresR.HIHI",
 "SCL32-BL02:CM02-PT8301:PresR.HIHI",
 "SCL32-BL02:CM03-PT8301:PresR.HIHI",
 "SCL32-BL02:CM04-PT8301:PresR.HIHI",
 "SCL32-BL02:CM05-PT8301:PresR.HIHI",
 "SCL32-BL02:CM06-PT8301:PresR.HIHI",
 "SCL32-BL02:CM07-PT8301:PresR.HIHI",
 "SCL32-BL02:CM08-PT8301:PresR.HIHI",
 "SCL32-BL02:CM09-PT8301:PresR.HIHI",
 "SCL32-BL02:CM10-PT8301:PresR.HIHI",
 "SCL32-BL02:CM11-PT8301:PresR.HIHI",
 "SCL32-BL02:CM12-PT8301:PresR.HIHI",
 "SCL32-BL02:CM13-PT8301:PresR.HIHI",
 "SCL32-BL03:CM01-PT8301:PresR.HIHI",
 "SCL32-BL03:CM02-PT8301:PresR.HIHI",
 "SCL32-BL03:CM03-PT8301:PresR.HIHI",
 "SCL32-BL03:CM04-PT8301:PresR.HIHI",
 "SCL32-BL03:CM05-PT8301:PresR.HIHI",
 "SCL32-BL03:CM06-PT8301:PresR.HIHI",
 "SCL32-BL03:CM07-PT8301:PresR.HIHI",
 "SCL32-BL03:CM08-PT8301:PresR.HIHI",
 "SCL32-BL03:CM09-PT8301:PresR.HIHI",
 "SCL32-BL03:CM10-PT8301:PresR.HIHI",
 "SCL32-BL03:CM11-PT8301:PresR.HIHI",
 "SCL32-BL03:CM12-PT8301:PresR.HIHI",
 "SCL32-BL03:CM13-PT8301:PresR.HIHI",
 "SCL32-BL03:CM14-PT8301:PresR.HIHI",
 "SCL32-BL03:CM15-PT8301:PresR.HIHI",
 "SCL32-BL03:CM16-PT8301:PresR.HIHI",
 "SCL32-BL03:CM17-PT8301:PresR.HIHI",
 "SCL32-BL03:CM18-PT8301:PresR.HIHI",
 "SCL32-BL03:CM19-PT8301:PresR.HIHI"

};
float	HCMPT8301HIHI;
assign	HCMPT8301HIHI to "{GrpHCMPT8301}.HIHI";
monitor HCMPT8301HIHI;
evflag  evHCMPT8301HIHI;
sync 	HCMPT8301HIHI evHCMPT8301HIHI;

float HCMPT8201HIHIArray[32];
assign HCMPT8201HIHIArray to {
 "SCL32-BL02:CM01-PT8201:PresR.HIHI",
 "SCL32-BL02:CM02-PT8201:PresR.HIHI",
 "SCL32-BL02:CM03-PT8201:PresR.HIHI",
 "SCL32-BL02:CM04-PT8201:PresR.HIHI",
 "SCL32-BL02:CM05-PT8201:PresR.HIHI",
 "SCL32-BL02:CM06-PT8201:PresR.HIHI",
 "SCL32-BL02:CM07-PT8201:PresR.HIHI",
 "SCL32-BL02:CM08-PT8201:PresR.HIHI",
 "SCL32-BL02:CM09-PT8201:PresR.HIHI",
 "SCL32-BL02:CM10-PT8201:PresR.HIHI",
 "SCL32-BL02:CM11-PT8201:PresR.HIHI",
 "SCL32-BL02:CM12-PT8201:PresR.HIHI",
 "SCL32-BL02:CM13-PT8201:PresR.HIHI",
 "SCL32-BL03:CM01-PT8201:PresR.HIHI",
 "SCL32-BL03:CM02-PT8201:PresR.HIHI",
 "SCL32-BL03:CM03-PT8201:PresR.HIHI",
 "SCL32-BL03:CM04-PT8201:PresR.HIHI",
 "SCL32-BL03:CM05-PT8201:PresR.HIHI",
 "SCL32-BL03:CM06-PT8201:PresR.HIHI",
 "SCL32-BL03:CM07-PT8201:PresR.HIHI",
 "SCL32-BL03:CM08-PT8201:PresR.HIHI",
 "SCL32-BL03:CM09-PT8201:PresR.HIHI",
 "SCL32-BL03:CM10-PT8201:PresR.HIHI",
 "SCL32-BL03:CM11-PT8201:PresR.HIHI",
 "SCL32-BL03:CM12-PT8201:PresR.HIHI",
 "SCL32-BL03:CM13-PT8201:PresR.HIHI",
 "SCL32-BL03:CM14-PT8201:PresR.HIHI",
 "SCL32-BL03:CM15-PT8201:PresR.HIHI",
 "SCL32-BL03:CM16-PT8201:PresR.HIHI",
 "SCL32-BL03:CM17-PT8201:PresR.HIHI",
 "SCL32-BL03:CM18-PT8201:PresR.HIHI",
 "SCL32-BL03:CM19-PT8201:PresR.HIHI"

};
float	HCMPT8201HIHI;
assign	HCMPT8201HIHI to "{GrpHCMPT8201}.HIHI";
monitor HCMPT8201HIHI;
evflag  evHCMPT8201HIHI;
sync 	HCMPT8201HIHI evHCMPT8201HIHI;

float HCMPT8202HIHIArray[32];
assign HCMPT8202HIHIArray to {
 "SCL32-BL02:CM01-PT8202:PresR.HIHI",
 "SCL32-BL02:CM02-PT8202:PresR.HIHI",
 "SCL32-BL02:CM03-PT8202:PresR.HIHI",
 "SCL32-BL02:CM04-PT8202:PresR.HIHI",
 "SCL32-BL02:CM05-PT8202:PresR.HIHI",
 "SCL32-BL02:CM06-PT8202:PresR.HIHI",
 "SCL32-BL02:CM07-PT8202:PresR.HIHI",
 "SCL32-BL02:CM08-PT8202:PresR.HIHI",
 "SCL32-BL02:CM09-PT8202:PresR.HIHI",
 "SCL32-BL02:CM10-PT8202:PresR.HIHI",
 "SCL32-BL02:CM11-PT8202:PresR.HIHI",
 "SCL32-BL02:CM12-PT8202:PresR.HIHI",
 "SCL32-BL02:CM13-PT8202:PresR.HIHI",
 "SCL32-BL03:CM01-PT8202:PresR.HIHI",
 "SCL32-BL03:CM02-PT8202:PresR.HIHI",
 "SCL32-BL03:CM03-PT8202:PresR.HIHI",
 "SCL32-BL03:CM04-PT8202:PresR.HIHI",
 "SCL32-BL03:CM05-PT8202:PresR.HIHI",
 "SCL32-BL03:CM06-PT8202:PresR.HIHI",
 "SCL32-BL03:CM07-PT8202:PresR.HIHI",
 "SCL32-BL03:CM08-PT8202:PresR.HIHI",
 "SCL32-BL03:CM09-PT8202:PresR.HIHI",
 "SCL32-BL03:CM10-PT8202:PresR.HIHI",
 "SCL32-BL03:CM11-PT8202:PresR.HIHI",
 "SCL32-BL03:CM12-PT8202:PresR.HIHI",
 "SCL32-BL03:CM13-PT8202:PresR.HIHI",
 "SCL32-BL03:CM14-PT8202:PresR.HIHI",
 "SCL32-BL03:CM15-PT8202:PresR.HIHI",
 "SCL32-BL03:CM16-PT8202:PresR.HIHI",
 "SCL32-BL03:CM17-PT8202:PresR.HIHI",
 "SCL32-BL03:CM18-PT8202:PresR.HIHI",
 "SCL32-BL03:CM19-PT8202:PresR.HIHI"

};
float	HCMPT8202HIHI;
assign	HCMPT8202HIHI to "{GrpHCMPT8202}.HIHI";
monitor HCMPT8202HIHI;
evflag  evHCMPT8202HIHI;
sync 	HCMPT8202HIHI evHCMPT8202HIHI;

float HCMPT8203HIHIArray[32];
assign HCMPT8203HIHIArray to {
 "SCL32-BL02:CM01-PT8203:PresR.HIHI",
 "SCL32-BL02:CM02-PT8203:PresR.HIHI",
 "SCL32-BL02:CM03-PT8203:PresR.HIHI",
 "SCL32-BL02:CM04-PT8203:PresR.HIHI",
 "SCL32-BL02:CM05-PT8203:PresR.HIHI",
 "SCL32-BL02:CM06-PT8203:PresR.HIHI",
 "SCL32-BL02:CM07-PT8203:PresR.HIHI",
 "SCL32-BL02:CM08-PT8203:PresR.HIHI",
 "SCL32-BL02:CM09-PT8203:PresR.HIHI",
 "SCL32-BL02:CM10-PT8203:PresR.HIHI",
 "SCL32-BL02:CM11-PT8203:PresR.HIHI",
 "SCL32-BL02:CM12-PT8203:PresR.HIHI",
 "SCL32-BL02:CM13-PT8203:PresR.HIHI",
 "SCL32-BL03:CM01-PT8203:PresR.HIHI",
 "SCL32-BL03:CM02-PT8203:PresR.HIHI",
 "SCL32-BL03:CM03-PT8203:PresR.HIHI",
 "SCL32-BL03:CM04-PT8203:PresR.HIHI",
 "SCL32-BL03:CM05-PT8203:PresR.HIHI",
 "SCL32-BL03:CM06-PT8203:PresR.HIHI",
 "SCL32-BL03:CM07-PT8203:PresR.HIHI",
 "SCL32-BL03:CM08-PT8203:PresR.HIHI",
 "SCL32-BL03:CM09-PT8203:PresR.HIHI",
 "SCL32-BL03:CM10-PT8203:PresR.HIHI",
 "SCL32-BL03:CM11-PT8203:PresR.HIHI",
 "SCL32-BL03:CM12-PT8203:PresR.HIHI",
 "SCL32-BL03:CM13-PT8203:PresR.HIHI",
 "SCL32-BL03:CM14-PT8203:PresR.HIHI",
 "SCL32-BL03:CM15-PT8203:PresR.HIHI",
 "SCL32-BL03:CM16-PT8203:PresR.HIHI",
 "SCL32-BL03:CM17-PT8203:PresR.HIHI",
 "SCL32-BL03:CM18-PT8203:PresR.HIHI",
 "SCL32-BL03:CM19-PT8203:PresR.HIHI"

};
float	HCMPT8203HIHI;
assign	HCMPT8203HIHI to "{GrpHCMPT8203}.HIHI";
monitor HCMPT8203HIHI;
evflag  evHCMPT8203HIHI;
sync 	HCMPT8203HIHI evHCMPT8203HIHI;

float HCMPT8101HIHIArray[32];
assign HCMPT8101HIHIArray to {
 "SCL32-BL02:CM01-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM02-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM03-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM04-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM05-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM06-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM07-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM08-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM09-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM10-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM11-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM12-PT8101:VacuumR.HIHI",
 "SCL32-BL02:CM13-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM01-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM02-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM03-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM04-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM05-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM06-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM07-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM08-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM09-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM10-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM11-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM12-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM13-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM14-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM15-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM16-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM17-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM18-PT8101:VacuumR.HIHI",
 "SCL32-BL03:CM19-PT8101:VacuumR.HIHI"

};
float	HCMPT8101HIHI;
assign	HCMPT8101HIHI to "{GrpHCMPT8101}.HIHI";
monitor HCMPT8101HIHI;
evflag  evHCMPT8101HIHI;
sync 	HCMPT8101HIHI evHCMPT8101HIHI;

float HCMPT8102HIHIArray[32];
assign HCMPT8102HIHIArray to {
 "SCL32-BL02:CM01-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM02-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM03-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM04-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM05-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM06-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM07-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM08-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM09-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM10-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM11-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM12-PT8102:VacuumR.HIHI",
 "SCL32-BL02:CM13-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM01-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM02-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM03-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM04-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM05-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM06-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM07-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM08-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM09-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM10-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM11-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM12-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM13-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM14-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM15-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM16-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM17-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM18-PT8102:VacuumR.HIHI",
 "SCL32-BL03:CM19-PT8102:VacuumR.HIHI"

};
float	HCMPT8102HIHI;
assign	HCMPT8102HIHI to "{GrpHCMPT8102}.HIHI";
monitor HCMPT8102HIHI;
evflag  evHCMPT8102HIHI;
sync 	HCMPT8102HIHI evHCMPT8102HIHI;

float HCMPT8104HIHIArray[32];
assign HCMPT8104HIHIArray to {
 "SCL32-BL02:CM01-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM02-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM03-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM04-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM05-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM06-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM07-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM08-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM09-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM10-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM11-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM12-PT8104:VacuumR.HIHI",
 "SCL32-BL02:CM13-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM01-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM02-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM03-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM04-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM05-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM06-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM07-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM08-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM09-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM10-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM11-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM12-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM13-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM14-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM15-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM16-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM17-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM18-PT8104:VacuumR.HIHI",
 "SCL32-BL03:CM19-PT8104:VacuumR.HIHI"

};
float	HCMPT8104HIHI;
assign	HCMPT8104HIHI to "{GrpHCMPT8104}.HIHI";
monitor HCMPT8104HIHI;
evflag  evHCMPT8104HIHI;
sync 	HCMPT8104HIHI evHCMPT8104HIHI;

float HCMPT8112HIHIArray[32];
assign HCMPT8112HIHIArray to {
 "SCL32-BL02:CM01-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM02-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM03-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM04-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM05-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM06-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM07-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM08-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM09-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM10-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM11-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM12-PT8112:VacuumR.HIHI",
 "SCL32-BL02:CM13-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM01-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM02-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM03-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM04-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM05-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM06-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM07-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM08-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM09-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM10-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM11-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM12-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM13-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM14-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM15-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM16-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM17-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM18-PT8112:VacuumR.HIHI",
 "SCL32-BL03:CM19-PT8112:VacuumR.HIHI"

};
float	HCMPT8112HIHI;
assign	HCMPT8112HIHI to "{GrpHCMPT8112}.HIHI";
monitor HCMPT8112HIHI;
evflag  evHCMPT8112HIHI;
sync 	HCMPT8112HIHI evHCMPT8112HIHI;

float HCMPT8103HIHIArray[27];
assign HCMPT8103HIHIArray to {
 "SCL32-BL02:CM01-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM02-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM03-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM05-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM06-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM07-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM08-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM10-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM11-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM12-PT8103:VacuumR.HIHI",
 "SCL32-BL02:CM13-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM01-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM02-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM03-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM05-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM06-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM07-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM08-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM10-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM11-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM12-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM13-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM14-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM15-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM16-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM17-PT8103:VacuumR.HIHI",
 "SCL32-BL03:CM19-PT8103:VacuumR.HIHI"

};
float	HCMPT8103HIHI;
assign	HCMPT8103HIHI to "{GrpHCMPT8103}.HIHI";
monitor HCMPT8103HIHI;
evflag  evHCMPT8103HIHI;
sync 	HCMPT8103HIHI evHCMPT8103HIHI;

float HCMPT8113HIHIArray[27];
assign HCMPT8113HIHIArray to {
 "SCL32-BL02:CM01-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM02-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM03-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM05-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM06-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM07-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM08-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM10-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM11-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM12-PT8113:VacuumR.HIHI",
 "SCL32-BL02:CM13-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM01-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM02-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM03-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM05-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM06-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM07-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM08-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM10-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM11-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM12-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM13-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM14-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM15-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM16-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM17-PT8113:VacuumR.HIHI",
 "SCL32-BL03:CM19-PT8113:VacuumR.HIHI"

};
float	HCMPT8113HIHI;
assign	HCMPT8113HIHI to "{GrpHCMPT8113}.HIHI";
monitor HCMPT8113HIHI;
evflag  evHCMPT8113HIHI;
sync 	HCMPT8113HIHI evHCMPT8113HIHI;

float HCMTT8601HIHIArray[32];
assign HCMTT8601HIHIArray to {
 "SCL32-BL02:CM01-TT8601:TempR.HIHI",
 "SCL32-BL02:CM02-TT8601:TempR.HIHI",
 "SCL32-BL02:CM03-TT8601:TempR.HIHI",
 "SCL32-BL02:CM04-TT8601:TempR.HIHI",
 "SCL32-BL02:CM05-TT8601:TempR.HIHI",
 "SCL32-BL02:CM06-TT8601:TempR.HIHI",
 "SCL32-BL02:CM07-TT8601:TempR.HIHI",
 "SCL32-BL02:CM08-TT8601:TempR.HIHI",
 "SCL32-BL02:CM09-TT8601:TempR.HIHI",
 "SCL32-BL02:CM10-TT8601:TempR.HIHI",
 "SCL32-BL02:CM11-TT8601:TempR.HIHI",
 "SCL32-BL02:CM12-TT8601:TempR.HIHI",
 "SCL32-BL02:CM13-TT8601:TempR.HIHI",
 "SCL32-BL03:CM01-TT8601:TempR.HIHI",
 "SCL32-BL03:CM02-TT8601:TempR.HIHI",
 "SCL32-BL03:CM03-TT8601:TempR.HIHI",
 "SCL32-BL03:CM04-TT8601:TempR.HIHI",
 "SCL32-BL03:CM05-TT8601:TempR.HIHI",
 "SCL32-BL03:CM06-TT8601:TempR.HIHI",
 "SCL32-BL03:CM07-TT8601:TempR.HIHI",
 "SCL32-BL03:CM08-TT8601:TempR.HIHI",
 "SCL32-BL03:CM09-TT8601:TempR.HIHI",
 "SCL32-BL03:CM10-TT8601:TempR.HIHI",
 "SCL32-BL03:CM11-TT8601:TempR.HIHI",
 "SCL32-BL03:CM12-TT8601:TempR.HIHI",
 "SCL32-BL03:CM13-TT8601:TempR.HIHI",
 "SCL32-BL03:CM14-TT8601:TempR.HIHI",
 "SCL32-BL03:CM15-TT8601:TempR.HIHI",
 "SCL32-BL03:CM16-TT8601:TempR.HIHI",
 "SCL32-BL03:CM17-TT8601:TempR.HIHI",
 "SCL32-BL03:CM18-TT8601:TempR.HIHI",
 "SCL32-BL03:CM19-TT8601:TempR.HIHI"

};
float	HCMTT8601HIHI;
assign	HCMTT8601HIHI to "{GrpHCMTT8601}.HIHI";
monitor HCMTT8601HIHI;
evflag  evHCMTT8601HIHI;
sync 	HCMTT8601HIHI evHCMTT8601HIHI;

float HCMTT8602HIHIArray[32];
assign HCMTT8602HIHIArray to {
 "SCL32-BL02:CM01-TT8602:TempR.HIHI",
 "SCL32-BL02:CM02-TT8602:TempR.HIHI",
 "SCL32-BL02:CM03-TT8602:TempR.HIHI",
 "SCL32-BL02:CM04-TT8602:TempR.HIHI",
 "SCL32-BL02:CM05-TT8602:TempR.HIHI",
 "SCL32-BL02:CM06-TT8602:TempR.HIHI",
 "SCL32-BL02:CM07-TT8602:TempR.HIHI",
 "SCL32-BL02:CM08-TT8602:TempR.HIHI",
 "SCL32-BL02:CM09-TT8602:TempR.HIHI",
 "SCL32-BL02:CM10-TT8602:TempR.HIHI",
 "SCL32-BL02:CM11-TT8602:TempR.HIHI",
 "SCL32-BL02:CM12-TT8602:TempR.HIHI",
 "SCL32-BL02:CM13-TT8602:TempR.HIHI",
 "SCL32-BL03:CM01-TT8602:TempR.HIHI",
 "SCL32-BL03:CM02-TT8602:TempR.HIHI",
 "SCL32-BL03:CM03-TT8602:TempR.HIHI",
 "SCL32-BL03:CM04-TT8602:TempR.HIHI",
 "SCL32-BL03:CM05-TT8602:TempR.HIHI",
 "SCL32-BL03:CM06-TT8602:TempR.HIHI",
 "SCL32-BL03:CM07-TT8602:TempR.HIHI",
 "SCL32-BL03:CM08-TT8602:TempR.HIHI",
 "SCL32-BL03:CM09-TT8602:TempR.HIHI",
 "SCL32-BL03:CM10-TT8602:TempR.HIHI",
 "SCL32-BL03:CM11-TT8602:TempR.HIHI",
 "SCL32-BL03:CM12-TT8602:TempR.HIHI",
 "SCL32-BL03:CM13-TT8602:TempR.HIHI",
 "SCL32-BL03:CM14-TT8602:TempR.HIHI",
 "SCL32-BL03:CM15-TT8602:TempR.HIHI",
 "SCL32-BL03:CM16-TT8602:TempR.HIHI",
 "SCL32-BL03:CM17-TT8602:TempR.HIHI",
 "SCL32-BL03:CM18-TT8602:TempR.HIHI",
 "SCL32-BL03:CM19-TT8602:TempR.HIHI"

};
float	HCMTT8602HIHI;
assign	HCMTT8602HIHI to "{GrpHCMTT8602}.HIHI";
monitor HCMTT8602HIHI;
evflag  evHCMTT8602HIHI;
sync 	HCMTT8602HIHI evHCMTT8602HIHI;

float HCMTT8501HIHIArray[32];
assign HCMTT8501HIHIArray to {
 "SCL32-BL02:CM01-TT8501:TempR.HIHI",
 "SCL32-BL02:CM02-TT8501:TempR.HIHI",
 "SCL32-BL02:CM03-TT8501:TempR.HIHI",
 "SCL32-BL02:CM04-TT8501:TempR.HIHI",
 "SCL32-BL02:CM05-TT8501:TempR.HIHI",
 "SCL32-BL02:CM06-TT8501:TempR.HIHI",
 "SCL32-BL02:CM07-TT8501:TempR.HIHI",
 "SCL32-BL02:CM08-TT8501:TempR.HIHI",
 "SCL32-BL02:CM09-TT8501:TempR.HIHI",
 "SCL32-BL02:CM10-TT8501:TempR.HIHI",
 "SCL32-BL02:CM11-TT8501:TempR.HIHI",
 "SCL32-BL02:CM12-TT8501:TempR.HIHI",
 "SCL32-BL02:CM13-TT8501:TempR.HIHI",
 "SCL32-BL03:CM01-TT8501:TempR.HIHI",
 "SCL32-BL03:CM02-TT8501:TempR.HIHI",
 "SCL32-BL03:CM03-TT8501:TempR.HIHI",
 "SCL32-BL03:CM04-TT8501:TempR.HIHI",
 "SCL32-BL03:CM05-TT8501:TempR.HIHI",
 "SCL32-BL03:CM06-TT8501:TempR.HIHI",
 "SCL32-BL03:CM07-TT8501:TempR.HIHI",
 "SCL32-BL03:CM08-TT8501:TempR.HIHI",
 "SCL32-BL03:CM09-TT8501:TempR.HIHI",
 "SCL32-BL03:CM10-TT8501:TempR.HIHI",
 "SCL32-BL03:CM11-TT8501:TempR.HIHI",
 "SCL32-BL03:CM12-TT8501:TempR.HIHI",
 "SCL32-BL03:CM13-TT8501:TempR.HIHI",
 "SCL32-BL03:CM14-TT8501:TempR.HIHI",
 "SCL32-BL03:CM15-TT8501:TempR.HIHI",
 "SCL32-BL03:CM16-TT8501:TempR.HIHI",
 "SCL32-BL03:CM17-TT8501:TempR.HIHI",
 "SCL32-BL03:CM18-TT8501:TempR.HIHI",
 "SCL32-BL03:CM19-TT8501:TempR.HIHI"

};
float	HCMTT8501HIHI;
assign	HCMTT8501HIHI to "{GrpHCMTT8501}.HIHI";
monitor HCMTT8501HIHI;
evflag  evHCMTT8501HIHI;
sync 	HCMTT8501HIHI evHCMTT8501HIHI;

float HCMTT8502HIHIArray[32];
assign HCMTT8502HIHIArray to {
 "SCL32-BL02:CM01-TT8502:TempR.HIHI",
 "SCL32-BL02:CM02-TT8502:TempR.HIHI",
 "SCL32-BL02:CM03-TT8502:TempR.HIHI",
 "SCL32-BL02:CM04-TT8502:TempR.HIHI",
 "SCL32-BL02:CM05-TT8502:TempR.HIHI",
 "SCL32-BL02:CM06-TT8502:TempR.HIHI",
 "SCL32-BL02:CM07-TT8502:TempR.HIHI",
 "SCL32-BL02:CM08-TT8502:TempR.HIHI",
 "SCL32-BL02:CM09-TT8502:TempR.HIHI",
 "SCL32-BL02:CM10-TT8502:TempR.HIHI",
 "SCL32-BL02:CM11-TT8502:TempR.HIHI",
 "SCL32-BL02:CM12-TT8502:TempR.HIHI",
 "SCL32-BL02:CM13-TT8502:TempR.HIHI",
 "SCL32-BL03:CM01-TT8502:TempR.HIHI",
 "SCL32-BL03:CM02-TT8502:TempR.HIHI",
 "SCL32-BL03:CM03-TT8502:TempR.HIHI",
 "SCL32-BL03:CM04-TT8502:TempR.HIHI",
 "SCL32-BL03:CM05-TT8502:TempR.HIHI",
 "SCL32-BL03:CM06-TT8502:TempR.HIHI",
 "SCL32-BL03:CM07-TT8502:TempR.HIHI",
 "SCL32-BL03:CM08-TT8502:TempR.HIHI",
 "SCL32-BL03:CM09-TT8502:TempR.HIHI",
 "SCL32-BL03:CM10-TT8502:TempR.HIHI",
 "SCL32-BL03:CM11-TT8502:TempR.HIHI",
 "SCL32-BL03:CM12-TT8502:TempR.HIHI",
 "SCL32-BL03:CM13-TT8502:TempR.HIHI",
 "SCL32-BL03:CM14-TT8502:TempR.HIHI",
 "SCL32-BL03:CM15-TT8502:TempR.HIHI",
 "SCL32-BL03:CM16-TT8502:TempR.HIHI",
 "SCL32-BL03:CM17-TT8502:TempR.HIHI",
 "SCL32-BL03:CM18-TT8502:TempR.HIHI",
 "SCL32-BL03:CM19-TT8502:TempR.HIHI"

};
float	HCMTT8502HIHI;
assign	HCMTT8502HIHI to "{GrpHCMTT8502}.HIHI";
monitor HCMTT8502HIHI;
evflag  evHCMTT8502HIHI;
sync 	HCMTT8502HIHI evHCMTT8502HIHI;

float HCMTT8401HIHIArray[32];
assign HCMTT8401HIHIArray to {
 "SCL32-BL02:CM01-TT8401:TempR.HIHI",
 "SCL32-BL02:CM02-TT8401:TempR.HIHI",
 "SCL32-BL02:CM03-TT8401:TempR.HIHI",
 "SCL32-BL02:CM04-TT8401:TempR.HIHI",
 "SCL32-BL02:CM05-TT8401:TempR.HIHI",
 "SCL32-BL02:CM06-TT8401:TempR.HIHI",
 "SCL32-BL02:CM07-TT8401:TempR.HIHI",
 "SCL32-BL02:CM08-TT8401:TempR.HIHI",
 "SCL32-BL02:CM09-TT8401:TempR.HIHI",
 "SCL32-BL02:CM10-TT8401:TempR.HIHI",
 "SCL32-BL02:CM11-TT8401:TempR.HIHI",
 "SCL32-BL02:CM12-TT8401:TempR.HIHI",
 "SCL32-BL02:CM13-TT8401:TempR.HIHI",
 "SCL32-BL03:CM01-TT8401:TempR.HIHI",
 "SCL32-BL03:CM02-TT8401:TempR.HIHI",
 "SCL32-BL03:CM03-TT8401:TempR.HIHI",
 "SCL32-BL03:CM04-TT8401:TempR.HIHI",
 "SCL32-BL03:CM05-TT8401:TempR.HIHI",
 "SCL32-BL03:CM06-TT8401:TempR.HIHI",
 "SCL32-BL03:CM07-TT8401:TempR.HIHI",
 "SCL32-BL03:CM08-TT8401:TempR.HIHI",
 "SCL32-BL03:CM09-TT8401:TempR.HIHI",
 "SCL32-BL03:CM10-TT8401:TempR.HIHI",
 "SCL32-BL03:CM11-TT8401:TempR.HIHI",
 "SCL32-BL03:CM12-TT8401:TempR.HIHI",
 "SCL32-BL03:CM13-TT8401:TempR.HIHI",
 "SCL32-BL03:CM14-TT8401:TempR.HIHI",
 "SCL32-BL03:CM15-TT8401:TempR.HIHI",
 "SCL32-BL03:CM16-TT8401:TempR.HIHI",
 "SCL32-BL03:CM17-TT8401:TempR.HIHI",
 "SCL32-BL03:CM18-TT8401:TempR.HIHI",
 "SCL32-BL03:CM19-TT8401:TempR.HIHI"

};
float	HCMTT8401HIHI;
assign	HCMTT8401HIHI to "{GrpHCMTT8401}.HIHI";
monitor HCMTT8401HIHI;
evflag  evHCMTT8401HIHI;
sync 	HCMTT8401HIHI evHCMTT8401HIHI;

float HCMTT8402HIHIArray[32];
assign HCMTT8402HIHIArray to {
 "SCL32-BL02:CM01-TT8402:TempR.HIHI",
 "SCL32-BL02:CM02-TT8402:TempR.HIHI",
 "SCL32-BL02:CM03-TT8402:TempR.HIHI",
 "SCL32-BL02:CM04-TT8402:TempR.HIHI",
 "SCL32-BL02:CM05-TT8402:TempR.HIHI",
 "SCL32-BL02:CM06-TT8402:TempR.HIHI",
 "SCL32-BL02:CM07-TT8402:TempR.HIHI",
 "SCL32-BL02:CM08-TT8402:TempR.HIHI",
 "SCL32-BL02:CM09-TT8402:TempR.HIHI",
 "SCL32-BL02:CM10-TT8402:TempR.HIHI",
 "SCL32-BL02:CM11-TT8402:TempR.HIHI",
 "SCL32-BL02:CM12-TT8402:TempR.HIHI",
 "SCL32-BL02:CM13-TT8402:TempR.HIHI",
 "SCL32-BL03:CM01-TT8402:TempR.HIHI",
 "SCL32-BL03:CM02-TT8402:TempR.HIHI",
 "SCL32-BL03:CM03-TT8402:TempR.HIHI",
 "SCL32-BL03:CM04-TT8402:TempR.HIHI",
 "SCL32-BL03:CM05-TT8402:TempR.HIHI",
 "SCL32-BL03:CM06-TT8402:TempR.HIHI",
 "SCL32-BL03:CM07-TT8402:TempR.HIHI",
 "SCL32-BL03:CM08-TT8402:TempR.HIHI",
 "SCL32-BL03:CM09-TT8402:TempR.HIHI",
 "SCL32-BL03:CM10-TT8402:TempR.HIHI",
 "SCL32-BL03:CM11-TT8402:TempR.HIHI",
 "SCL32-BL03:CM12-TT8402:TempR.HIHI",
 "SCL32-BL03:CM13-TT8402:TempR.HIHI",
 "SCL32-BL03:CM14-TT8402:TempR.HIHI",
 "SCL32-BL03:CM15-TT8402:TempR.HIHI",
 "SCL32-BL03:CM16-TT8402:TempR.HIHI",
 "SCL32-BL03:CM17-TT8402:TempR.HIHI",
 "SCL32-BL03:CM18-TT8402:TempR.HIHI",
 "SCL32-BL03:CM19-TT8402:TempR.HIHI"

};
float	HCMTT8402HIHI;
assign	HCMTT8402HIHI to "{GrpHCMTT8402}.HIHI";
monitor HCMTT8402HIHI;
evflag  evHCMTT8402HIHI;
sync 	HCMTT8402HIHI evHCMTT8402HIHI;

float HCMTT8404HIHIArray[32];
assign HCMTT8404HIHIArray to {
 "SCL32-BL02:CM01-TT8404:TempR.HIHI",
 "SCL32-BL02:CM02-TT8404:TempR.HIHI",
 "SCL32-BL02:CM03-TT8404:TempR.HIHI",
 "SCL32-BL02:CM04-TT8404:TempR.HIHI",
 "SCL32-BL02:CM05-TT8404:TempR.HIHI",
 "SCL32-BL02:CM06-TT8404:TempR.HIHI",
 "SCL32-BL02:CM07-TT8404:TempR.HIHI",
 "SCL32-BL02:CM08-TT8404:TempR.HIHI",
 "SCL32-BL02:CM09-TT8404:TempR.HIHI",
 "SCL32-BL02:CM10-TT8404:TempR.HIHI",
 "SCL32-BL02:CM11-TT8404:TempR.HIHI",
 "SCL32-BL02:CM12-TT8404:TempR.HIHI",
 "SCL32-BL02:CM13-TT8404:TempR.HIHI",
 "SCL32-BL03:CM01-TT8404:TempR.HIHI",
 "SCL32-BL03:CM02-TT8404:TempR.HIHI",
 "SCL32-BL03:CM03-TT8404:TempR.HIHI",
 "SCL32-BL03:CM04-TT8404:TempR.HIHI",
 "SCL32-BL03:CM05-TT8404:TempR.HIHI",
 "SCL32-BL03:CM06-TT8404:TempR.HIHI",
 "SCL32-BL03:CM07-TT8404:TempR.HIHI",
 "SCL32-BL03:CM08-TT8404:TempR.HIHI",
 "SCL32-BL03:CM09-TT8404:TempR.HIHI",
 "SCL32-BL03:CM10-TT8404:TempR.HIHI",
 "SCL32-BL03:CM11-TT8404:TempR.HIHI",
 "SCL32-BL03:CM12-TT8404:TempR.HIHI",
 "SCL32-BL03:CM13-TT8404:TempR.HIHI",
 "SCL32-BL03:CM14-TT8404:TempR.HIHI",
 "SCL32-BL03:CM15-TT8404:TempR.HIHI",
 "SCL32-BL03:CM16-TT8404:TempR.HIHI",
 "SCL32-BL03:CM17-TT8404:TempR.HIHI",
 "SCL32-BL03:CM18-TT8404:TempR.HIHI",
 "SCL32-BL03:CM19-TT8404:TempR.HIHI"

};
float	HCMTT8404HIHI;
assign	HCMTT8404HIHI to "{GrpHCMTT8404}.HIHI";
monitor HCMTT8404HIHI;
evflag  evHCMTT8404HIHI;
sync 	HCMTT8404HIHI evHCMTT8404HIHI;

float HCMTT8202HIHIArray[32];
assign HCMTT8202HIHIArray to {
 "SCL32-BL02:CM01-TT8202:TempR.HIHI",
 "SCL32-BL02:CM02-TT8202:TempR.HIHI",
 "SCL32-BL02:CM03-TT8202:TempR.HIHI",
 "SCL32-BL02:CM04-TT8202:TempR.HIHI",
 "SCL32-BL02:CM05-TT8202:TempR.HIHI",
 "SCL32-BL02:CM06-TT8202:TempR.HIHI",
 "SCL32-BL02:CM07-TT8202:TempR.HIHI",
 "SCL32-BL02:CM08-TT8202:TempR.HIHI",
 "SCL32-BL02:CM09-TT8202:TempR.HIHI",
 "SCL32-BL02:CM10-TT8202:TempR.HIHI",
 "SCL32-BL02:CM11-TT8202:TempR.HIHI",
 "SCL32-BL02:CM12-TT8202:TempR.HIHI",
 "SCL32-BL02:CM13-TT8202:TempR.HIHI",
 "SCL32-BL03:CM01-TT8202:TempR.HIHI",
 "SCL32-BL03:CM02-TT8202:TempR.HIHI",
 "SCL32-BL03:CM03-TT8202:TempR.HIHI",
 "SCL32-BL03:CM04-TT8202:TempR.HIHI",
 "SCL32-BL03:CM05-TT8202:TempR.HIHI",
 "SCL32-BL03:CM06-TT8202:TempR.HIHI",
 "SCL32-BL03:CM07-TT8202:TempR.HIHI",
 "SCL32-BL03:CM08-TT8202:TempR.HIHI",
 "SCL32-BL03:CM09-TT8202:TempR.HIHI",
 "SCL32-BL03:CM10-TT8202:TempR.HIHI",
 "SCL32-BL03:CM11-TT8202:TempR.HIHI",
 "SCL32-BL03:CM12-TT8202:TempR.HIHI",
 "SCL32-BL03:CM13-TT8202:TempR.HIHI",
 "SCL32-BL03:CM14-TT8202:TempR.HIHI",
 "SCL32-BL03:CM15-TT8202:TempR.HIHI",
 "SCL32-BL03:CM16-TT8202:TempR.HIHI",
 "SCL32-BL03:CM17-TT8202:TempR.HIHI",
 "SCL32-BL03:CM18-TT8202:TempR.HIHI",
 "SCL32-BL03:CM19-TT8202:TempR.HIHI"

};
float	HCMTT8202HIHI;
assign	HCMTT8202HIHI to "{GrpHCMTT8202}.HIHI";
monitor HCMTT8202HIHI;
evflag  evHCMTT8202HIHI;
sync 	HCMTT8202HIHI evHCMTT8202HIHI;

float HCMTT8203HIHIArray[32];
assign HCMTT8203HIHIArray to {
 "SCL32-BL02:CM01-TT8203:TempR.HIHI",
 "SCL32-BL02:CM02-TT8203:TempR.HIHI",
 "SCL32-BL02:CM03-TT8203:TempR.HIHI",
 "SCL32-BL02:CM04-TT8203:TempR.HIHI",
 "SCL32-BL02:CM05-TT8203:TempR.HIHI",
 "SCL32-BL02:CM06-TT8203:TempR.HIHI",
 "SCL32-BL02:CM07-TT8203:TempR.HIHI",
 "SCL32-BL02:CM08-TT8203:TempR.HIHI",
 "SCL32-BL02:CM09-TT8203:TempR.HIHI",
 "SCL32-BL02:CM10-TT8203:TempR.HIHI",
 "SCL32-BL02:CM11-TT8203:TempR.HIHI",
 "SCL32-BL02:CM12-TT8203:TempR.HIHI",
 "SCL32-BL02:CM13-TT8203:TempR.HIHI",
 "SCL32-BL03:CM01-TT8203:TempR.HIHI",
 "SCL32-BL03:CM02-TT8203:TempR.HIHI",
 "SCL32-BL03:CM03-TT8203:TempR.HIHI",
 "SCL32-BL03:CM04-TT8203:TempR.HIHI",
 "SCL32-BL03:CM05-TT8203:TempR.HIHI",
 "SCL32-BL03:CM06-TT8203:TempR.HIHI",
 "SCL32-BL03:CM07-TT8203:TempR.HIHI",
 "SCL32-BL03:CM08-TT8203:TempR.HIHI",
 "SCL32-BL03:CM09-TT8203:TempR.HIHI",
 "SCL32-BL03:CM10-TT8203:TempR.HIHI",
 "SCL32-BL03:CM11-TT8203:TempR.HIHI",
 "SCL32-BL03:CM12-TT8203:TempR.HIHI",
 "SCL32-BL03:CM13-TT8203:TempR.HIHI",
 "SCL32-BL03:CM14-TT8203:TempR.HIHI",
 "SCL32-BL03:CM15-TT8203:TempR.HIHI",
 "SCL32-BL03:CM16-TT8203:TempR.HIHI",
 "SCL32-BL03:CM17-TT8203:TempR.HIHI",
 "SCL32-BL03:CM18-TT8203:TempR.HIHI",
 "SCL32-BL03:CM19-TT8203:TempR.HIHI"

};
float	HCMTT8203HIHI;
assign	HCMTT8203HIHI to "{GrpHCMTT8203}.HIHI";
monitor HCMTT8203HIHI;
evflag  evHCMTT8203HIHI;
sync 	HCMTT8203HIHI evHCMTT8203HIHI;

float HCMTT8204HIHIArray[32];
assign HCMTT8204HIHIArray to {
 "SCL32-BL02:CM01-TT8204:TempR.HIHI",
 "SCL32-BL02:CM02-TT8204:TempR.HIHI",
 "SCL32-BL02:CM03-TT8204:TempR.HIHI",
 "SCL32-BL02:CM04-TT8204:TempR.HIHI",
 "SCL32-BL02:CM05-TT8204:TempR.HIHI",
 "SCL32-BL02:CM06-TT8204:TempR.HIHI",
 "SCL32-BL02:CM07-TT8204:TempR.HIHI",
 "SCL32-BL02:CM08-TT8204:TempR.HIHI",
 "SCL32-BL02:CM09-TT8204:TempR.HIHI",
 "SCL32-BL02:CM10-TT8204:TempR.HIHI",
 "SCL32-BL02:CM11-TT8204:TempR.HIHI",
 "SCL32-BL02:CM12-TT8204:TempR.HIHI",
 "SCL32-BL02:CM13-TT8204:TempR.HIHI",
 "SCL32-BL03:CM01-TT8204:TempR.HIHI",
 "SCL32-BL03:CM02-TT8204:TempR.HIHI",
 "SCL32-BL03:CM03-TT8204:TempR.HIHI",
 "SCL32-BL03:CM04-TT8204:TempR.HIHI",
 "SCL32-BL03:CM05-TT8204:TempR.HIHI",
 "SCL32-BL03:CM06-TT8204:TempR.HIHI",
 "SCL32-BL03:CM07-TT8204:TempR.HIHI",
 "SCL32-BL03:CM08-TT8204:TempR.HIHI",
 "SCL32-BL03:CM09-TT8204:TempR.HIHI",
 "SCL32-BL03:CM10-TT8204:TempR.HIHI",
 "SCL32-BL03:CM11-TT8204:TempR.HIHI",
 "SCL32-BL03:CM12-TT8204:TempR.HIHI",
 "SCL32-BL03:CM13-TT8204:TempR.HIHI",
 "SCL32-BL03:CM14-TT8204:TempR.HIHI",
 "SCL32-BL03:CM15-TT8204:TempR.HIHI",
 "SCL32-BL03:CM16-TT8204:TempR.HIHI",
 "SCL32-BL03:CM17-TT8204:TempR.HIHI",
 "SCL32-BL03:CM18-TT8204:TempR.HIHI",
 "SCL32-BL03:CM19-TT8204:TempR.HIHI"

};
float	HCMTT8204HIHI;
assign	HCMTT8204HIHI to "{GrpHCMTT8204}.HIHI";
monitor HCMTT8204HIHI;
evflag  evHCMTT8204HIHI;
sync 	HCMTT8204HIHI evHCMTT8204HIHI;

float HCMTT8205HIHIArray[32];
assign HCMTT8205HIHIArray to {
 "SCL32-BL02:CM01-TT8205:TempR.HIHI",
 "SCL32-BL02:CM02-TT8205:TempR.HIHI",
 "SCL32-BL02:CM03-TT8205:TempR.HIHI",
 "SCL32-BL02:CM04-TT8205:TempR.HIHI",
 "SCL32-BL02:CM05-TT8205:TempR.HIHI",
 "SCL32-BL02:CM06-TT8205:TempR.HIHI",
 "SCL32-BL02:CM07-TT8205:TempR.HIHI",
 "SCL32-BL02:CM08-TT8205:TempR.HIHI",
 "SCL32-BL02:CM09-TT8205:TempR.HIHI",
 "SCL32-BL02:CM10-TT8205:TempR.HIHI",
 "SCL32-BL02:CM11-TT8205:TempR.HIHI",
 "SCL32-BL02:CM12-TT8205:TempR.HIHI",
 "SCL32-BL02:CM13-TT8205:TempR.HIHI",
 "SCL32-BL03:CM01-TT8205:TempR.HIHI",
 "SCL32-BL03:CM02-TT8205:TempR.HIHI",
 "SCL32-BL03:CM03-TT8205:TempR.HIHI",
 "SCL32-BL03:CM04-TT8205:TempR.HIHI",
 "SCL32-BL03:CM05-TT8205:TempR.HIHI",
 "SCL32-BL03:CM06-TT8205:TempR.HIHI",
 "SCL32-BL03:CM07-TT8205:TempR.HIHI",
 "SCL32-BL03:CM08-TT8205:TempR.HIHI",
 "SCL32-BL03:CM09-TT8205:TempR.HIHI",
 "SCL32-BL03:CM10-TT8205:TempR.HIHI",
 "SCL32-BL03:CM11-TT8205:TempR.HIHI",
 "SCL32-BL03:CM12-TT8205:TempR.HIHI",
 "SCL32-BL03:CM13-TT8205:TempR.HIHI",
 "SCL32-BL03:CM14-TT8205:TempR.HIHI",
 "SCL32-BL03:CM15-TT8205:TempR.HIHI",
 "SCL32-BL03:CM16-TT8205:TempR.HIHI",
 "SCL32-BL03:CM17-TT8205:TempR.HIHI",
 "SCL32-BL03:CM18-TT8205:TempR.HIHI",
 "SCL32-BL03:CM19-TT8205:TempR.HIHI"

};
float	HCMTT8205HIHI;
assign	HCMTT8205HIHI to "{GrpHCMTT8205}.HIHI";
monitor HCMTT8205HIHI;
evflag  evHCMTT8205HIHI;
sync 	HCMTT8205HIHI evHCMTT8205HIHI;

float HCMTT8206HIHIArray[32];
assign HCMTT8206HIHIArray to {
 "SCL32-BL02:CM01-TT8206:TempR.HIHI",
 "SCL32-BL02:CM02-TT8206:TempR.HIHI",
 "SCL32-BL02:CM03-TT8206:TempR.HIHI",
 "SCL32-BL02:CM04-TT8206:TempR.HIHI",
 "SCL32-BL02:CM05-TT8206:TempR.HIHI",
 "SCL32-BL02:CM06-TT8206:TempR.HIHI",
 "SCL32-BL02:CM07-TT8206:TempR.HIHI",
 "SCL32-BL02:CM08-TT8206:TempR.HIHI",
 "SCL32-BL02:CM09-TT8206:TempR.HIHI",
 "SCL32-BL02:CM10-TT8206:TempR.HIHI",
 "SCL32-BL02:CM11-TT8206:TempR.HIHI",
 "SCL32-BL02:CM12-TT8206:TempR.HIHI",
 "SCL32-BL02:CM13-TT8206:TempR.HIHI",
 "SCL32-BL03:CM01-TT8206:TempR.HIHI",
 "SCL32-BL03:CM02-TT8206:TempR.HIHI",
 "SCL32-BL03:CM03-TT8206:TempR.HIHI",
 "SCL32-BL03:CM04-TT8206:TempR.HIHI",
 "SCL32-BL03:CM05-TT8206:TempR.HIHI",
 "SCL32-BL03:CM06-TT8206:TempR.HIHI",
 "SCL32-BL03:CM07-TT8206:TempR.HIHI",
 "SCL32-BL03:CM08-TT8206:TempR.HIHI",
 "SCL32-BL03:CM09-TT8206:TempR.HIHI",
 "SCL32-BL03:CM10-TT8206:TempR.HIHI",
 "SCL32-BL03:CM11-TT8206:TempR.HIHI",
 "SCL32-BL03:CM12-TT8206:TempR.HIHI",
 "SCL32-BL03:CM13-TT8206:TempR.HIHI",
 "SCL32-BL03:CM14-TT8206:TempR.HIHI",
 "SCL32-BL03:CM15-TT8206:TempR.HIHI",
 "SCL32-BL03:CM16-TT8206:TempR.HIHI",
 "SCL32-BL03:CM17-TT8206:TempR.HIHI",
 "SCL32-BL03:CM18-TT8206:TempR.HIHI",
 "SCL32-BL03:CM19-TT8206:TempR.HIHI"

};
float	HCMTT8206HIHI;
assign	HCMTT8206HIHI to "{GrpHCMTT8206}.HIHI";
monitor HCMTT8206HIHI;
evflag  evHCMTT8206HIHI;
sync 	HCMTT8206HIHI evHCMTT8206HIHI;

float HCMTT8207HIHIArray[32];
assign HCMTT8207HIHIArray to {
 "SCL32-BL02:CM01-TT8207:TempR.HIHI",
 "SCL32-BL02:CM02-TT8207:TempR.HIHI",
 "SCL32-BL02:CM03-TT8207:TempR.HIHI",
 "SCL32-BL02:CM04-TT8207:TempR.HIHI",
 "SCL32-BL02:CM05-TT8207:TempR.HIHI",
 "SCL32-BL02:CM06-TT8207:TempR.HIHI",
 "SCL32-BL02:CM07-TT8207:TempR.HIHI",
 "SCL32-BL02:CM08-TT8207:TempR.HIHI",
 "SCL32-BL02:CM09-TT8207:TempR.HIHI",
 "SCL32-BL02:CM10-TT8207:TempR.HIHI",
 "SCL32-BL02:CM11-TT8207:TempR.HIHI",
 "SCL32-BL02:CM12-TT8207:TempR.HIHI",
 "SCL32-BL02:CM13-TT8207:TempR.HIHI",
 "SCL32-BL03:CM01-TT8207:TempR.HIHI",
 "SCL32-BL03:CM02-TT8207:TempR.HIHI",
 "SCL32-BL03:CM03-TT8207:TempR.HIHI",
 "SCL32-BL03:CM04-TT8207:TempR.HIHI",
 "SCL32-BL03:CM05-TT8207:TempR.HIHI",
 "SCL32-BL03:CM06-TT8207:TempR.HIHI",
 "SCL32-BL03:CM07-TT8207:TempR.HIHI",
 "SCL32-BL03:CM08-TT8207:TempR.HIHI",
 "SCL32-BL03:CM09-TT8207:TempR.HIHI",
 "SCL32-BL03:CM10-TT8207:TempR.HIHI",
 "SCL32-BL03:CM11-TT8207:TempR.HIHI",
 "SCL32-BL03:CM12-TT8207:TempR.HIHI",
 "SCL32-BL03:CM13-TT8207:TempR.HIHI",
 "SCL32-BL03:CM14-TT8207:TempR.HIHI",
 "SCL32-BL03:CM15-TT8207:TempR.HIHI",
 "SCL32-BL03:CM16-TT8207:TempR.HIHI",
 "SCL32-BL03:CM17-TT8207:TempR.HIHI",
 "SCL32-BL03:CM18-TT8207:TempR.HIHI",
 "SCL32-BL03:CM19-TT8207:TempR.HIHI"

};
float	HCMTT8207HIHI;
assign	HCMTT8207HIHI to "{GrpHCMTT8207}.HIHI";
monitor HCMTT8207HIHI;
evflag  evHCMTT8207HIHI;
sync 	HCMTT8207HIHI evHCMTT8207HIHI;

float HCMTT8208HIHIArray[32];
assign HCMTT8208HIHIArray to {
 "SCL32-BL02:CM01-TT8208:TempR.HIHI",
 "SCL32-BL02:CM02-TT8208:TempR.HIHI",
 "SCL32-BL02:CM03-TT8208:TempR.HIHI",
 "SCL32-BL02:CM04-TT8208:TempR.HIHI",
 "SCL32-BL02:CM05-TT8208:TempR.HIHI",
 "SCL32-BL02:CM06-TT8208:TempR.HIHI",
 "SCL32-BL02:CM07-TT8208:TempR.HIHI",
 "SCL32-BL02:CM08-TT8208:TempR.HIHI",
 "SCL32-BL02:CM09-TT8208:TempR.HIHI",
 "SCL32-BL02:CM10-TT8208:TempR.HIHI",
 "SCL32-BL02:CM11-TT8208:TempR.HIHI",
 "SCL32-BL02:CM12-TT8208:TempR.HIHI",
 "SCL32-BL02:CM13-TT8208:TempR.HIHI",
 "SCL32-BL03:CM01-TT8208:TempR.HIHI",
 "SCL32-BL03:CM02-TT8208:TempR.HIHI",
 "SCL32-BL03:CM03-TT8208:TempR.HIHI",
 "SCL32-BL03:CM04-TT8208:TempR.HIHI",
 "SCL32-BL03:CM05-TT8208:TempR.HIHI",
 "SCL32-BL03:CM06-TT8208:TempR.HIHI",
 "SCL32-BL03:CM07-TT8208:TempR.HIHI",
 "SCL32-BL03:CM08-TT8208:TempR.HIHI",
 "SCL32-BL03:CM09-TT8208:TempR.HIHI",
 "SCL32-BL03:CM10-TT8208:TempR.HIHI",
 "SCL32-BL03:CM11-TT8208:TempR.HIHI",
 "SCL32-BL03:CM12-TT8208:TempR.HIHI",
 "SCL32-BL03:CM13-TT8208:TempR.HIHI",
 "SCL32-BL03:CM14-TT8208:TempR.HIHI",
 "SCL32-BL03:CM15-TT8208:TempR.HIHI",
 "SCL32-BL03:CM16-TT8208:TempR.HIHI",
 "SCL32-BL03:CM17-TT8208:TempR.HIHI",
 "SCL32-BL03:CM18-TT8208:TempR.HIHI",
 "SCL32-BL03:CM19-TT8208:TempR.HIHI"

};
float	HCMTT8208HIHI;
assign	HCMTT8208HIHI to "{GrpHCMTT8208}.HIHI";
monitor HCMTT8208HIHI;
evflag  evHCMTT8208HIHI;
sync 	HCMTT8208HIHI evHCMTT8208HIHI;

float HCMLT8401HIHIArray[32];
assign HCMLT8401HIHIArray to {
 "SCL32-BL02:CM01-LT8401:PercR.HIHI",
 "SCL32-BL02:CM02-LT8401:PercR.HIHI",
 "SCL32-BL02:CM03-LT8401:PercR.HIHI",
 "SCL32-BL02:CM04-LT8401:PercR.HIHI",
 "SCL32-BL02:CM05-LT8401:PercR.HIHI",
 "SCL32-BL02:CM06-LT8401:PercR.HIHI",
 "SCL32-BL02:CM07-LT8401:PercR.HIHI",
 "SCL32-BL02:CM08-LT8401:PercR.HIHI",
 "SCL32-BL02:CM09-LT8401:PercR.HIHI",
 "SCL32-BL02:CM10-LT8401:PercR.HIHI",
 "SCL32-BL02:CM11-LT8401:PercR.HIHI",
 "SCL32-BL02:CM12-LT8401:PercR.HIHI",
 "SCL32-BL02:CM13-LT8401:PercR.HIHI",
 "SCL32-BL03:CM01-LT8401:PercR.HIHI",
 "SCL32-BL03:CM02-LT8401:PercR.HIHI",
 "SCL32-BL03:CM03-LT8401:PercR.HIHI",
 "SCL32-BL03:CM04-LT8401:PercR.HIHI",
 "SCL32-BL03:CM05-LT8401:PercR.HIHI",
 "SCL32-BL03:CM06-LT8401:PercR.HIHI",
 "SCL32-BL03:CM07-LT8401:PercR.HIHI",
 "SCL32-BL03:CM08-LT8401:PercR.HIHI",
 "SCL32-BL03:CM09-LT8401:PercR.HIHI",
 "SCL32-BL03:CM10-LT8401:PercR.HIHI",
 "SCL32-BL03:CM11-LT8401:PercR.HIHI",
 "SCL32-BL03:CM12-LT8401:PercR.HIHI",
 "SCL32-BL03:CM13-LT8401:PercR.HIHI",
 "SCL32-BL03:CM14-LT8401:PercR.HIHI",
 "SCL32-BL03:CM15-LT8401:PercR.HIHI",
 "SCL32-BL03:CM16-LT8401:PercR.HIHI",
 "SCL32-BL03:CM17-LT8401:PercR.HIHI",
 "SCL32-BL03:CM18-LT8401:PercR.HIHI",
 "SCL32-BL03:CM19-LT8401:PercR.HIHI"

};
float	HCMLT8401HIHI;
assign	HCMLT8401HIHI to "{GrpHCMLT8401}.HIHI";
monitor HCMLT8401HIHI;
evflag  evHCMLT8401HIHI;
sync 	HCMLT8401HIHI evHCMLT8401HIHI;

float HCMLT8201HIHIArray[32];
assign HCMLT8201HIHIArray to {
 "SCL32-BL02:CM01-LT8201:PercR.HIHI",
 "SCL32-BL02:CM02-LT8201:PercR.HIHI",
 "SCL32-BL02:CM03-LT8201:PercR.HIHI",
 "SCL32-BL02:CM04-LT8201:PercR.HIHI",
 "SCL32-BL02:CM05-LT8201:PercR.HIHI",
 "SCL32-BL02:CM06-LT8201:PercR.HIHI",
 "SCL32-BL02:CM07-LT8201:PercR.HIHI",
 "SCL32-BL02:CM08-LT8201:PercR.HIHI",
 "SCL32-BL02:CM09-LT8201:PercR.HIHI",
 "SCL32-BL02:CM10-LT8201:PercR.HIHI",
 "SCL32-BL02:CM11-LT8201:PercR.HIHI",
 "SCL32-BL02:CM12-LT8201:PercR.HIHI",
 "SCL32-BL02:CM13-LT8201:PercR.HIHI",
 "SCL32-BL03:CM01-LT8201:PercR.HIHI",
 "SCL32-BL03:CM02-LT8201:PercR.HIHI",
 "SCL32-BL03:CM03-LT8201:PercR.HIHI",
 "SCL32-BL03:CM04-LT8201:PercR.HIHI",
 "SCL32-BL03:CM05-LT8201:PercR.HIHI",
 "SCL32-BL03:CM06-LT8201:PercR.HIHI",
 "SCL32-BL03:CM07-LT8201:PercR.HIHI",
 "SCL32-BL03:CM08-LT8201:PercR.HIHI",
 "SCL32-BL03:CM09-LT8201:PercR.HIHI",
 "SCL32-BL03:CM10-LT8201:PercR.HIHI",
 "SCL32-BL03:CM11-LT8201:PercR.HIHI",
 "SCL32-BL03:CM12-LT8201:PercR.HIHI",
 "SCL32-BL03:CM13-LT8201:PercR.HIHI",
 "SCL32-BL03:CM14-LT8201:PercR.HIHI",
 "SCL32-BL03:CM15-LT8201:PercR.HIHI",
 "SCL32-BL03:CM16-LT8201:PercR.HIHI",
 "SCL32-BL03:CM17-LT8201:PercR.HIHI",
 "SCL32-BL03:CM18-LT8201:PercR.HIHI",
 "SCL32-BL03:CM19-LT8201:PercR.HIHI"

};
float	HCMLT8201HIHI;
assign	HCMLT8201HIHI to "{GrpHCMLT8201}.HIHI";
monitor HCMLT8201HIHI;
evflag  evHCMLT8201HIHI;
sync 	HCMLT8201HIHI evHCMLT8201HIHI;

float HCMTT8603HIHIArray[32];
assign HCMTT8603HIHIArray to {
 "SCL32-BL02:CM01-TT8603:TempR.HIHI",
 "SCL32-BL02:CM02-TT8603:TempR.HIHI",
 "SCL32-BL02:CM03-TT8603:TempR.HIHI",
 "SCL32-BL02:CM04-TT8603:TempR.HIHI",
 "SCL32-BL02:CM05-TT8603:TempR.HIHI",
 "SCL32-BL02:CM06-TT8603:TempR.HIHI",
 "SCL32-BL02:CM07-TT8603:TempR.HIHI",
 "SCL32-BL02:CM08-TT8603:TempR.HIHI",
 "SCL32-BL02:CM09-TT8603:TempR.HIHI",
 "SCL32-BL02:CM10-TT8603:TempR.HIHI",
 "SCL32-BL02:CM11-TT8603:TempR.HIHI",
 "SCL32-BL02:CM12-TT8603:TempR.HIHI",
 "SCL32-BL02:CM13-TT8603:TempR.HIHI",
 "SCL32-BL03:CM01-TT8603:TempR.HIHI",
 "SCL32-BL03:CM02-TT8603:TempR.HIHI",
 "SCL32-BL03:CM03-TT8603:TempR.HIHI",
 "SCL32-BL03:CM04-TT8603:TempR.HIHI",
 "SCL32-BL03:CM05-TT8603:TempR.HIHI",
 "SCL32-BL03:CM06-TT8603:TempR.HIHI",
 "SCL32-BL03:CM07-TT8603:TempR.HIHI",
 "SCL32-BL03:CM08-TT8603:TempR.HIHI",
 "SCL32-BL03:CM09-TT8603:TempR.HIHI",
 "SCL32-BL03:CM10-TT8603:TempR.HIHI",
 "SCL32-BL03:CM11-TT8603:TempR.HIHI",
 "SCL32-BL03:CM12-TT8603:TempR.HIHI",
 "SCL32-BL03:CM13-TT8603:TempR.HIHI",
 "SCL32-BL03:CM14-TT8603:TempR.HIHI",
 "SCL32-BL03:CM15-TT8603:TempR.HIHI",
 "SCL32-BL03:CM16-TT8603:TempR.HIHI",
 "SCL32-BL03:CM17-TT8603:TempR.HIHI",
 "SCL32-BL03:CM18-TT8603:TempR.HIHI",
 "SCL32-BL03:CM19-TT8603:TempR.HIHI"

};
float	HCMTT8603HIHI;
assign	HCMTT8603HIHI to "{GrpHCMTT8603}.HIHI";
monitor HCMTT8603HIHI;
evflag  evHCMTT8603HIHI;
sync 	HCMTT8603HIHI evHCMTT8603HIHI;

float HCMTT8604HIHIArray[32];
assign HCMTT8604HIHIArray to {
 "SCL32-BL02:CM01-TT8604:TempR.HIHI",
 "SCL32-BL02:CM02-TT8604:TempR.HIHI",
 "SCL32-BL02:CM03-TT8604:TempR.HIHI",
 "SCL32-BL02:CM04-TT8604:TempR.HIHI",
 "SCL32-BL02:CM05-TT8604:TempR.HIHI",
 "SCL32-BL02:CM06-TT8604:TempR.HIHI",
 "SCL32-BL02:CM07-TT8604:TempR.HIHI",
 "SCL32-BL02:CM08-TT8604:TempR.HIHI",
 "SCL32-BL02:CM09-TT8604:TempR.HIHI",
 "SCL32-BL02:CM10-TT8604:TempR.HIHI",
 "SCL32-BL02:CM11-TT8604:TempR.HIHI",
 "SCL32-BL02:CM12-TT8604:TempR.HIHI",
 "SCL32-BL02:CM13-TT8604:TempR.HIHI",
 "SCL32-BL03:CM01-TT8604:TempR.HIHI",
 "SCL32-BL03:CM02-TT8604:TempR.HIHI",
 "SCL32-BL03:CM03-TT8604:TempR.HIHI",
 "SCL32-BL03:CM04-TT8604:TempR.HIHI",
 "SCL32-BL03:CM05-TT8604:TempR.HIHI",
 "SCL32-BL03:CM06-TT8604:TempR.HIHI",
 "SCL32-BL03:CM07-TT8604:TempR.HIHI",
 "SCL32-BL03:CM08-TT8604:TempR.HIHI",
 "SCL32-BL03:CM09-TT8604:TempR.HIHI",
 "SCL32-BL03:CM10-TT8604:TempR.HIHI",
 "SCL32-BL03:CM11-TT8604:TempR.HIHI",
 "SCL32-BL03:CM12-TT8604:TempR.HIHI",
 "SCL32-BL03:CM13-TT8604:TempR.HIHI",
 "SCL32-BL03:CM14-TT8604:TempR.HIHI",
 "SCL32-BL03:CM15-TT8604:TempR.HIHI",
 "SCL32-BL03:CM16-TT8604:TempR.HIHI",
 "SCL32-BL03:CM17-TT8604:TempR.HIHI",
 "SCL32-BL03:CM18-TT8604:TempR.HIHI",
 "SCL32-BL03:CM19-TT8604:TempR.HIHI"

};
float	HCMTT8604HIHI;
assign	HCMTT8604HIHI to "{GrpHCMTT8604}.HIHI";
monitor HCMTT8604HIHI;
evflag  evHCMTT8604HIHI;
sync 	HCMTT8604HIHI evHCMTT8604HIHI;

float HCMTT8209HIHIArray[19];
assign HCMTT8209HIHIArray to {
 "SCL32-BL03:CM01-TT8209:TempR.HIHI",
 "SCL32-BL03:CM02-TT8209:TempR.HIHI",
 "SCL32-BL03:CM03-TT8209:TempR.HIHI",
 "SCL32-BL03:CM04-TT8209:TempR.HIHI",
 "SCL32-BL03:CM05-TT8209:TempR.HIHI",
 "SCL32-BL03:CM06-TT8209:TempR.HIHI",
 "SCL32-BL03:CM07-TT8209:TempR.HIHI",
 "SCL32-BL03:CM08-TT8209:TempR.HIHI",
 "SCL32-BL03:CM09-TT8209:TempR.HIHI",
 "SCL32-BL03:CM10-TT8209:TempR.HIHI",
 "SCL32-BL03:CM11-TT8209:TempR.HIHI",
 "SCL32-BL03:CM12-TT8209:TempR.HIHI",
 "SCL32-BL03:CM13-TT8209:TempR.HIHI",
 "SCL32-BL03:CM14-TT8209:TempR.HIHI",
 "SCL32-BL03:CM15-TT8209:TempR.HIHI",
 "SCL32-BL03:CM16-TT8209:TempR.HIHI",
 "SCL32-BL03:CM17-TT8209:TempR.HIHI",
 "SCL32-BL03:CM18-TT8209:TempR.HIHI",
 "SCL32-BL03:CM19-TT8209:TempR.HIHI"

};
float	HCMTT8209HIHI;
assign	HCMTT8209HIHI to "{GrpHCMTT8209}.HIHI";
monitor HCMTT8209HIHI;
evflag  evHCMTT8209HIHI;
sync 	HCMTT8209HIHI evHCMTT8209HIHI;

float HCMTT8210HIHIArray[19];
assign HCMTT8210HIHIArray to {
 "SCL32-BL03:CM01-TT8210:TempR.HIHI",
 "SCL32-BL03:CM02-TT8210:TempR.HIHI",
 "SCL32-BL03:CM03-TT8210:TempR.HIHI",
 "SCL32-BL03:CM04-TT8210:TempR.HIHI",
 "SCL32-BL03:CM05-TT8210:TempR.HIHI",
 "SCL32-BL03:CM06-TT8210:TempR.HIHI",
 "SCL32-BL03:CM07-TT8210:TempR.HIHI",
 "SCL32-BL03:CM08-TT8210:TempR.HIHI",
 "SCL32-BL03:CM09-TT8210:TempR.HIHI",
 "SCL32-BL03:CM10-TT8210:TempR.HIHI",
 "SCL32-BL03:CM11-TT8210:TempR.HIHI",
 "SCL32-BL03:CM12-TT8210:TempR.HIHI",
 "SCL32-BL03:CM13-TT8210:TempR.HIHI",
 "SCL32-BL03:CM14-TT8210:TempR.HIHI",
 "SCL32-BL03:CM15-TT8210:TempR.HIHI",
 "SCL32-BL03:CM16-TT8210:TempR.HIHI",
 "SCL32-BL03:CM17-TT8210:TempR.HIHI",
 "SCL32-BL03:CM18-TT8210:TempR.HIHI",
 "SCL32-BL03:CM19-TT8210:TempR.HIHI"

};
float	HCMTT8210HIHI;
assign	HCMTT8210HIHI to "{GrpHCMTT8210}.HIHI";
monitor HCMTT8210HIHI;
evflag  evHCMTT8210HIHI;
sync 	HCMTT8210HIHI evHCMTT8210HIHI;

float HCMTT8211HIHIArray[19];
assign HCMTT8211HIHIArray to {
 "SCL32-BL03:CM01-TT8211:TempR.HIHI",
 "SCL32-BL03:CM02-TT8211:TempR.HIHI",
 "SCL32-BL03:CM03-TT8211:TempR.HIHI",
 "SCL32-BL03:CM04-TT8211:TempR.HIHI",
 "SCL32-BL03:CM05-TT8211:TempR.HIHI",
 "SCL32-BL03:CM06-TT8211:TempR.HIHI",
 "SCL32-BL03:CM07-TT8211:TempR.HIHI",
 "SCL32-BL03:CM08-TT8211:TempR.HIHI",
 "SCL32-BL03:CM09-TT8211:TempR.HIHI",
 "SCL32-BL03:CM10-TT8211:TempR.HIHI",
 "SCL32-BL03:CM11-TT8211:TempR.HIHI",
 "SCL32-BL03:CM12-TT8211:TempR.HIHI",
 "SCL32-BL03:CM13-TT8211:TempR.HIHI",
 "SCL32-BL03:CM14-TT8211:TempR.HIHI",
 "SCL32-BL03:CM15-TT8211:TempR.HIHI",
 "SCL32-BL03:CM16-TT8211:TempR.HIHI",
 "SCL32-BL03:CM17-TT8211:TempR.HIHI",
 "SCL32-BL03:CM18-TT8211:TempR.HIHI",
 "SCL32-BL03:CM19-TT8211:TempR.HIHI"

};
float	HCMTT8211HIHI;
assign	HCMTT8211HIHI to "{GrpHCMTT8211}.HIHI";
monitor HCMTT8211HIHI;
evflag  evHCMTT8211HIHI;
sync 	HCMTT8211HIHI evHCMTT8211HIHI;

float HCMTT8212HIHIArray[19];
assign HCMTT8212HIHIArray to {
 "SCL32-BL03:CM01-TT8212:TempR.HIHI",
 "SCL32-BL03:CM02-TT8212:TempR.HIHI",
 "SCL32-BL03:CM03-TT8212:TempR.HIHI",
 "SCL32-BL03:CM04-TT8212:TempR.HIHI",
 "SCL32-BL03:CM05-TT8212:TempR.HIHI",
 "SCL32-BL03:CM06-TT8212:TempR.HIHI",
 "SCL32-BL03:CM07-TT8212:TempR.HIHI",
 "SCL32-BL03:CM08-TT8212:TempR.HIHI",
 "SCL32-BL03:CM09-TT8212:TempR.HIHI",
 "SCL32-BL03:CM10-TT8212:TempR.HIHI",
 "SCL32-BL03:CM11-TT8212:TempR.HIHI",
 "SCL32-BL03:CM12-TT8212:TempR.HIHI",
 "SCL32-BL03:CM13-TT8212:TempR.HIHI",
 "SCL32-BL03:CM14-TT8212:TempR.HIHI",
 "SCL32-BL03:CM15-TT8212:TempR.HIHI",
 "SCL32-BL03:CM16-TT8212:TempR.HIHI",
 "SCL32-BL03:CM17-TT8212:TempR.HIHI",
 "SCL32-BL03:CM18-TT8212:TempR.HIHI",
 "SCL32-BL03:CM19-TT8212:TempR.HIHI"

};
float	HCMTT8212HIHI;
assign	HCMTT8212HIHI to "{GrpHCMTT8212}.HIHI";
monitor HCMTT8212HIHI;
evflag  evHCMTT8212HIHI;
sync 	HCMTT8212HIHI evHCMTT8212HIHI;

float HCMTT8213HIHIArray[19];
assign HCMTT8213HIHIArray to {
 "SCL32-BL03:CM01-TT8213:TempR.HIHI",
 "SCL32-BL03:CM02-TT8213:TempR.HIHI",
 "SCL32-BL03:CM03-TT8213:TempR.HIHI",
 "SCL32-BL03:CM04-TT8213:TempR.HIHI",
 "SCL32-BL03:CM05-TT8213:TempR.HIHI",
 "SCL32-BL03:CM06-TT8213:TempR.HIHI",
 "SCL32-BL03:CM07-TT8213:TempR.HIHI",
 "SCL32-BL03:CM08-TT8213:TempR.HIHI",
 "SCL32-BL03:CM09-TT8213:TempR.HIHI",
 "SCL32-BL03:CM10-TT8213:TempR.HIHI",
 "SCL32-BL03:CM11-TT8213:TempR.HIHI",
 "SCL32-BL03:CM12-TT8213:TempR.HIHI",
 "SCL32-BL03:CM13-TT8213:TempR.HIHI",
 "SCL32-BL03:CM14-TT8213:TempR.HIHI",
 "SCL32-BL03:CM15-TT8213:TempR.HIHI",
 "SCL32-BL03:CM16-TT8213:TempR.HIHI",
 "SCL32-BL03:CM17-TT8213:TempR.HIHI",
 "SCL32-BL03:CM18-TT8213:TempR.HIHI",
 "SCL32-BL03:CM19-TT8213:TempR.HIHI"

};
float	HCMTT8213HIHI;
assign	HCMTT8213HIHI to "{GrpHCMTT8213}.HIHI";
monitor HCMTT8213HIHI;
evflag  evHCMTT8213HIHI;
sync 	HCMTT8213HIHI evHCMTT8213HIHI;

float HCMTT8214HIHIArray[19];
assign HCMTT8214HIHIArray to {
 "SCL32-BL03:CM01-TT8214:TempR.HIHI",
 "SCL32-BL03:CM02-TT8214:TempR.HIHI",
 "SCL32-BL03:CM03-TT8214:TempR.HIHI",
 "SCL32-BL03:CM04-TT8214:TempR.HIHI",
 "SCL32-BL03:CM05-TT8214:TempR.HIHI",
 "SCL32-BL03:CM06-TT8214:TempR.HIHI",
 "SCL32-BL03:CM07-TT8214:TempR.HIHI",
 "SCL32-BL03:CM08-TT8214:TempR.HIHI",
 "SCL32-BL03:CM09-TT8214:TempR.HIHI",
 "SCL32-BL03:CM10-TT8214:TempR.HIHI",
 "SCL32-BL03:CM11-TT8214:TempR.HIHI",
 "SCL32-BL03:CM12-TT8214:TempR.HIHI",
 "SCL32-BL03:CM13-TT8214:TempR.HIHI",
 "SCL32-BL03:CM14-TT8214:TempR.HIHI",
 "SCL32-BL03:CM15-TT8214:TempR.HIHI",
 "SCL32-BL03:CM16-TT8214:TempR.HIHI",
 "SCL32-BL03:CM17-TT8214:TempR.HIHI",
 "SCL32-BL03:CM18-TT8214:TempR.HIHI",
 "SCL32-BL03:CM19-TT8214:TempR.HIHI"

};
float	HCMTT8214HIHI;
assign	HCMTT8214HIHI to "{GrpHCMTT8214}.HIHI";
monitor HCMTT8214HIHI;
evflag  evHCMTT8214HIHI;
sync 	HCMTT8214HIHI evHCMTT8214HIHI;

float HCMEH8401VHIHIArray[32];
assign HCMEH8401VHIHIArray to {
 "SCL32-BL02:CM01-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM02-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM03-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM04-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM05-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM06-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM07-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM08-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM09-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM10-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM11-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM12-EH8401:VoltR.HIHI",
 "SCL32-BL02:CM13-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM01-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM02-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM03-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM04-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM05-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM06-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM07-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM08-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM09-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM10-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM11-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM12-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM13-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM14-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM15-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM16-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM17-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM18-EH8401:VoltR.HIHI",
 "SCL32-BL03:CM19-EH8401:VoltR.HIHI"

};
float	HCMEH8401VHIHI;
assign	HCMEH8401VHIHI to "{GrpHCMEH8401V}.HIHI";
monitor HCMEH8401VHIHI;
evflag  evHCMEH8401VHIHI;
sync 	HCMEH8401VHIHI evHCMEH8401VHIHI;

float HCMEH8401WHIHIArray[32];
assign HCMEH8401WHIHIArray to {
 "SCL32-BL02:CM01-EH8401:WattR.HIHI",
 "SCL32-BL02:CM02-EH8401:WattR.HIHI",
 "SCL32-BL02:CM03-EH8401:WattR.HIHI",
 "SCL32-BL02:CM04-EH8401:WattR.HIHI",
 "SCL32-BL02:CM05-EH8401:WattR.HIHI",
 "SCL32-BL02:CM06-EH8401:WattR.HIHI",
 "SCL32-BL02:CM07-EH8401:WattR.HIHI",
 "SCL32-BL02:CM08-EH8401:WattR.HIHI",
 "SCL32-BL02:CM09-EH8401:WattR.HIHI",
 "SCL32-BL02:CM10-EH8401:WattR.HIHI",
 "SCL32-BL02:CM11-EH8401:WattR.HIHI",
 "SCL32-BL02:CM12-EH8401:WattR.HIHI",
 "SCL32-BL02:CM13-EH8401:WattR.HIHI",
 "SCL32-BL03:CM01-EH8401:WattR.HIHI",
 "SCL32-BL03:CM02-EH8401:WattR.HIHI",
 "SCL32-BL03:CM03-EH8401:WattR.HIHI",
 "SCL32-BL03:CM04-EH8401:WattR.HIHI",
 "SCL32-BL03:CM05-EH8401:WattR.HIHI",
 "SCL32-BL03:CM06-EH8401:WattR.HIHI",
 "SCL32-BL03:CM07-EH8401:WattR.HIHI",
 "SCL32-BL03:CM08-EH8401:WattR.HIHI",
 "SCL32-BL03:CM09-EH8401:WattR.HIHI",
 "SCL32-BL03:CM10-EH8401:WattR.HIHI",
 "SCL32-BL03:CM11-EH8401:WattR.HIHI",
 "SCL32-BL03:CM12-EH8401:WattR.HIHI",
 "SCL32-BL03:CM13-EH8401:WattR.HIHI",
 "SCL32-BL03:CM14-EH8401:WattR.HIHI",
 "SCL32-BL03:CM15-EH8401:WattR.HIHI",
 "SCL32-BL03:CM16-EH8401:WattR.HIHI",
 "SCL32-BL03:CM17-EH8401:WattR.HIHI",
 "SCL32-BL03:CM18-EH8401:WattR.HIHI",
 "SCL32-BL03:CM19-EH8401:WattR.HIHI"

};
float	HCMEH8401WHIHI;
assign	HCMEH8401WHIHI to "{GrpHCMEH8401W}.HIHI";
monitor HCMEH8401WHIHI;
evflag  evHCMEH8401WHIHI;
sync 	HCMEH8401WHIHI evHCMEH8401WHIHI;

float HCMEH8402VHIHIArray[32];
assign HCMEH8402VHIHIArray to {
 "SCL32-BL02:CM01-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM02-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM03-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM04-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM05-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM06-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM07-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM08-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM09-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM10-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM11-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM12-EH8402:VoltR.HIHI",
 "SCL32-BL02:CM13-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM01-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM02-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM03-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM04-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM05-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM06-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM07-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM08-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM09-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM10-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM11-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM12-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM13-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM14-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM15-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM16-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM17-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM18-EH8402:VoltR.HIHI",
 "SCL32-BL03:CM19-EH8402:VoltR.HIHI"

};
float	HCMEH8402VHIHI;
assign	HCMEH8402VHIHI to "{GrpHCMEH8402V}.HIHI";
monitor HCMEH8402VHIHI;
evflag  evHCMEH8402VHIHI;
sync 	HCMEH8402VHIHI evHCMEH8402VHIHI;

float HCMEH8402WHIHIArray[32];
assign HCMEH8402WHIHIArray to {
 "SCL32-BL02:CM01-EH8402:WattR.HIHI",
 "SCL32-BL02:CM02-EH8402:WattR.HIHI",
 "SCL32-BL02:CM03-EH8402:WattR.HIHI",
 "SCL32-BL02:CM04-EH8402:WattR.HIHI",
 "SCL32-BL02:CM05-EH8402:WattR.HIHI",
 "SCL32-BL02:CM06-EH8402:WattR.HIHI",
 "SCL32-BL02:CM07-EH8402:WattR.HIHI",
 "SCL32-BL02:CM08-EH8402:WattR.HIHI",
 "SCL32-BL02:CM09-EH8402:WattR.HIHI",
 "SCL32-BL02:CM10-EH8402:WattR.HIHI",
 "SCL32-BL02:CM11-EH8402:WattR.HIHI",
 "SCL32-BL02:CM12-EH8402:WattR.HIHI",
 "SCL32-BL02:CM13-EH8402:WattR.HIHI",
 "SCL32-BL03:CM01-EH8402:WattR.HIHI",
 "SCL32-BL03:CM02-EH8402:WattR.HIHI",
 "SCL32-BL03:CM03-EH8402:WattR.HIHI",
 "SCL32-BL03:CM04-EH8402:WattR.HIHI",
 "SCL32-BL03:CM05-EH8402:WattR.HIHI",
 "SCL32-BL03:CM06-EH8402:WattR.HIHI",
 "SCL32-BL03:CM07-EH8402:WattR.HIHI",
 "SCL32-BL03:CM08-EH8402:WattR.HIHI",
 "SCL32-BL03:CM09-EH8402:WattR.HIHI",
 "SCL32-BL03:CM10-EH8402:WattR.HIHI",
 "SCL32-BL03:CM11-EH8402:WattR.HIHI",
 "SCL32-BL03:CM12-EH8402:WattR.HIHI",
 "SCL32-BL03:CM13-EH8402:WattR.HIHI",
 "SCL32-BL03:CM14-EH8402:WattR.HIHI",
 "SCL32-BL03:CM15-EH8402:WattR.HIHI",
 "SCL32-BL03:CM16-EH8402:WattR.HIHI",
 "SCL32-BL03:CM17-EH8402:WattR.HIHI",
 "SCL32-BL03:CM18-EH8402:WattR.HIHI",
 "SCL32-BL03:CM19-EH8402:WattR.HIHI"

};
float	HCMEH8402WHIHI;
assign	HCMEH8402WHIHI to "{GrpHCMEH8402W}.HIHI";
monitor HCMEH8402WHIHI;
evflag  evHCMEH8402WHIHI;
sync 	HCMEH8402WHIHI evHCMEH8402WHIHI;

float HCMEH8201VHIHIArray[32];
assign HCMEH8201VHIHIArray to {
 "SCL32-BL02:CM01-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM02-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM03-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM04-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM05-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM06-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM07-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM08-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM09-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM10-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM11-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM12-EH8201:VoltR.HIHI",
 "SCL32-BL02:CM13-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM01-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM02-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM03-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM04-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM05-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM06-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM07-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM08-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM09-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM10-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM11-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM12-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM13-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM14-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM15-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM16-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM17-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM18-EH8201:VoltR.HIHI",
 "SCL32-BL03:CM19-EH8201:VoltR.HIHI"

};
float	HCMEH8201VHIHI;
assign	HCMEH8201VHIHI to "{GrpHCMEH8201V}.HIHI";
monitor HCMEH8201VHIHI;
evflag  evHCMEH8201VHIHI;
sync 	HCMEH8201VHIHI evHCMEH8201VHIHI;

float HCMEH8201WHIHIArray[32];
assign HCMEH8201WHIHIArray to {
 "SCL32-BL02:CM01-EH8201:WattR.HIHI",
 "SCL32-BL02:CM02-EH8201:WattR.HIHI",
 "SCL32-BL02:CM03-EH8201:WattR.HIHI",
 "SCL32-BL02:CM04-EH8201:WattR.HIHI",
 "SCL32-BL02:CM05-EH8201:WattR.HIHI",
 "SCL32-BL02:CM06-EH8201:WattR.HIHI",
 "SCL32-BL02:CM07-EH8201:WattR.HIHI",
 "SCL32-BL02:CM08-EH8201:WattR.HIHI",
 "SCL32-BL02:CM09-EH8201:WattR.HIHI",
 "SCL32-BL02:CM10-EH8201:WattR.HIHI",
 "SCL32-BL02:CM11-EH8201:WattR.HIHI",
 "SCL32-BL02:CM12-EH8201:WattR.HIHI",
 "SCL32-BL02:CM13-EH8201:WattR.HIHI",
 "SCL32-BL03:CM01-EH8201:WattR.HIHI",
 "SCL32-BL03:CM02-EH8201:WattR.HIHI",
 "SCL32-BL03:CM03-EH8201:WattR.HIHI",
 "SCL32-BL03:CM04-EH8201:WattR.HIHI",
 "SCL32-BL03:CM05-EH8201:WattR.HIHI",
 "SCL32-BL03:CM06-EH8201:WattR.HIHI",
 "SCL32-BL03:CM07-EH8201:WattR.HIHI",
 "SCL32-BL03:CM08-EH8201:WattR.HIHI",
 "SCL32-BL03:CM09-EH8201:WattR.HIHI",
 "SCL32-BL03:CM10-EH8201:WattR.HIHI",
 "SCL32-BL03:CM11-EH8201:WattR.HIHI",
 "SCL32-BL03:CM12-EH8201:WattR.HIHI",
 "SCL32-BL03:CM13-EH8201:WattR.HIHI",
 "SCL32-BL03:CM14-EH8201:WattR.HIHI",
 "SCL32-BL03:CM15-EH8201:WattR.HIHI",
 "SCL32-BL03:CM16-EH8201:WattR.HIHI",
 "SCL32-BL03:CM17-EH8201:WattR.HIHI",
 "SCL32-BL03:CM18-EH8201:WattR.HIHI",
 "SCL32-BL03:CM19-EH8201:WattR.HIHI"

};
float	HCMEH8201WHIHI;
assign	HCMEH8201WHIHI to "{GrpHCMEH8201W}.HIHI";
monitor HCMEH8201WHIHI;
evflag  evHCMEH8201WHIHI;
sync 	HCMEH8201WHIHI evHCMEH8201WHIHI;



float HVBxPT7501HIGHArray[32];
assign HVBxPT7501HIGHArray to {
 "SCL32-CDL02:VBx01-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7501:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7501:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7501:PresR.HIGH"

};
float	HVBxPT7501HIGH;
assign	HVBxPT7501HIGH to "{GrpHVBxPT7501}.HIGH";
monitor HVBxPT7501HIGH;
evflag  evHVBxPT7501HIGH;
sync 	HVBxPT7501HIGH evHVBxPT7501HIGH;

float HVBxPT7502HIGHArray[32];
assign HVBxPT7502HIGHArray to {
 "SCL32-CDL02:VBx01-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7502:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7502:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7502:PresR.HIGH"

};
float	HVBxPT7502HIGH;
assign	HVBxPT7502HIGH to "{GrpHVBxPT7502}.HIGH";
monitor HVBxPT7502HIGH;
evflag  evHVBxPT7502HIGH;
sync 	HVBxPT7502HIGH evHVBxPT7502HIGH;

float HVBxPT7503HIGHArray[32];
assign HVBxPT7503HIGHArray to {
 "SCL32-CDL02:VBx01-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7503:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7503:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7503:PresR.HIGH"

};
float	HVBxPT7503HIGH;
assign	HVBxPT7503HIGH to "{GrpHVBxPT7503}.HIGH";
monitor HVBxPT7503HIGH;
evflag  evHVBxPT7503HIGH;
sync 	HVBxPT7503HIGH evHVBxPT7503HIGH;

float HVBxPT7401HIGHArray[32];
assign HVBxPT7401HIGHArray to {
 "SCL32-CDL02:VBx01-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7401:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7401:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7401:PresR.HIGH"

};
float	HVBxPT7401HIGH;
assign	HVBxPT7401HIGH to "{GrpHVBxPT7401}.HIGH";
monitor HVBxPT7401HIGH;
evflag  evHVBxPT7401HIGH;
sync 	HVBxPT7401HIGH evHVBxPT7401HIGH;

float HVBxPT7301HIGHArray[32];
assign HVBxPT7301HIGHArray to {
 "SCL32-CDL02:VBx01-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7301:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7301:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7301:PresR.HIGH"

};
float	HVBxPT7301HIGH;
assign	HVBxPT7301HIGH to "{GrpHVBxPT7301}.HIGH";
monitor HVBxPT7301HIGH;
evflag  evHVBxPT7301HIGH;
sync 	HVBxPT7301HIGH evHVBxPT7301HIGH;

float HVBxPT7201HIGHArray[32];
assign HVBxPT7201HIGHArray to {
 "SCL32-CDL02:VBx01-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7201:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7201:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7201:PresR.HIGH"

};
float	HVBxPT7201HIGH;
assign	HVBxPT7201HIGH to "{GrpHVBxPT7201}.HIGH";
monitor HVBxPT7201HIGH;
evflag  evHVBxPT7201HIGH;
sync 	HVBxPT7201HIGH evHVBxPT7201HIGH;

float HVBxPT7102HIGHArray[5];
assign HVBxPT7102HIGHArray to {
 "SCL32-CDL02:VBx04-PT7102:VacuumR.HIGH",
 "SCL32-CDL02:VBx09-PT7102:VacuumR.HIGH",
 "SCL32-CDL03:VBx04-PT7102:VacuumR.HIGH",
 "SCL32-CDL03:VBx09-PT7102:VacuumR.HIGH",
 "SCL32-CDL03:VBx18-PT7102:VacuumR.HIGH"

};
float	HVBxPT7102HIGH;
assign	HVBxPT7102HIGH to "{GrpHVBxPT7102}.HIGH";
monitor HVBxPT7102HIGH;
evflag  evHVBxPT7102HIGH;
sync 	HVBxPT7102HIGH evHVBxPT7102HIGH;

float HVBxPT7202HIGHArray[32];
assign HVBxPT7202HIGHArray to {
 "SCL32-CDL02:VBx01-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7202:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7202:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7202:PresR.HIGH"

};
float	HVBxPT7202HIGH;
assign	HVBxPT7202HIGH to "{GrpHVBxPT7202}.HIGH";
monitor HVBxPT7202HIGH;
evflag  evHVBxPT7202HIGH;
sync 	HVBxPT7202HIGH evHVBxPT7202HIGH;

float HVBxPT7203HIGHArray[32];
assign HVBxPT7203HIGHArray to {
 "SCL32-CDL02:VBx01-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx02-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx03-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx04-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx05-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx06-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx07-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx08-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx09-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx10-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx11-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx12-PT7203:PresR.HIGH",
 "SCL32-CDL02:VBx13-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx01-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx02-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx03-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx04-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx05-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx06-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx07-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx08-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx09-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx10-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx11-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx12-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx13-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx14-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx15-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx16-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx17-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx18-PT7203:PresR.HIGH",
 "SCL32-CDL03:VBx19-PT7203:PresR.HIGH"

};
float	HVBxPT7203HIGH;
assign	HVBxPT7203HIGH to "{GrpHVBxPT7203}.HIGH";
monitor HVBxPT7203HIGH;
evflag  evHVBxPT7203HIGH;
sync 	HVBxPT7203HIGH evHVBxPT7203HIGH;

float HVBxTT7501HIGHArray[32];
assign HVBxTT7501HIGHArray to {
 "SCL32-CDL02:VBx01-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx02-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx03-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx04-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx05-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx06-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx07-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx08-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx09-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx10-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx11-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx12-TT7501:TempR.HIGH",
 "SCL32-CDL02:VBx13-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx01-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx02-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx03-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx04-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx05-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx06-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx07-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx08-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx09-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx10-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx11-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx12-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx13-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx14-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx15-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx16-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx17-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx18-TT7501:TempR.HIGH",
 "SCL32-CDL03:VBx19-TT7501:TempR.HIGH"

};
float	HVBxTT7501HIGH;
assign	HVBxTT7501HIGH to "{GrpHVBxTT7501}.HIGH";
monitor HVBxTT7501HIGH;
evflag  evHVBxTT7501HIGH;
sync 	HVBxTT7501HIGH evHVBxTT7501HIGH;

float HVBxTT7502HIGHArray[32];
assign HVBxTT7502HIGHArray to {
 "SCL32-CDL02:VBx01-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx02-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx03-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx04-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx05-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx06-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx07-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx08-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx09-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx10-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx11-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx12-TT7502:TempR.HIGH",
 "SCL32-CDL02:VBx13-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx01-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx02-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx03-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx04-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx05-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx06-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx07-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx08-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx09-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx10-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx11-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx12-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx13-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx14-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx15-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx16-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx17-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx18-TT7502:TempR.HIGH",
 "SCL32-CDL03:VBx19-TT7502:TempR.HIGH"

};
float	HVBxTT7502HIGH;
assign	HVBxTT7502HIGH to "{GrpHVBxTT7502}.HIGH";
monitor HVBxTT7502HIGH;
evflag  evHVBxTT7502HIGH;
sync 	HVBxTT7502HIGH evHVBxTT7502HIGH;

float HVBxTT7503HIGHArray[32];
assign HVBxTT7503HIGHArray to {
 "SCL32-CDL02:VBx01-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx02-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx03-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx04-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx05-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx06-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx07-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx08-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx09-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx10-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx11-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx12-TT7503:TempR.HIGH",
 "SCL32-CDL02:VBx13-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx01-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx02-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx03-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx04-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx05-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx06-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx07-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx08-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx09-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx10-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx11-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx12-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx13-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx14-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx15-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx16-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx17-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx18-TT7503:TempR.HIGH",
 "SCL32-CDL03:VBx19-TT7503:TempR.HIGH"

};
float	HVBxTT7503HIGH;
assign	HVBxTT7503HIGH to "{GrpHVBxTT7503}.HIGH";
monitor HVBxTT7503HIGH;
evflag  evHVBxTT7503HIGH;
sync 	HVBxTT7503HIGH evHVBxTT7503HIGH;

float HVBxTT7504HIGHArray[32];
assign HVBxTT7504HIGHArray to {
 "SCL32-CDL02:VBx01-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx02-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx03-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx04-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx05-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx06-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx07-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx08-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx09-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx10-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx11-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx12-TT7504:TempR.HIGH",
 "SCL32-CDL02:VBx13-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx01-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx02-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx03-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx04-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx05-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx06-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx07-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx08-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx09-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx10-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx11-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx12-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx13-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx14-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx15-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx16-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx17-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx18-TT7504:TempR.HIGH",
 "SCL32-CDL03:VBx19-TT7504:TempR.HIGH"

};
float	HVBxTT7504HIGH;
assign	HVBxTT7504HIGH to "{GrpHVBxTT7504}.HIGH";
monitor HVBxTT7504HIGH;
evflag  evHVBxTT7504HIGH;
sync 	HVBxTT7504HIGH evHVBxTT7504HIGH;

float HVBxTT7401HIGHArray[32];
assign HVBxTT7401HIGHArray to {
 "SCL32-CDL02:VBx01-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx02-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx03-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx04-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx05-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx06-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx07-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx08-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx09-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx10-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx11-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx12-TT7401:TempR.HIGH",
 "SCL32-CDL02:VBx13-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx01-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx02-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx03-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx04-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx05-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx06-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx07-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx08-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx09-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx10-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx11-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx12-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx13-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx14-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx15-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx16-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx17-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx18-TT7401:TempR.HIGH",
 "SCL32-CDL03:VBx19-TT7401:TempR.HIGH"

};
float	HVBxTT7401HIGH;
assign	HVBxTT7401HIGH to "{GrpHVBxTT7401}.HIGH";
monitor HVBxTT7401HIGH;
evflag  evHVBxTT7401HIGH;
sync 	HVBxTT7401HIGH evHVBxTT7401HIGH;

float HVBxTT7301HIGHArray[32];
assign HVBxTT7301HIGHArray to {
 "SCL32-CDL02:VBx01-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx02-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx03-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx04-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx05-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx06-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx07-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx08-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx09-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx10-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx11-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx12-TT7301:TempR.HIGH",
 "SCL32-CDL02:VBx13-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx01-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx02-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx03-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx04-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx05-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx06-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx07-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx08-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx09-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx10-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx11-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx12-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx13-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx14-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx15-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx16-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx17-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx18-TT7301:TempR.HIGH",
 "SCL32-CDL03:VBx19-TT7301:TempR.HIGH"

};
float	HVBxTT7301HIGH;
assign	HVBxTT7301HIGH to "{GrpHVBxTT7301}.HIGH";
monitor HVBxTT7301HIGH;
evflag  evHVBxTT7301HIGH;
sync 	HVBxTT7301HIGH evHVBxTT7301HIGH;

float HVBxTT7201HIGHArray[32];
assign HVBxTT7201HIGHArray to {
 "SCL32-CDL02:VBx01-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx02-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx03-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx04-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx05-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx06-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx07-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx08-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx09-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx10-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx11-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx12-TT7201:TempR.HIGH",
 "SCL32-CDL02:VBx13-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx01-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx02-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx03-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx04-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx05-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx06-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx07-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx08-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx09-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx10-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx11-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx12-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx13-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx14-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx15-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx16-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx17-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx18-TT7201:TempR.HIGH",
 "SCL32-CDL03:VBx19-TT7201:TempR.HIGH"

};
float	HVBxTT7201HIGH;
assign	HVBxTT7201HIGH to "{GrpHVBxTT7201}.HIGH";
monitor HVBxTT7201HIGH;
evflag  evHVBxTT7201HIGH;
sync 	HVBxTT7201HIGH evHVBxTT7201HIGH;

float HCMPT8501HIGHArray[32];
assign HCMPT8501HIGHArray to {
 "SCL32-BL02:CM01-PT8501:PresR.HIGH",
 "SCL32-BL02:CM02-PT8501:PresR.HIGH",
 "SCL32-BL02:CM03-PT8501:PresR.HIGH",
 "SCL32-BL02:CM04-PT8501:PresR.HIGH",
 "SCL32-BL02:CM05-PT8501:PresR.HIGH",
 "SCL32-BL02:CM06-PT8501:PresR.HIGH",
 "SCL32-BL02:CM07-PT8501:PresR.HIGH",
 "SCL32-BL02:CM08-PT8501:PresR.HIGH",
 "SCL32-BL02:CM09-PT8501:PresR.HIGH",
 "SCL32-BL02:CM10-PT8501:PresR.HIGH",
 "SCL32-BL02:CM11-PT8501:PresR.HIGH",
 "SCL32-BL02:CM12-PT8501:PresR.HIGH",
 "SCL32-BL02:CM13-PT8501:PresR.HIGH",
 "SCL32-BL03:CM01-PT8501:PresR.HIGH",
 "SCL32-BL03:CM02-PT8501:PresR.HIGH",
 "SCL32-BL03:CM03-PT8501:PresR.HIGH",
 "SCL32-BL03:CM04-PT8501:PresR.HIGH",
 "SCL32-BL03:CM05-PT8501:PresR.HIGH",
 "SCL32-BL03:CM06-PT8501:PresR.HIGH",
 "SCL32-BL03:CM07-PT8501:PresR.HIGH",
 "SCL32-BL03:CM08-PT8501:PresR.HIGH",
 "SCL32-BL03:CM09-PT8501:PresR.HIGH",
 "SCL32-BL03:CM10-PT8501:PresR.HIGH",
 "SCL32-BL03:CM11-PT8501:PresR.HIGH",
 "SCL32-BL03:CM12-PT8501:PresR.HIGH",
 "SCL32-BL03:CM13-PT8501:PresR.HIGH",
 "SCL32-BL03:CM14-PT8501:PresR.HIGH",
 "SCL32-BL03:CM15-PT8501:PresR.HIGH",
 "SCL32-BL03:CM16-PT8501:PresR.HIGH",
 "SCL32-BL03:CM17-PT8501:PresR.HIGH",
 "SCL32-BL03:CM18-PT8501:PresR.HIGH",
 "SCL32-BL03:CM19-PT8501:PresR.HIGH"

};
float	HCMPT8501HIGH;
assign	HCMPT8501HIGH to "{GrpHCMPT8501}.HIGH";
monitor HCMPT8501HIGH;
evflag  evHCMPT8501HIGH;
sync 	HCMPT8501HIGH evHCMPT8501HIGH;

float HCMPT8301HIGHArray[32];
assign HCMPT8301HIGHArray to {
 "SCL32-BL02:CM01-PT8301:PresR.HIGH",
 "SCL32-BL02:CM02-PT8301:PresR.HIGH",
 "SCL32-BL02:CM03-PT8301:PresR.HIGH",
 "SCL32-BL02:CM04-PT8301:PresR.HIGH",
 "SCL32-BL02:CM05-PT8301:PresR.HIGH",
 "SCL32-BL02:CM06-PT8301:PresR.HIGH",
 "SCL32-BL02:CM07-PT8301:PresR.HIGH",
 "SCL32-BL02:CM08-PT8301:PresR.HIGH",
 "SCL32-BL02:CM09-PT8301:PresR.HIGH",
 "SCL32-BL02:CM10-PT8301:PresR.HIGH",
 "SCL32-BL02:CM11-PT8301:PresR.HIGH",
 "SCL32-BL02:CM12-PT8301:PresR.HIGH",
 "SCL32-BL02:CM13-PT8301:PresR.HIGH",
 "SCL32-BL03:CM01-PT8301:PresR.HIGH",
 "SCL32-BL03:CM02-PT8301:PresR.HIGH",
 "SCL32-BL03:CM03-PT8301:PresR.HIGH",
 "SCL32-BL03:CM04-PT8301:PresR.HIGH",
 "SCL32-BL03:CM05-PT8301:PresR.HIGH",
 "SCL32-BL03:CM06-PT8301:PresR.HIGH",
 "SCL32-BL03:CM07-PT8301:PresR.HIGH",
 "SCL32-BL03:CM08-PT8301:PresR.HIGH",
 "SCL32-BL03:CM09-PT8301:PresR.HIGH",
 "SCL32-BL03:CM10-PT8301:PresR.HIGH",
 "SCL32-BL03:CM11-PT8301:PresR.HIGH",
 "SCL32-BL03:CM12-PT8301:PresR.HIGH",
 "SCL32-BL03:CM13-PT8301:PresR.HIGH",
 "SCL32-BL03:CM14-PT8301:PresR.HIGH",
 "SCL32-BL03:CM15-PT8301:PresR.HIGH",
 "SCL32-BL03:CM16-PT8301:PresR.HIGH",
 "SCL32-BL03:CM17-PT8301:PresR.HIGH",
 "SCL32-BL03:CM18-PT8301:PresR.HIGH",
 "SCL32-BL03:CM19-PT8301:PresR.HIGH"

};
float	HCMPT8301HIGH;
assign	HCMPT8301HIGH to "{GrpHCMPT8301}.HIGH";
monitor HCMPT8301HIGH;
evflag  evHCMPT8301HIGH;
sync 	HCMPT8301HIGH evHCMPT8301HIGH;

float HCMPT8201HIGHArray[32];
assign HCMPT8201HIGHArray to {
 "SCL32-BL02:CM01-PT8201:PresR.HIGH",
 "SCL32-BL02:CM02-PT8201:PresR.HIGH",
 "SCL32-BL02:CM03-PT8201:PresR.HIGH",
 "SCL32-BL02:CM04-PT8201:PresR.HIGH",
 "SCL32-BL02:CM05-PT8201:PresR.HIGH",
 "SCL32-BL02:CM06-PT8201:PresR.HIGH",
 "SCL32-BL02:CM07-PT8201:PresR.HIGH",
 "SCL32-BL02:CM08-PT8201:PresR.HIGH",
 "SCL32-BL02:CM09-PT8201:PresR.HIGH",
 "SCL32-BL02:CM10-PT8201:PresR.HIGH",
 "SCL32-BL02:CM11-PT8201:PresR.HIGH",
 "SCL32-BL02:CM12-PT8201:PresR.HIGH",
 "SCL32-BL02:CM13-PT8201:PresR.HIGH",
 "SCL32-BL03:CM01-PT8201:PresR.HIGH",
 "SCL32-BL03:CM02-PT8201:PresR.HIGH",
 "SCL32-BL03:CM03-PT8201:PresR.HIGH",
 "SCL32-BL03:CM04-PT8201:PresR.HIGH",
 "SCL32-BL03:CM05-PT8201:PresR.HIGH",
 "SCL32-BL03:CM06-PT8201:PresR.HIGH",
 "SCL32-BL03:CM07-PT8201:PresR.HIGH",
 "SCL32-BL03:CM08-PT8201:PresR.HIGH",
 "SCL32-BL03:CM09-PT8201:PresR.HIGH",
 "SCL32-BL03:CM10-PT8201:PresR.HIGH",
 "SCL32-BL03:CM11-PT8201:PresR.HIGH",
 "SCL32-BL03:CM12-PT8201:PresR.HIGH",
 "SCL32-BL03:CM13-PT8201:PresR.HIGH",
 "SCL32-BL03:CM14-PT8201:PresR.HIGH",
 "SCL32-BL03:CM15-PT8201:PresR.HIGH",
 "SCL32-BL03:CM16-PT8201:PresR.HIGH",
 "SCL32-BL03:CM17-PT8201:PresR.HIGH",
 "SCL32-BL03:CM18-PT8201:PresR.HIGH",
 "SCL32-BL03:CM19-PT8201:PresR.HIGH"

};
float	HCMPT8201HIGH;
assign	HCMPT8201HIGH to "{GrpHCMPT8201}.HIGH";
monitor HCMPT8201HIGH;
evflag  evHCMPT8201HIGH;
sync 	HCMPT8201HIGH evHCMPT8201HIGH;

float HCMPT8202HIGHArray[32];
assign HCMPT8202HIGHArray to {
 "SCL32-BL02:CM01-PT8202:PresR.HIGH",
 "SCL32-BL02:CM02-PT8202:PresR.HIGH",
 "SCL32-BL02:CM03-PT8202:PresR.HIGH",
 "SCL32-BL02:CM04-PT8202:PresR.HIGH",
 "SCL32-BL02:CM05-PT8202:PresR.HIGH",
 "SCL32-BL02:CM06-PT8202:PresR.HIGH",
 "SCL32-BL02:CM07-PT8202:PresR.HIGH",
 "SCL32-BL02:CM08-PT8202:PresR.HIGH",
 "SCL32-BL02:CM09-PT8202:PresR.HIGH",
 "SCL32-BL02:CM10-PT8202:PresR.HIGH",
 "SCL32-BL02:CM11-PT8202:PresR.HIGH",
 "SCL32-BL02:CM12-PT8202:PresR.HIGH",
 "SCL32-BL02:CM13-PT8202:PresR.HIGH",
 "SCL32-BL03:CM01-PT8202:PresR.HIGH",
 "SCL32-BL03:CM02-PT8202:PresR.HIGH",
 "SCL32-BL03:CM03-PT8202:PresR.HIGH",
 "SCL32-BL03:CM04-PT8202:PresR.HIGH",
 "SCL32-BL03:CM05-PT8202:PresR.HIGH",
 "SCL32-BL03:CM06-PT8202:PresR.HIGH",
 "SCL32-BL03:CM07-PT8202:PresR.HIGH",
 "SCL32-BL03:CM08-PT8202:PresR.HIGH",
 "SCL32-BL03:CM09-PT8202:PresR.HIGH",
 "SCL32-BL03:CM10-PT8202:PresR.HIGH",
 "SCL32-BL03:CM11-PT8202:PresR.HIGH",
 "SCL32-BL03:CM12-PT8202:PresR.HIGH",
 "SCL32-BL03:CM13-PT8202:PresR.HIGH",
 "SCL32-BL03:CM14-PT8202:PresR.HIGH",
 "SCL32-BL03:CM15-PT8202:PresR.HIGH",
 "SCL32-BL03:CM16-PT8202:PresR.HIGH",
 "SCL32-BL03:CM17-PT8202:PresR.HIGH",
 "SCL32-BL03:CM18-PT8202:PresR.HIGH",
 "SCL32-BL03:CM19-PT8202:PresR.HIGH"

};
float	HCMPT8202HIGH;
assign	HCMPT8202HIGH to "{GrpHCMPT8202}.HIGH";
monitor HCMPT8202HIGH;
evflag  evHCMPT8202HIGH;
sync 	HCMPT8202HIGH evHCMPT8202HIGH;

float HCMPT8203HIGHArray[32];
assign HCMPT8203HIGHArray to {
 "SCL32-BL02:CM01-PT8203:PresR.HIGH",
 "SCL32-BL02:CM02-PT8203:PresR.HIGH",
 "SCL32-BL02:CM03-PT8203:PresR.HIGH",
 "SCL32-BL02:CM04-PT8203:PresR.HIGH",
 "SCL32-BL02:CM05-PT8203:PresR.HIGH",
 "SCL32-BL02:CM06-PT8203:PresR.HIGH",
 "SCL32-BL02:CM07-PT8203:PresR.HIGH",
 "SCL32-BL02:CM08-PT8203:PresR.HIGH",
 "SCL32-BL02:CM09-PT8203:PresR.HIGH",
 "SCL32-BL02:CM10-PT8203:PresR.HIGH",
 "SCL32-BL02:CM11-PT8203:PresR.HIGH",
 "SCL32-BL02:CM12-PT8203:PresR.HIGH",
 "SCL32-BL02:CM13-PT8203:PresR.HIGH",
 "SCL32-BL03:CM01-PT8203:PresR.HIGH",
 "SCL32-BL03:CM02-PT8203:PresR.HIGH",
 "SCL32-BL03:CM03-PT8203:PresR.HIGH",
 "SCL32-BL03:CM04-PT8203:PresR.HIGH",
 "SCL32-BL03:CM05-PT8203:PresR.HIGH",
 "SCL32-BL03:CM06-PT8203:PresR.HIGH",
 "SCL32-BL03:CM07-PT8203:PresR.HIGH",
 "SCL32-BL03:CM08-PT8203:PresR.HIGH",
 "SCL32-BL03:CM09-PT8203:PresR.HIGH",
 "SCL32-BL03:CM10-PT8203:PresR.HIGH",
 "SCL32-BL03:CM11-PT8203:PresR.HIGH",
 "SCL32-BL03:CM12-PT8203:PresR.HIGH",
 "SCL32-BL03:CM13-PT8203:PresR.HIGH",
 "SCL32-BL03:CM14-PT8203:PresR.HIGH",
 "SCL32-BL03:CM15-PT8203:PresR.HIGH",
 "SCL32-BL03:CM16-PT8203:PresR.HIGH",
 "SCL32-BL03:CM17-PT8203:PresR.HIGH",
 "SCL32-BL03:CM18-PT8203:PresR.HIGH",
 "SCL32-BL03:CM19-PT8203:PresR.HIGH"

};
float	HCMPT8203HIGH;
assign	HCMPT8203HIGH to "{GrpHCMPT8203}.HIGH";
monitor HCMPT8203HIGH;
evflag  evHCMPT8203HIGH;
sync 	HCMPT8203HIGH evHCMPT8203HIGH;

float HCMPT8101HIGHArray[32];
assign HCMPT8101HIGHArray to {
 "SCL32-BL02:CM01-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM02-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM03-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM04-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM05-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM06-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM07-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM08-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM09-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM10-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM11-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM12-PT8101:VacuumR.HIGH",
 "SCL32-BL02:CM13-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM01-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM02-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM03-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM04-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM05-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM06-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM07-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM08-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM09-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM10-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM11-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM12-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM13-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM14-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM15-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM16-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM17-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM18-PT8101:VacuumR.HIGH",
 "SCL32-BL03:CM19-PT8101:VacuumR.HIGH"

};
float	HCMPT8101HIGH;
assign	HCMPT8101HIGH to "{GrpHCMPT8101}.HIGH";
monitor HCMPT8101HIGH;
evflag  evHCMPT8101HIGH;
sync 	HCMPT8101HIGH evHCMPT8101HIGH;

float HCMPT8102HIGHArray[32];
assign HCMPT8102HIGHArray to {
 "SCL32-BL02:CM01-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM02-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM03-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM04-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM05-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM06-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM07-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM08-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM09-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM10-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM11-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM12-PT8102:VacuumR.HIGH",
 "SCL32-BL02:CM13-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM01-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM02-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM03-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM04-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM05-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM06-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM07-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM08-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM09-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM10-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM11-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM12-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM13-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM14-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM15-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM16-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM17-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM18-PT8102:VacuumR.HIGH",
 "SCL32-BL03:CM19-PT8102:VacuumR.HIGH"

};
float	HCMPT8102HIGH;
assign	HCMPT8102HIGH to "{GrpHCMPT8102}.HIGH";
monitor HCMPT8102HIGH;
evflag  evHCMPT8102HIGH;
sync 	HCMPT8102HIGH evHCMPT8102HIGH;

float HCMPT8104HIGHArray[32];
assign HCMPT8104HIGHArray to {
 "SCL32-BL02:CM01-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM02-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM03-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM04-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM05-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM06-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM07-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM08-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM09-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM10-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM11-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM12-PT8104:VacuumR.HIGH",
 "SCL32-BL02:CM13-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM01-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM02-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM03-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM04-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM05-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM06-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM07-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM08-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM09-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM10-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM11-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM12-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM13-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM14-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM15-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM16-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM17-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM18-PT8104:VacuumR.HIGH",
 "SCL32-BL03:CM19-PT8104:VacuumR.HIGH"

};
float	HCMPT8104HIGH;
assign	HCMPT8104HIGH to "{GrpHCMPT8104}.HIGH";
monitor HCMPT8104HIGH;
evflag  evHCMPT8104HIGH;
sync 	HCMPT8104HIGH evHCMPT8104HIGH;

float HCMPT8112HIGHArray[32];
assign HCMPT8112HIGHArray to {
 "SCL32-BL02:CM01-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM02-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM03-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM04-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM05-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM06-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM07-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM08-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM09-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM10-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM11-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM12-PT8112:VacuumR.HIGH",
 "SCL32-BL02:CM13-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM01-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM02-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM03-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM04-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM05-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM06-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM07-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM08-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM09-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM10-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM11-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM12-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM13-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM14-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM15-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM16-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM17-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM18-PT8112:VacuumR.HIGH",
 "SCL32-BL03:CM19-PT8112:VacuumR.HIGH"

};
float	HCMPT8112HIGH;
assign	HCMPT8112HIGH to "{GrpHCMPT8112}.HIGH";
monitor HCMPT8112HIGH;
evflag  evHCMPT8112HIGH;
sync 	HCMPT8112HIGH evHCMPT8112HIGH;

float HCMPT8103HIGHArray[27];
assign HCMPT8103HIGHArray to {
 "SCL32-BL02:CM01-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM02-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM03-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM05-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM06-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM07-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM08-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM10-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM11-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM12-PT8103:VacuumR.HIGH",
 "SCL32-BL02:CM13-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM01-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM02-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM03-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM05-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM06-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM07-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM08-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM10-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM11-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM12-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM13-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM14-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM15-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM16-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM17-PT8103:VacuumR.HIGH",
 "SCL32-BL03:CM19-PT8103:VacuumR.HIGH"

};
float	HCMPT8103HIGH;
assign	HCMPT8103HIGH to "{GrpHCMPT8103}.HIGH";
monitor HCMPT8103HIGH;
evflag  evHCMPT8103HIGH;
sync 	HCMPT8103HIGH evHCMPT8103HIGH;

float HCMPT8113HIGHArray[27];
assign HCMPT8113HIGHArray to {
 "SCL32-BL02:CM01-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM02-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM03-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM05-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM06-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM07-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM08-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM10-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM11-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM12-PT8113:VacuumR.HIGH",
 "SCL32-BL02:CM13-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM01-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM02-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM03-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM05-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM06-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM07-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM08-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM10-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM11-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM12-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM13-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM14-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM15-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM16-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM17-PT8113:VacuumR.HIGH",
 "SCL32-BL03:CM19-PT8113:VacuumR.HIGH"

};
float	HCMPT8113HIGH;
assign	HCMPT8113HIGH to "{GrpHCMPT8113}.HIGH";
monitor HCMPT8113HIGH;
evflag  evHCMPT8113HIGH;
sync 	HCMPT8113HIGH evHCMPT8113HIGH;

float HCMTT8601HIGHArray[32];
assign HCMTT8601HIGHArray to {
 "SCL32-BL02:CM01-TT8601:TempR.HIGH",
 "SCL32-BL02:CM02-TT8601:TempR.HIGH",
 "SCL32-BL02:CM03-TT8601:TempR.HIGH",
 "SCL32-BL02:CM04-TT8601:TempR.HIGH",
 "SCL32-BL02:CM05-TT8601:TempR.HIGH",
 "SCL32-BL02:CM06-TT8601:TempR.HIGH",
 "SCL32-BL02:CM07-TT8601:TempR.HIGH",
 "SCL32-BL02:CM08-TT8601:TempR.HIGH",
 "SCL32-BL02:CM09-TT8601:TempR.HIGH",
 "SCL32-BL02:CM10-TT8601:TempR.HIGH",
 "SCL32-BL02:CM11-TT8601:TempR.HIGH",
 "SCL32-BL02:CM12-TT8601:TempR.HIGH",
 "SCL32-BL02:CM13-TT8601:TempR.HIGH",
 "SCL32-BL03:CM01-TT8601:TempR.HIGH",
 "SCL32-BL03:CM02-TT8601:TempR.HIGH",
 "SCL32-BL03:CM03-TT8601:TempR.HIGH",
 "SCL32-BL03:CM04-TT8601:TempR.HIGH",
 "SCL32-BL03:CM05-TT8601:TempR.HIGH",
 "SCL32-BL03:CM06-TT8601:TempR.HIGH",
 "SCL32-BL03:CM07-TT8601:TempR.HIGH",
 "SCL32-BL03:CM08-TT8601:TempR.HIGH",
 "SCL32-BL03:CM09-TT8601:TempR.HIGH",
 "SCL32-BL03:CM10-TT8601:TempR.HIGH",
 "SCL32-BL03:CM11-TT8601:TempR.HIGH",
 "SCL32-BL03:CM12-TT8601:TempR.HIGH",
 "SCL32-BL03:CM13-TT8601:TempR.HIGH",
 "SCL32-BL03:CM14-TT8601:TempR.HIGH",
 "SCL32-BL03:CM15-TT8601:TempR.HIGH",
 "SCL32-BL03:CM16-TT8601:TempR.HIGH",
 "SCL32-BL03:CM17-TT8601:TempR.HIGH",
 "SCL32-BL03:CM18-TT8601:TempR.HIGH",
 "SCL32-BL03:CM19-TT8601:TempR.HIGH"

};
float	HCMTT8601HIGH;
assign	HCMTT8601HIGH to "{GrpHCMTT8601}.HIGH";
monitor HCMTT8601HIGH;
evflag  evHCMTT8601HIGH;
sync 	HCMTT8601HIGH evHCMTT8601HIGH;

float HCMTT8602HIGHArray[32];
assign HCMTT8602HIGHArray to {
 "SCL32-BL02:CM01-TT8602:TempR.HIGH",
 "SCL32-BL02:CM02-TT8602:TempR.HIGH",
 "SCL32-BL02:CM03-TT8602:TempR.HIGH",
 "SCL32-BL02:CM04-TT8602:TempR.HIGH",
 "SCL32-BL02:CM05-TT8602:TempR.HIGH",
 "SCL32-BL02:CM06-TT8602:TempR.HIGH",
 "SCL32-BL02:CM07-TT8602:TempR.HIGH",
 "SCL32-BL02:CM08-TT8602:TempR.HIGH",
 "SCL32-BL02:CM09-TT8602:TempR.HIGH",
 "SCL32-BL02:CM10-TT8602:TempR.HIGH",
 "SCL32-BL02:CM11-TT8602:TempR.HIGH",
 "SCL32-BL02:CM12-TT8602:TempR.HIGH",
 "SCL32-BL02:CM13-TT8602:TempR.HIGH",
 "SCL32-BL03:CM01-TT8602:TempR.HIGH",
 "SCL32-BL03:CM02-TT8602:TempR.HIGH",
 "SCL32-BL03:CM03-TT8602:TempR.HIGH",
 "SCL32-BL03:CM04-TT8602:TempR.HIGH",
 "SCL32-BL03:CM05-TT8602:TempR.HIGH",
 "SCL32-BL03:CM06-TT8602:TempR.HIGH",
 "SCL32-BL03:CM07-TT8602:TempR.HIGH",
 "SCL32-BL03:CM08-TT8602:TempR.HIGH",
 "SCL32-BL03:CM09-TT8602:TempR.HIGH",
 "SCL32-BL03:CM10-TT8602:TempR.HIGH",
 "SCL32-BL03:CM11-TT8602:TempR.HIGH",
 "SCL32-BL03:CM12-TT8602:TempR.HIGH",
 "SCL32-BL03:CM13-TT8602:TempR.HIGH",
 "SCL32-BL03:CM14-TT8602:TempR.HIGH",
 "SCL32-BL03:CM15-TT8602:TempR.HIGH",
 "SCL32-BL03:CM16-TT8602:TempR.HIGH",
 "SCL32-BL03:CM17-TT8602:TempR.HIGH",
 "SCL32-BL03:CM18-TT8602:TempR.HIGH",
 "SCL32-BL03:CM19-TT8602:TempR.HIGH"

};
float	HCMTT8602HIGH;
assign	HCMTT8602HIGH to "{GrpHCMTT8602}.HIGH";
monitor HCMTT8602HIGH;
evflag  evHCMTT8602HIGH;
sync 	HCMTT8602HIGH evHCMTT8602HIGH;

float HCMTT8501HIGHArray[32];
assign HCMTT8501HIGHArray to {
 "SCL32-BL02:CM01-TT8501:TempR.HIGH",
 "SCL32-BL02:CM02-TT8501:TempR.HIGH",
 "SCL32-BL02:CM03-TT8501:TempR.HIGH",
 "SCL32-BL02:CM04-TT8501:TempR.HIGH",
 "SCL32-BL02:CM05-TT8501:TempR.HIGH",
 "SCL32-BL02:CM06-TT8501:TempR.HIGH",
 "SCL32-BL02:CM07-TT8501:TempR.HIGH",
 "SCL32-BL02:CM08-TT8501:TempR.HIGH",
 "SCL32-BL02:CM09-TT8501:TempR.HIGH",
 "SCL32-BL02:CM10-TT8501:TempR.HIGH",
 "SCL32-BL02:CM11-TT8501:TempR.HIGH",
 "SCL32-BL02:CM12-TT8501:TempR.HIGH",
 "SCL32-BL02:CM13-TT8501:TempR.HIGH",
 "SCL32-BL03:CM01-TT8501:TempR.HIGH",
 "SCL32-BL03:CM02-TT8501:TempR.HIGH",
 "SCL32-BL03:CM03-TT8501:TempR.HIGH",
 "SCL32-BL03:CM04-TT8501:TempR.HIGH",
 "SCL32-BL03:CM05-TT8501:TempR.HIGH",
 "SCL32-BL03:CM06-TT8501:TempR.HIGH",
 "SCL32-BL03:CM07-TT8501:TempR.HIGH",
 "SCL32-BL03:CM08-TT8501:TempR.HIGH",
 "SCL32-BL03:CM09-TT8501:TempR.HIGH",
 "SCL32-BL03:CM10-TT8501:TempR.HIGH",
 "SCL32-BL03:CM11-TT8501:TempR.HIGH",
 "SCL32-BL03:CM12-TT8501:TempR.HIGH",
 "SCL32-BL03:CM13-TT8501:TempR.HIGH",
 "SCL32-BL03:CM14-TT8501:TempR.HIGH",
 "SCL32-BL03:CM15-TT8501:TempR.HIGH",
 "SCL32-BL03:CM16-TT8501:TempR.HIGH",
 "SCL32-BL03:CM17-TT8501:TempR.HIGH",
 "SCL32-BL03:CM18-TT8501:TempR.HIGH",
 "SCL32-BL03:CM19-TT8501:TempR.HIGH"

};
float	HCMTT8501HIGH;
assign	HCMTT8501HIGH to "{GrpHCMTT8501}.HIGH";
monitor HCMTT8501HIGH;
evflag  evHCMTT8501HIGH;
sync 	HCMTT8501HIGH evHCMTT8501HIGH;

float HCMTT8502HIGHArray[32];
assign HCMTT8502HIGHArray to {
 "SCL32-BL02:CM01-TT8502:TempR.HIGH",
 "SCL32-BL02:CM02-TT8502:TempR.HIGH",
 "SCL32-BL02:CM03-TT8502:TempR.HIGH",
 "SCL32-BL02:CM04-TT8502:TempR.HIGH",
 "SCL32-BL02:CM05-TT8502:TempR.HIGH",
 "SCL32-BL02:CM06-TT8502:TempR.HIGH",
 "SCL32-BL02:CM07-TT8502:TempR.HIGH",
 "SCL32-BL02:CM08-TT8502:TempR.HIGH",
 "SCL32-BL02:CM09-TT8502:TempR.HIGH",
 "SCL32-BL02:CM10-TT8502:TempR.HIGH",
 "SCL32-BL02:CM11-TT8502:TempR.HIGH",
 "SCL32-BL02:CM12-TT8502:TempR.HIGH",
 "SCL32-BL02:CM13-TT8502:TempR.HIGH",
 "SCL32-BL03:CM01-TT8502:TempR.HIGH",
 "SCL32-BL03:CM02-TT8502:TempR.HIGH",
 "SCL32-BL03:CM03-TT8502:TempR.HIGH",
 "SCL32-BL03:CM04-TT8502:TempR.HIGH",
 "SCL32-BL03:CM05-TT8502:TempR.HIGH",
 "SCL32-BL03:CM06-TT8502:TempR.HIGH",
 "SCL32-BL03:CM07-TT8502:TempR.HIGH",
 "SCL32-BL03:CM08-TT8502:TempR.HIGH",
 "SCL32-BL03:CM09-TT8502:TempR.HIGH",
 "SCL32-BL03:CM10-TT8502:TempR.HIGH",
 "SCL32-BL03:CM11-TT8502:TempR.HIGH",
 "SCL32-BL03:CM12-TT8502:TempR.HIGH",
 "SCL32-BL03:CM13-TT8502:TempR.HIGH",
 "SCL32-BL03:CM14-TT8502:TempR.HIGH",
 "SCL32-BL03:CM15-TT8502:TempR.HIGH",
 "SCL32-BL03:CM16-TT8502:TempR.HIGH",
 "SCL32-BL03:CM17-TT8502:TempR.HIGH",
 "SCL32-BL03:CM18-TT8502:TempR.HIGH",
 "SCL32-BL03:CM19-TT8502:TempR.HIGH"

};
float	HCMTT8502HIGH;
assign	HCMTT8502HIGH to "{GrpHCMTT8502}.HIGH";
monitor HCMTT8502HIGH;
evflag  evHCMTT8502HIGH;
sync 	HCMTT8502HIGH evHCMTT8502HIGH;

float HCMTT8401HIGHArray[32];
assign HCMTT8401HIGHArray to {
 "SCL32-BL02:CM01-TT8401:TempR.HIGH",
 "SCL32-BL02:CM02-TT8401:TempR.HIGH",
 "SCL32-BL02:CM03-TT8401:TempR.HIGH",
 "SCL32-BL02:CM04-TT8401:TempR.HIGH",
 "SCL32-BL02:CM05-TT8401:TempR.HIGH",
 "SCL32-BL02:CM06-TT8401:TempR.HIGH",
 "SCL32-BL02:CM07-TT8401:TempR.HIGH",
 "SCL32-BL02:CM08-TT8401:TempR.HIGH",
 "SCL32-BL02:CM09-TT8401:TempR.HIGH",
 "SCL32-BL02:CM10-TT8401:TempR.HIGH",
 "SCL32-BL02:CM11-TT8401:TempR.HIGH",
 "SCL32-BL02:CM12-TT8401:TempR.HIGH",
 "SCL32-BL02:CM13-TT8401:TempR.HIGH",
 "SCL32-BL03:CM01-TT8401:TempR.HIGH",
 "SCL32-BL03:CM02-TT8401:TempR.HIGH",
 "SCL32-BL03:CM03-TT8401:TempR.HIGH",
 "SCL32-BL03:CM04-TT8401:TempR.HIGH",
 "SCL32-BL03:CM05-TT8401:TempR.HIGH",
 "SCL32-BL03:CM06-TT8401:TempR.HIGH",
 "SCL32-BL03:CM07-TT8401:TempR.HIGH",
 "SCL32-BL03:CM08-TT8401:TempR.HIGH",
 "SCL32-BL03:CM09-TT8401:TempR.HIGH",
 "SCL32-BL03:CM10-TT8401:TempR.HIGH",
 "SCL32-BL03:CM11-TT8401:TempR.HIGH",
 "SCL32-BL03:CM12-TT8401:TempR.HIGH",
 "SCL32-BL03:CM13-TT8401:TempR.HIGH",
 "SCL32-BL03:CM14-TT8401:TempR.HIGH",
 "SCL32-BL03:CM15-TT8401:TempR.HIGH",
 "SCL32-BL03:CM16-TT8401:TempR.HIGH",
 "SCL32-BL03:CM17-TT8401:TempR.HIGH",
 "SCL32-BL03:CM18-TT8401:TempR.HIGH",
 "SCL32-BL03:CM19-TT8401:TempR.HIGH"

};
float	HCMTT8401HIGH;
assign	HCMTT8401HIGH to "{GrpHCMTT8401}.HIGH";
monitor HCMTT8401HIGH;
evflag  evHCMTT8401HIGH;
sync 	HCMTT8401HIGH evHCMTT8401HIGH;

float HCMTT8402HIGHArray[32];
assign HCMTT8402HIGHArray to {
 "SCL32-BL02:CM01-TT8402:TempR.HIGH",
 "SCL32-BL02:CM02-TT8402:TempR.HIGH",
 "SCL32-BL02:CM03-TT8402:TempR.HIGH",
 "SCL32-BL02:CM04-TT8402:TempR.HIGH",
 "SCL32-BL02:CM05-TT8402:TempR.HIGH",
 "SCL32-BL02:CM06-TT8402:TempR.HIGH",
 "SCL32-BL02:CM07-TT8402:TempR.HIGH",
 "SCL32-BL02:CM08-TT8402:TempR.HIGH",
 "SCL32-BL02:CM09-TT8402:TempR.HIGH",
 "SCL32-BL02:CM10-TT8402:TempR.HIGH",
 "SCL32-BL02:CM11-TT8402:TempR.HIGH",
 "SCL32-BL02:CM12-TT8402:TempR.HIGH",
 "SCL32-BL02:CM13-TT8402:TempR.HIGH",
 "SCL32-BL03:CM01-TT8402:TempR.HIGH",
 "SCL32-BL03:CM02-TT8402:TempR.HIGH",
 "SCL32-BL03:CM03-TT8402:TempR.HIGH",
 "SCL32-BL03:CM04-TT8402:TempR.HIGH",
 "SCL32-BL03:CM05-TT8402:TempR.HIGH",
 "SCL32-BL03:CM06-TT8402:TempR.HIGH",
 "SCL32-BL03:CM07-TT8402:TempR.HIGH",
 "SCL32-BL03:CM08-TT8402:TempR.HIGH",
 "SCL32-BL03:CM09-TT8402:TempR.HIGH",
 "SCL32-BL03:CM10-TT8402:TempR.HIGH",
 "SCL32-BL03:CM11-TT8402:TempR.HIGH",
 "SCL32-BL03:CM12-TT8402:TempR.HIGH",
 "SCL32-BL03:CM13-TT8402:TempR.HIGH",
 "SCL32-BL03:CM14-TT8402:TempR.HIGH",
 "SCL32-BL03:CM15-TT8402:TempR.HIGH",
 "SCL32-BL03:CM16-TT8402:TempR.HIGH",
 "SCL32-BL03:CM17-TT8402:TempR.HIGH",
 "SCL32-BL03:CM18-TT8402:TempR.HIGH",
 "SCL32-BL03:CM19-TT8402:TempR.HIGH"

};
float	HCMTT8402HIGH;
assign	HCMTT8402HIGH to "{GrpHCMTT8402}.HIGH";
monitor HCMTT8402HIGH;
evflag  evHCMTT8402HIGH;
sync 	HCMTT8402HIGH evHCMTT8402HIGH;

float HCMTT8404HIGHArray[32];
assign HCMTT8404HIGHArray to {
 "SCL32-BL02:CM01-TT8404:TempR.HIGH",
 "SCL32-BL02:CM02-TT8404:TempR.HIGH",
 "SCL32-BL02:CM03-TT8404:TempR.HIGH",
 "SCL32-BL02:CM04-TT8404:TempR.HIGH",
 "SCL32-BL02:CM05-TT8404:TempR.HIGH",
 "SCL32-BL02:CM06-TT8404:TempR.HIGH",
 "SCL32-BL02:CM07-TT8404:TempR.HIGH",
 "SCL32-BL02:CM08-TT8404:TempR.HIGH",
 "SCL32-BL02:CM09-TT8404:TempR.HIGH",
 "SCL32-BL02:CM10-TT8404:TempR.HIGH",
 "SCL32-BL02:CM11-TT8404:TempR.HIGH",
 "SCL32-BL02:CM12-TT8404:TempR.HIGH",
 "SCL32-BL02:CM13-TT8404:TempR.HIGH",
 "SCL32-BL03:CM01-TT8404:TempR.HIGH",
 "SCL32-BL03:CM02-TT8404:TempR.HIGH",
 "SCL32-BL03:CM03-TT8404:TempR.HIGH",
 "SCL32-BL03:CM04-TT8404:TempR.HIGH",
 "SCL32-BL03:CM05-TT8404:TempR.HIGH",
 "SCL32-BL03:CM06-TT8404:TempR.HIGH",
 "SCL32-BL03:CM07-TT8404:TempR.HIGH",
 "SCL32-BL03:CM08-TT8404:TempR.HIGH",
 "SCL32-BL03:CM09-TT8404:TempR.HIGH",
 "SCL32-BL03:CM10-TT8404:TempR.HIGH",
 "SCL32-BL03:CM11-TT8404:TempR.HIGH",
 "SCL32-BL03:CM12-TT8404:TempR.HIGH",
 "SCL32-BL03:CM13-TT8404:TempR.HIGH",
 "SCL32-BL03:CM14-TT8404:TempR.HIGH",
 "SCL32-BL03:CM15-TT8404:TempR.HIGH",
 "SCL32-BL03:CM16-TT8404:TempR.HIGH",
 "SCL32-BL03:CM17-TT8404:TempR.HIGH",
 "SCL32-BL03:CM18-TT8404:TempR.HIGH",
 "SCL32-BL03:CM19-TT8404:TempR.HIGH"

};
float	HCMTT8404HIGH;
assign	HCMTT8404HIGH to "{GrpHCMTT8404}.HIGH";
monitor HCMTT8404HIGH;
evflag  evHCMTT8404HIGH;
sync 	HCMTT8404HIGH evHCMTT8404HIGH;

float HCMTT8202HIGHArray[32];
assign HCMTT8202HIGHArray to {
 "SCL32-BL02:CM01-TT8202:TempR.HIGH",
 "SCL32-BL02:CM02-TT8202:TempR.HIGH",
 "SCL32-BL02:CM03-TT8202:TempR.HIGH",
 "SCL32-BL02:CM04-TT8202:TempR.HIGH",
 "SCL32-BL02:CM05-TT8202:TempR.HIGH",
 "SCL32-BL02:CM06-TT8202:TempR.HIGH",
 "SCL32-BL02:CM07-TT8202:TempR.HIGH",
 "SCL32-BL02:CM08-TT8202:TempR.HIGH",
 "SCL32-BL02:CM09-TT8202:TempR.HIGH",
 "SCL32-BL02:CM10-TT8202:TempR.HIGH",
 "SCL32-BL02:CM11-TT8202:TempR.HIGH",
 "SCL32-BL02:CM12-TT8202:TempR.HIGH",
 "SCL32-BL02:CM13-TT8202:TempR.HIGH",
 "SCL32-BL03:CM01-TT8202:TempR.HIGH",
 "SCL32-BL03:CM02-TT8202:TempR.HIGH",
 "SCL32-BL03:CM03-TT8202:TempR.HIGH",
 "SCL32-BL03:CM04-TT8202:TempR.HIGH",
 "SCL32-BL03:CM05-TT8202:TempR.HIGH",
 "SCL32-BL03:CM06-TT8202:TempR.HIGH",
 "SCL32-BL03:CM07-TT8202:TempR.HIGH",
 "SCL32-BL03:CM08-TT8202:TempR.HIGH",
 "SCL32-BL03:CM09-TT8202:TempR.HIGH",
 "SCL32-BL03:CM10-TT8202:TempR.HIGH",
 "SCL32-BL03:CM11-TT8202:TempR.HIGH",
 "SCL32-BL03:CM12-TT8202:TempR.HIGH",
 "SCL32-BL03:CM13-TT8202:TempR.HIGH",
 "SCL32-BL03:CM14-TT8202:TempR.HIGH",
 "SCL32-BL03:CM15-TT8202:TempR.HIGH",
 "SCL32-BL03:CM16-TT8202:TempR.HIGH",
 "SCL32-BL03:CM17-TT8202:TempR.HIGH",
 "SCL32-BL03:CM18-TT8202:TempR.HIGH",
 "SCL32-BL03:CM19-TT8202:TempR.HIGH"

};
float	HCMTT8202HIGH;
assign	HCMTT8202HIGH to "{GrpHCMTT8202}.HIGH";
monitor HCMTT8202HIGH;
evflag  evHCMTT8202HIGH;
sync 	HCMTT8202HIGH evHCMTT8202HIGH;

float HCMTT8203HIGHArray[32];
assign HCMTT8203HIGHArray to {
 "SCL32-BL02:CM01-TT8203:TempR.HIGH",
 "SCL32-BL02:CM02-TT8203:TempR.HIGH",
 "SCL32-BL02:CM03-TT8203:TempR.HIGH",
 "SCL32-BL02:CM04-TT8203:TempR.HIGH",
 "SCL32-BL02:CM05-TT8203:TempR.HIGH",
 "SCL32-BL02:CM06-TT8203:TempR.HIGH",
 "SCL32-BL02:CM07-TT8203:TempR.HIGH",
 "SCL32-BL02:CM08-TT8203:TempR.HIGH",
 "SCL32-BL02:CM09-TT8203:TempR.HIGH",
 "SCL32-BL02:CM10-TT8203:TempR.HIGH",
 "SCL32-BL02:CM11-TT8203:TempR.HIGH",
 "SCL32-BL02:CM12-TT8203:TempR.HIGH",
 "SCL32-BL02:CM13-TT8203:TempR.HIGH",
 "SCL32-BL03:CM01-TT8203:TempR.HIGH",
 "SCL32-BL03:CM02-TT8203:TempR.HIGH",
 "SCL32-BL03:CM03-TT8203:TempR.HIGH",
 "SCL32-BL03:CM04-TT8203:TempR.HIGH",
 "SCL32-BL03:CM05-TT8203:TempR.HIGH",
 "SCL32-BL03:CM06-TT8203:TempR.HIGH",
 "SCL32-BL03:CM07-TT8203:TempR.HIGH",
 "SCL32-BL03:CM08-TT8203:TempR.HIGH",
 "SCL32-BL03:CM09-TT8203:TempR.HIGH",
 "SCL32-BL03:CM10-TT8203:TempR.HIGH",
 "SCL32-BL03:CM11-TT8203:TempR.HIGH",
 "SCL32-BL03:CM12-TT8203:TempR.HIGH",
 "SCL32-BL03:CM13-TT8203:TempR.HIGH",
 "SCL32-BL03:CM14-TT8203:TempR.HIGH",
 "SCL32-BL03:CM15-TT8203:TempR.HIGH",
 "SCL32-BL03:CM16-TT8203:TempR.HIGH",
 "SCL32-BL03:CM17-TT8203:TempR.HIGH",
 "SCL32-BL03:CM18-TT8203:TempR.HIGH",
 "SCL32-BL03:CM19-TT8203:TempR.HIGH"

};
float	HCMTT8203HIGH;
assign	HCMTT8203HIGH to "{GrpHCMTT8203}.HIGH";
monitor HCMTT8203HIGH;
evflag  evHCMTT8203HIGH;
sync 	HCMTT8203HIGH evHCMTT8203HIGH;

float HCMTT8204HIGHArray[32];
assign HCMTT8204HIGHArray to {
 "SCL32-BL02:CM01-TT8204:TempR.HIGH",
 "SCL32-BL02:CM02-TT8204:TempR.HIGH",
 "SCL32-BL02:CM03-TT8204:TempR.HIGH",
 "SCL32-BL02:CM04-TT8204:TempR.HIGH",
 "SCL32-BL02:CM05-TT8204:TempR.HIGH",
 "SCL32-BL02:CM06-TT8204:TempR.HIGH",
 "SCL32-BL02:CM07-TT8204:TempR.HIGH",
 "SCL32-BL02:CM08-TT8204:TempR.HIGH",
 "SCL32-BL02:CM09-TT8204:TempR.HIGH",
 "SCL32-BL02:CM10-TT8204:TempR.HIGH",
 "SCL32-BL02:CM11-TT8204:TempR.HIGH",
 "SCL32-BL02:CM12-TT8204:TempR.HIGH",
 "SCL32-BL02:CM13-TT8204:TempR.HIGH",
 "SCL32-BL03:CM01-TT8204:TempR.HIGH",
 "SCL32-BL03:CM02-TT8204:TempR.HIGH",
 "SCL32-BL03:CM03-TT8204:TempR.HIGH",
 "SCL32-BL03:CM04-TT8204:TempR.HIGH",
 "SCL32-BL03:CM05-TT8204:TempR.HIGH",
 "SCL32-BL03:CM06-TT8204:TempR.HIGH",
 "SCL32-BL03:CM07-TT8204:TempR.HIGH",
 "SCL32-BL03:CM08-TT8204:TempR.HIGH",
 "SCL32-BL03:CM09-TT8204:TempR.HIGH",
 "SCL32-BL03:CM10-TT8204:TempR.HIGH",
 "SCL32-BL03:CM11-TT8204:TempR.HIGH",
 "SCL32-BL03:CM12-TT8204:TempR.HIGH",
 "SCL32-BL03:CM13-TT8204:TempR.HIGH",
 "SCL32-BL03:CM14-TT8204:TempR.HIGH",
 "SCL32-BL03:CM15-TT8204:TempR.HIGH",
 "SCL32-BL03:CM16-TT8204:TempR.HIGH",
 "SCL32-BL03:CM17-TT8204:TempR.HIGH",
 "SCL32-BL03:CM18-TT8204:TempR.HIGH",
 "SCL32-BL03:CM19-TT8204:TempR.HIGH"

};
float	HCMTT8204HIGH;
assign	HCMTT8204HIGH to "{GrpHCMTT8204}.HIGH";
monitor HCMTT8204HIGH;
evflag  evHCMTT8204HIGH;
sync 	HCMTT8204HIGH evHCMTT8204HIGH;

float HCMTT8205HIGHArray[32];
assign HCMTT8205HIGHArray to {
 "SCL32-BL02:CM01-TT8205:TempR.HIGH",
 "SCL32-BL02:CM02-TT8205:TempR.HIGH",
 "SCL32-BL02:CM03-TT8205:TempR.HIGH",
 "SCL32-BL02:CM04-TT8205:TempR.HIGH",
 "SCL32-BL02:CM05-TT8205:TempR.HIGH",
 "SCL32-BL02:CM06-TT8205:TempR.HIGH",
 "SCL32-BL02:CM07-TT8205:TempR.HIGH",
 "SCL32-BL02:CM08-TT8205:TempR.HIGH",
 "SCL32-BL02:CM09-TT8205:TempR.HIGH",
 "SCL32-BL02:CM10-TT8205:TempR.HIGH",
 "SCL32-BL02:CM11-TT8205:TempR.HIGH",
 "SCL32-BL02:CM12-TT8205:TempR.HIGH",
 "SCL32-BL02:CM13-TT8205:TempR.HIGH",
 "SCL32-BL03:CM01-TT8205:TempR.HIGH",
 "SCL32-BL03:CM02-TT8205:TempR.HIGH",
 "SCL32-BL03:CM03-TT8205:TempR.HIGH",
 "SCL32-BL03:CM04-TT8205:TempR.HIGH",
 "SCL32-BL03:CM05-TT8205:TempR.HIGH",
 "SCL32-BL03:CM06-TT8205:TempR.HIGH",
 "SCL32-BL03:CM07-TT8205:TempR.HIGH",
 "SCL32-BL03:CM08-TT8205:TempR.HIGH",
 "SCL32-BL03:CM09-TT8205:TempR.HIGH",
 "SCL32-BL03:CM10-TT8205:TempR.HIGH",
 "SCL32-BL03:CM11-TT8205:TempR.HIGH",
 "SCL32-BL03:CM12-TT8205:TempR.HIGH",
 "SCL32-BL03:CM13-TT8205:TempR.HIGH",
 "SCL32-BL03:CM14-TT8205:TempR.HIGH",
 "SCL32-BL03:CM15-TT8205:TempR.HIGH",
 "SCL32-BL03:CM16-TT8205:TempR.HIGH",
 "SCL32-BL03:CM17-TT8205:TempR.HIGH",
 "SCL32-BL03:CM18-TT8205:TempR.HIGH",
 "SCL32-BL03:CM19-TT8205:TempR.HIGH"

};
float	HCMTT8205HIGH;
assign	HCMTT8205HIGH to "{GrpHCMTT8205}.HIGH";
monitor HCMTT8205HIGH;
evflag  evHCMTT8205HIGH;
sync 	HCMTT8205HIGH evHCMTT8205HIGH;

float HCMTT8206HIGHArray[32];
assign HCMTT8206HIGHArray to {
 "SCL32-BL02:CM01-TT8206:TempR.HIGH",
 "SCL32-BL02:CM02-TT8206:TempR.HIGH",
 "SCL32-BL02:CM03-TT8206:TempR.HIGH",
 "SCL32-BL02:CM04-TT8206:TempR.HIGH",
 "SCL32-BL02:CM05-TT8206:TempR.HIGH",
 "SCL32-BL02:CM06-TT8206:TempR.HIGH",
 "SCL32-BL02:CM07-TT8206:TempR.HIGH",
 "SCL32-BL02:CM08-TT8206:TempR.HIGH",
 "SCL32-BL02:CM09-TT8206:TempR.HIGH",
 "SCL32-BL02:CM10-TT8206:TempR.HIGH",
 "SCL32-BL02:CM11-TT8206:TempR.HIGH",
 "SCL32-BL02:CM12-TT8206:TempR.HIGH",
 "SCL32-BL02:CM13-TT8206:TempR.HIGH",
 "SCL32-BL03:CM01-TT8206:TempR.HIGH",
 "SCL32-BL03:CM02-TT8206:TempR.HIGH",
 "SCL32-BL03:CM03-TT8206:TempR.HIGH",
 "SCL32-BL03:CM04-TT8206:TempR.HIGH",
 "SCL32-BL03:CM05-TT8206:TempR.HIGH",
 "SCL32-BL03:CM06-TT8206:TempR.HIGH",
 "SCL32-BL03:CM07-TT8206:TempR.HIGH",
 "SCL32-BL03:CM08-TT8206:TempR.HIGH",
 "SCL32-BL03:CM09-TT8206:TempR.HIGH",
 "SCL32-BL03:CM10-TT8206:TempR.HIGH",
 "SCL32-BL03:CM11-TT8206:TempR.HIGH",
 "SCL32-BL03:CM12-TT8206:TempR.HIGH",
 "SCL32-BL03:CM13-TT8206:TempR.HIGH",
 "SCL32-BL03:CM14-TT8206:TempR.HIGH",
 "SCL32-BL03:CM15-TT8206:TempR.HIGH",
 "SCL32-BL03:CM16-TT8206:TempR.HIGH",
 "SCL32-BL03:CM17-TT8206:TempR.HIGH",
 "SCL32-BL03:CM18-TT8206:TempR.HIGH",
 "SCL32-BL03:CM19-TT8206:TempR.HIGH"

};
float	HCMTT8206HIGH;
assign	HCMTT8206HIGH to "{GrpHCMTT8206}.HIGH";
monitor HCMTT8206HIGH;
evflag  evHCMTT8206HIGH;
sync 	HCMTT8206HIGH evHCMTT8206HIGH;

float HCMTT8207HIGHArray[32];
assign HCMTT8207HIGHArray to {
 "SCL32-BL02:CM01-TT8207:TempR.HIGH",
 "SCL32-BL02:CM02-TT8207:TempR.HIGH",
 "SCL32-BL02:CM03-TT8207:TempR.HIGH",
 "SCL32-BL02:CM04-TT8207:TempR.HIGH",
 "SCL32-BL02:CM05-TT8207:TempR.HIGH",
 "SCL32-BL02:CM06-TT8207:TempR.HIGH",
 "SCL32-BL02:CM07-TT8207:TempR.HIGH",
 "SCL32-BL02:CM08-TT8207:TempR.HIGH",
 "SCL32-BL02:CM09-TT8207:TempR.HIGH",
 "SCL32-BL02:CM10-TT8207:TempR.HIGH",
 "SCL32-BL02:CM11-TT8207:TempR.HIGH",
 "SCL32-BL02:CM12-TT8207:TempR.HIGH",
 "SCL32-BL02:CM13-TT8207:TempR.HIGH",
 "SCL32-BL03:CM01-TT8207:TempR.HIGH",
 "SCL32-BL03:CM02-TT8207:TempR.HIGH",
 "SCL32-BL03:CM03-TT8207:TempR.HIGH",
 "SCL32-BL03:CM04-TT8207:TempR.HIGH",
 "SCL32-BL03:CM05-TT8207:TempR.HIGH",
 "SCL32-BL03:CM06-TT8207:TempR.HIGH",
 "SCL32-BL03:CM07-TT8207:TempR.HIGH",
 "SCL32-BL03:CM08-TT8207:TempR.HIGH",
 "SCL32-BL03:CM09-TT8207:TempR.HIGH",
 "SCL32-BL03:CM10-TT8207:TempR.HIGH",
 "SCL32-BL03:CM11-TT8207:TempR.HIGH",
 "SCL32-BL03:CM12-TT8207:TempR.HIGH",
 "SCL32-BL03:CM13-TT8207:TempR.HIGH",
 "SCL32-BL03:CM14-TT8207:TempR.HIGH",
 "SCL32-BL03:CM15-TT8207:TempR.HIGH",
 "SCL32-BL03:CM16-TT8207:TempR.HIGH",
 "SCL32-BL03:CM17-TT8207:TempR.HIGH",
 "SCL32-BL03:CM18-TT8207:TempR.HIGH",
 "SCL32-BL03:CM19-TT8207:TempR.HIGH"

};
float	HCMTT8207HIGH;
assign	HCMTT8207HIGH to "{GrpHCMTT8207}.HIGH";
monitor HCMTT8207HIGH;
evflag  evHCMTT8207HIGH;
sync 	HCMTT8207HIGH evHCMTT8207HIGH;

float HCMTT8208HIGHArray[32];
assign HCMTT8208HIGHArray to {
 "SCL32-BL02:CM01-TT8208:TempR.HIGH",
 "SCL32-BL02:CM02-TT8208:TempR.HIGH",
 "SCL32-BL02:CM03-TT8208:TempR.HIGH",
 "SCL32-BL02:CM04-TT8208:TempR.HIGH",
 "SCL32-BL02:CM05-TT8208:TempR.HIGH",
 "SCL32-BL02:CM06-TT8208:TempR.HIGH",
 "SCL32-BL02:CM07-TT8208:TempR.HIGH",
 "SCL32-BL02:CM08-TT8208:TempR.HIGH",
 "SCL32-BL02:CM09-TT8208:TempR.HIGH",
 "SCL32-BL02:CM10-TT8208:TempR.HIGH",
 "SCL32-BL02:CM11-TT8208:TempR.HIGH",
 "SCL32-BL02:CM12-TT8208:TempR.HIGH",
 "SCL32-BL02:CM13-TT8208:TempR.HIGH",
 "SCL32-BL03:CM01-TT8208:TempR.HIGH",
 "SCL32-BL03:CM02-TT8208:TempR.HIGH",
 "SCL32-BL03:CM03-TT8208:TempR.HIGH",
 "SCL32-BL03:CM04-TT8208:TempR.HIGH",
 "SCL32-BL03:CM05-TT8208:TempR.HIGH",
 "SCL32-BL03:CM06-TT8208:TempR.HIGH",
 "SCL32-BL03:CM07-TT8208:TempR.HIGH",
 "SCL32-BL03:CM08-TT8208:TempR.HIGH",
 "SCL32-BL03:CM09-TT8208:TempR.HIGH",
 "SCL32-BL03:CM10-TT8208:TempR.HIGH",
 "SCL32-BL03:CM11-TT8208:TempR.HIGH",
 "SCL32-BL03:CM12-TT8208:TempR.HIGH",
 "SCL32-BL03:CM13-TT8208:TempR.HIGH",
 "SCL32-BL03:CM14-TT8208:TempR.HIGH",
 "SCL32-BL03:CM15-TT8208:TempR.HIGH",
 "SCL32-BL03:CM16-TT8208:TempR.HIGH",
 "SCL32-BL03:CM17-TT8208:TempR.HIGH",
 "SCL32-BL03:CM18-TT8208:TempR.HIGH",
 "SCL32-BL03:CM19-TT8208:TempR.HIGH"

};
float	HCMTT8208HIGH;
assign	HCMTT8208HIGH to "{GrpHCMTT8208}.HIGH";
monitor HCMTT8208HIGH;
evflag  evHCMTT8208HIGH;
sync 	HCMTT8208HIGH evHCMTT8208HIGH;

float HCMLT8401HIGHArray[32];
assign HCMLT8401HIGHArray to {
 "SCL32-BL02:CM01-LT8401:PercR.HIGH",
 "SCL32-BL02:CM02-LT8401:PercR.HIGH",
 "SCL32-BL02:CM03-LT8401:PercR.HIGH",
 "SCL32-BL02:CM04-LT8401:PercR.HIGH",
 "SCL32-BL02:CM05-LT8401:PercR.HIGH",
 "SCL32-BL02:CM06-LT8401:PercR.HIGH",
 "SCL32-BL02:CM07-LT8401:PercR.HIGH",
 "SCL32-BL02:CM08-LT8401:PercR.HIGH",
 "SCL32-BL02:CM09-LT8401:PercR.HIGH",
 "SCL32-BL02:CM10-LT8401:PercR.HIGH",
 "SCL32-BL02:CM11-LT8401:PercR.HIGH",
 "SCL32-BL02:CM12-LT8401:PercR.HIGH",
 "SCL32-BL02:CM13-LT8401:PercR.HIGH",
 "SCL32-BL03:CM01-LT8401:PercR.HIGH",
 "SCL32-BL03:CM02-LT8401:PercR.HIGH",
 "SCL32-BL03:CM03-LT8401:PercR.HIGH",
 "SCL32-BL03:CM04-LT8401:PercR.HIGH",
 "SCL32-BL03:CM05-LT8401:PercR.HIGH",
 "SCL32-BL03:CM06-LT8401:PercR.HIGH",
 "SCL32-BL03:CM07-LT8401:PercR.HIGH",
 "SCL32-BL03:CM08-LT8401:PercR.HIGH",
 "SCL32-BL03:CM09-LT8401:PercR.HIGH",
 "SCL32-BL03:CM10-LT8401:PercR.HIGH",
 "SCL32-BL03:CM11-LT8401:PercR.HIGH",
 "SCL32-BL03:CM12-LT8401:PercR.HIGH",
 "SCL32-BL03:CM13-LT8401:PercR.HIGH",
 "SCL32-BL03:CM14-LT8401:PercR.HIGH",
 "SCL32-BL03:CM15-LT8401:PercR.HIGH",
 "SCL32-BL03:CM16-LT8401:PercR.HIGH",
 "SCL32-BL03:CM17-LT8401:PercR.HIGH",
 "SCL32-BL03:CM18-LT8401:PercR.HIGH",
 "SCL32-BL03:CM19-LT8401:PercR.HIGH"

};
float	HCMLT8401HIGH;
assign	HCMLT8401HIGH to "{GrpHCMLT8401}.HIGH";
monitor HCMLT8401HIGH;
evflag  evHCMLT8401HIGH;
sync 	HCMLT8401HIGH evHCMLT8401HIGH;

float HCMLT8201HIGHArray[32];
assign HCMLT8201HIGHArray to {
 "SCL32-BL02:CM01-LT8201:PercR.HIGH",
 "SCL32-BL02:CM02-LT8201:PercR.HIGH",
 "SCL32-BL02:CM03-LT8201:PercR.HIGH",
 "SCL32-BL02:CM04-LT8201:PercR.HIGH",
 "SCL32-BL02:CM05-LT8201:PercR.HIGH",
 "SCL32-BL02:CM06-LT8201:PercR.HIGH",
 "SCL32-BL02:CM07-LT8201:PercR.HIGH",
 "SCL32-BL02:CM08-LT8201:PercR.HIGH",
 "SCL32-BL02:CM09-LT8201:PercR.HIGH",
 "SCL32-BL02:CM10-LT8201:PercR.HIGH",
 "SCL32-BL02:CM11-LT8201:PercR.HIGH",
 "SCL32-BL02:CM12-LT8201:PercR.HIGH",
 "SCL32-BL02:CM13-LT8201:PercR.HIGH",
 "SCL32-BL03:CM01-LT8201:PercR.HIGH",
 "SCL32-BL03:CM02-LT8201:PercR.HIGH",
 "SCL32-BL03:CM03-LT8201:PercR.HIGH",
 "SCL32-BL03:CM04-LT8201:PercR.HIGH",
 "SCL32-BL03:CM05-LT8201:PercR.HIGH",
 "SCL32-BL03:CM06-LT8201:PercR.HIGH",
 "SCL32-BL03:CM07-LT8201:PercR.HIGH",
 "SCL32-BL03:CM08-LT8201:PercR.HIGH",
 "SCL32-BL03:CM09-LT8201:PercR.HIGH",
 "SCL32-BL03:CM10-LT8201:PercR.HIGH",
 "SCL32-BL03:CM11-LT8201:PercR.HIGH",
 "SCL32-BL03:CM12-LT8201:PercR.HIGH",
 "SCL32-BL03:CM13-LT8201:PercR.HIGH",
 "SCL32-BL03:CM14-LT8201:PercR.HIGH",
 "SCL32-BL03:CM15-LT8201:PercR.HIGH",
 "SCL32-BL03:CM16-LT8201:PercR.HIGH",
 "SCL32-BL03:CM17-LT8201:PercR.HIGH",
 "SCL32-BL03:CM18-LT8201:PercR.HIGH",
 "SCL32-BL03:CM19-LT8201:PercR.HIGH"

};
float	HCMLT8201HIGH;
assign	HCMLT8201HIGH to "{GrpHCMLT8201}.HIGH";
monitor HCMLT8201HIGH;
evflag  evHCMLT8201HIGH;
sync 	HCMLT8201HIGH evHCMLT8201HIGH;

float HCMTT8603HIGHArray[32];
assign HCMTT8603HIGHArray to {
 "SCL32-BL02:CM01-TT8603:TempR.HIGH",
 "SCL32-BL02:CM02-TT8603:TempR.HIGH",
 "SCL32-BL02:CM03-TT8603:TempR.HIGH",
 "SCL32-BL02:CM04-TT8603:TempR.HIGH",
 "SCL32-BL02:CM05-TT8603:TempR.HIGH",
 "SCL32-BL02:CM06-TT8603:TempR.HIGH",
 "SCL32-BL02:CM07-TT8603:TempR.HIGH",
 "SCL32-BL02:CM08-TT8603:TempR.HIGH",
 "SCL32-BL02:CM09-TT8603:TempR.HIGH",
 "SCL32-BL02:CM10-TT8603:TempR.HIGH",
 "SCL32-BL02:CM11-TT8603:TempR.HIGH",
 "SCL32-BL02:CM12-TT8603:TempR.HIGH",
 "SCL32-BL02:CM13-TT8603:TempR.HIGH",
 "SCL32-BL03:CM01-TT8603:TempR.HIGH",
 "SCL32-BL03:CM02-TT8603:TempR.HIGH",
 "SCL32-BL03:CM03-TT8603:TempR.HIGH",
 "SCL32-BL03:CM04-TT8603:TempR.HIGH",
 "SCL32-BL03:CM05-TT8603:TempR.HIGH",
 "SCL32-BL03:CM06-TT8603:TempR.HIGH",
 "SCL32-BL03:CM07-TT8603:TempR.HIGH",
 "SCL32-BL03:CM08-TT8603:TempR.HIGH",
 "SCL32-BL03:CM09-TT8603:TempR.HIGH",
 "SCL32-BL03:CM10-TT8603:TempR.HIGH",
 "SCL32-BL03:CM11-TT8603:TempR.HIGH",
 "SCL32-BL03:CM12-TT8603:TempR.HIGH",
 "SCL32-BL03:CM13-TT8603:TempR.HIGH",
 "SCL32-BL03:CM14-TT8603:TempR.HIGH",
 "SCL32-BL03:CM15-TT8603:TempR.HIGH",
 "SCL32-BL03:CM16-TT8603:TempR.HIGH",
 "SCL32-BL03:CM17-TT8603:TempR.HIGH",
 "SCL32-BL03:CM18-TT8603:TempR.HIGH",
 "SCL32-BL03:CM19-TT8603:TempR.HIGH"

};
float	HCMTT8603HIGH;
assign	HCMTT8603HIGH to "{GrpHCMTT8603}.HIGH";
monitor HCMTT8603HIGH;
evflag  evHCMTT8603HIGH;
sync 	HCMTT8603HIGH evHCMTT8603HIGH;

float HCMTT8604HIGHArray[32];
assign HCMTT8604HIGHArray to {
 "SCL32-BL02:CM01-TT8604:TempR.HIGH",
 "SCL32-BL02:CM02-TT8604:TempR.HIGH",
 "SCL32-BL02:CM03-TT8604:TempR.HIGH",
 "SCL32-BL02:CM04-TT8604:TempR.HIGH",
 "SCL32-BL02:CM05-TT8604:TempR.HIGH",
 "SCL32-BL02:CM06-TT8604:TempR.HIGH",
 "SCL32-BL02:CM07-TT8604:TempR.HIGH",
 "SCL32-BL02:CM08-TT8604:TempR.HIGH",
 "SCL32-BL02:CM09-TT8604:TempR.HIGH",
 "SCL32-BL02:CM10-TT8604:TempR.HIGH",
 "SCL32-BL02:CM11-TT8604:TempR.HIGH",
 "SCL32-BL02:CM12-TT8604:TempR.HIGH",
 "SCL32-BL02:CM13-TT8604:TempR.HIGH",
 "SCL32-BL03:CM01-TT8604:TempR.HIGH",
 "SCL32-BL03:CM02-TT8604:TempR.HIGH",
 "SCL32-BL03:CM03-TT8604:TempR.HIGH",
 "SCL32-BL03:CM04-TT8604:TempR.HIGH",
 "SCL32-BL03:CM05-TT8604:TempR.HIGH",
 "SCL32-BL03:CM06-TT8604:TempR.HIGH",
 "SCL32-BL03:CM07-TT8604:TempR.HIGH",
 "SCL32-BL03:CM08-TT8604:TempR.HIGH",
 "SCL32-BL03:CM09-TT8604:TempR.HIGH",
 "SCL32-BL03:CM10-TT8604:TempR.HIGH",
 "SCL32-BL03:CM11-TT8604:TempR.HIGH",
 "SCL32-BL03:CM12-TT8604:TempR.HIGH",
 "SCL32-BL03:CM13-TT8604:TempR.HIGH",
 "SCL32-BL03:CM14-TT8604:TempR.HIGH",
 "SCL32-BL03:CM15-TT8604:TempR.HIGH",
 "SCL32-BL03:CM16-TT8604:TempR.HIGH",
 "SCL32-BL03:CM17-TT8604:TempR.HIGH",
 "SCL32-BL03:CM18-TT8604:TempR.HIGH",
 "SCL32-BL03:CM19-TT8604:TempR.HIGH"

};
float	HCMTT8604HIGH;
assign	HCMTT8604HIGH to "{GrpHCMTT8604}.HIGH";
monitor HCMTT8604HIGH;
evflag  evHCMTT8604HIGH;
sync 	HCMTT8604HIGH evHCMTT8604HIGH;

float HCMTT8209HIGHArray[19];
assign HCMTT8209HIGHArray to {
 "SCL32-BL03:CM01-TT8209:TempR.HIGH",
 "SCL32-BL03:CM02-TT8209:TempR.HIGH",
 "SCL32-BL03:CM03-TT8209:TempR.HIGH",
 "SCL32-BL03:CM04-TT8209:TempR.HIGH",
 "SCL32-BL03:CM05-TT8209:TempR.HIGH",
 "SCL32-BL03:CM06-TT8209:TempR.HIGH",
 "SCL32-BL03:CM07-TT8209:TempR.HIGH",
 "SCL32-BL03:CM08-TT8209:TempR.HIGH",
 "SCL32-BL03:CM09-TT8209:TempR.HIGH",
 "SCL32-BL03:CM10-TT8209:TempR.HIGH",
 "SCL32-BL03:CM11-TT8209:TempR.HIGH",
 "SCL32-BL03:CM12-TT8209:TempR.HIGH",
 "SCL32-BL03:CM13-TT8209:TempR.HIGH",
 "SCL32-BL03:CM14-TT8209:TempR.HIGH",
 "SCL32-BL03:CM15-TT8209:TempR.HIGH",
 "SCL32-BL03:CM16-TT8209:TempR.HIGH",
 "SCL32-BL03:CM17-TT8209:TempR.HIGH",
 "SCL32-BL03:CM18-TT8209:TempR.HIGH",
 "SCL32-BL03:CM19-TT8209:TempR.HIGH"

};
float	HCMTT8209HIGH;
assign	HCMTT8209HIGH to "{GrpHCMTT8209}.HIGH";
monitor HCMTT8209HIGH;
evflag  evHCMTT8209HIGH;
sync 	HCMTT8209HIGH evHCMTT8209HIGH;

float HCMTT8210HIGHArray[19];
assign HCMTT8210HIGHArray to {
 "SCL32-BL03:CM01-TT8210:TempR.HIGH",
 "SCL32-BL03:CM02-TT8210:TempR.HIGH",
 "SCL32-BL03:CM03-TT8210:TempR.HIGH",
 "SCL32-BL03:CM04-TT8210:TempR.HIGH",
 "SCL32-BL03:CM05-TT8210:TempR.HIGH",
 "SCL32-BL03:CM06-TT8210:TempR.HIGH",
 "SCL32-BL03:CM07-TT8210:TempR.HIGH",
 "SCL32-BL03:CM08-TT8210:TempR.HIGH",
 "SCL32-BL03:CM09-TT8210:TempR.HIGH",
 "SCL32-BL03:CM10-TT8210:TempR.HIGH",
 "SCL32-BL03:CM11-TT8210:TempR.HIGH",
 "SCL32-BL03:CM12-TT8210:TempR.HIGH",
 "SCL32-BL03:CM13-TT8210:TempR.HIGH",
 "SCL32-BL03:CM14-TT8210:TempR.HIGH",
 "SCL32-BL03:CM15-TT8210:TempR.HIGH",
 "SCL32-BL03:CM16-TT8210:TempR.HIGH",
 "SCL32-BL03:CM17-TT8210:TempR.HIGH",
 "SCL32-BL03:CM18-TT8210:TempR.HIGH",
 "SCL32-BL03:CM19-TT8210:TempR.HIGH"

};
float	HCMTT8210HIGH;
assign	HCMTT8210HIGH to "{GrpHCMTT8210}.HIGH";
monitor HCMTT8210HIGH;
evflag  evHCMTT8210HIGH;
sync 	HCMTT8210HIGH evHCMTT8210HIGH;

float HCMTT8211HIGHArray[19];
assign HCMTT8211HIGHArray to {
 "SCL32-BL03:CM01-TT8211:TempR.HIGH",
 "SCL32-BL03:CM02-TT8211:TempR.HIGH",
 "SCL32-BL03:CM03-TT8211:TempR.HIGH",
 "SCL32-BL03:CM04-TT8211:TempR.HIGH",
 "SCL32-BL03:CM05-TT8211:TempR.HIGH",
 "SCL32-BL03:CM06-TT8211:TempR.HIGH",
 "SCL32-BL03:CM07-TT8211:TempR.HIGH",
 "SCL32-BL03:CM08-TT8211:TempR.HIGH",
 "SCL32-BL03:CM09-TT8211:TempR.HIGH",
 "SCL32-BL03:CM10-TT8211:TempR.HIGH",
 "SCL32-BL03:CM11-TT8211:TempR.HIGH",
 "SCL32-BL03:CM12-TT8211:TempR.HIGH",
 "SCL32-BL03:CM13-TT8211:TempR.HIGH",
 "SCL32-BL03:CM14-TT8211:TempR.HIGH",
 "SCL32-BL03:CM15-TT8211:TempR.HIGH",
 "SCL32-BL03:CM16-TT8211:TempR.HIGH",
 "SCL32-BL03:CM17-TT8211:TempR.HIGH",
 "SCL32-BL03:CM18-TT8211:TempR.HIGH",
 "SCL32-BL03:CM19-TT8211:TempR.HIGH"

};
float	HCMTT8211HIGH;
assign	HCMTT8211HIGH to "{GrpHCMTT8211}.HIGH";
monitor HCMTT8211HIGH;
evflag  evHCMTT8211HIGH;
sync 	HCMTT8211HIGH evHCMTT8211HIGH;

float HCMTT8212HIGHArray[19];
assign HCMTT8212HIGHArray to {
 "SCL32-BL03:CM01-TT8212:TempR.HIGH",
 "SCL32-BL03:CM02-TT8212:TempR.HIGH",
 "SCL32-BL03:CM03-TT8212:TempR.HIGH",
 "SCL32-BL03:CM04-TT8212:TempR.HIGH",
 "SCL32-BL03:CM05-TT8212:TempR.HIGH",
 "SCL32-BL03:CM06-TT8212:TempR.HIGH",
 "SCL32-BL03:CM07-TT8212:TempR.HIGH",
 "SCL32-BL03:CM08-TT8212:TempR.HIGH",
 "SCL32-BL03:CM09-TT8212:TempR.HIGH",
 "SCL32-BL03:CM10-TT8212:TempR.HIGH",
 "SCL32-BL03:CM11-TT8212:TempR.HIGH",
 "SCL32-BL03:CM12-TT8212:TempR.HIGH",
 "SCL32-BL03:CM13-TT8212:TempR.HIGH",
 "SCL32-BL03:CM14-TT8212:TempR.HIGH",
 "SCL32-BL03:CM15-TT8212:TempR.HIGH",
 "SCL32-BL03:CM16-TT8212:TempR.HIGH",
 "SCL32-BL03:CM17-TT8212:TempR.HIGH",
 "SCL32-BL03:CM18-TT8212:TempR.HIGH",
 "SCL32-BL03:CM19-TT8212:TempR.HIGH"

};
float	HCMTT8212HIGH;
assign	HCMTT8212HIGH to "{GrpHCMTT8212}.HIGH";
monitor HCMTT8212HIGH;
evflag  evHCMTT8212HIGH;
sync 	HCMTT8212HIGH evHCMTT8212HIGH;

float HCMTT8213HIGHArray[19];
assign HCMTT8213HIGHArray to {
 "SCL32-BL03:CM01-TT8213:TempR.HIGH",
 "SCL32-BL03:CM02-TT8213:TempR.HIGH",
 "SCL32-BL03:CM03-TT8213:TempR.HIGH",
 "SCL32-BL03:CM04-TT8213:TempR.HIGH",
 "SCL32-BL03:CM05-TT8213:TempR.HIGH",
 "SCL32-BL03:CM06-TT8213:TempR.HIGH",
 "SCL32-BL03:CM07-TT8213:TempR.HIGH",
 "SCL32-BL03:CM08-TT8213:TempR.HIGH",
 "SCL32-BL03:CM09-TT8213:TempR.HIGH",
 "SCL32-BL03:CM10-TT8213:TempR.HIGH",
 "SCL32-BL03:CM11-TT8213:TempR.HIGH",
 "SCL32-BL03:CM12-TT8213:TempR.HIGH",
 "SCL32-BL03:CM13-TT8213:TempR.HIGH",
 "SCL32-BL03:CM14-TT8213:TempR.HIGH",
 "SCL32-BL03:CM15-TT8213:TempR.HIGH",
 "SCL32-BL03:CM16-TT8213:TempR.HIGH",
 "SCL32-BL03:CM17-TT8213:TempR.HIGH",
 "SCL32-BL03:CM18-TT8213:TempR.HIGH",
 "SCL32-BL03:CM19-TT8213:TempR.HIGH"

};
float	HCMTT8213HIGH;
assign	HCMTT8213HIGH to "{GrpHCMTT8213}.HIGH";
monitor HCMTT8213HIGH;
evflag  evHCMTT8213HIGH;
sync 	HCMTT8213HIGH evHCMTT8213HIGH;

float HCMTT8214HIGHArray[19];
assign HCMTT8214HIGHArray to {
 "SCL32-BL03:CM01-TT8214:TempR.HIGH",
 "SCL32-BL03:CM02-TT8214:TempR.HIGH",
 "SCL32-BL03:CM03-TT8214:TempR.HIGH",
 "SCL32-BL03:CM04-TT8214:TempR.HIGH",
 "SCL32-BL03:CM05-TT8214:TempR.HIGH",
 "SCL32-BL03:CM06-TT8214:TempR.HIGH",
 "SCL32-BL03:CM07-TT8214:TempR.HIGH",
 "SCL32-BL03:CM08-TT8214:TempR.HIGH",
 "SCL32-BL03:CM09-TT8214:TempR.HIGH",
 "SCL32-BL03:CM10-TT8214:TempR.HIGH",
 "SCL32-BL03:CM11-TT8214:TempR.HIGH",
 "SCL32-BL03:CM12-TT8214:TempR.HIGH",
 "SCL32-BL03:CM13-TT8214:TempR.HIGH",
 "SCL32-BL03:CM14-TT8214:TempR.HIGH",
 "SCL32-BL03:CM15-TT8214:TempR.HIGH",
 "SCL32-BL03:CM16-TT8214:TempR.HIGH",
 "SCL32-BL03:CM17-TT8214:TempR.HIGH",
 "SCL32-BL03:CM18-TT8214:TempR.HIGH",
 "SCL32-BL03:CM19-TT8214:TempR.HIGH"

};
float	HCMTT8214HIGH;
assign	HCMTT8214HIGH to "{GrpHCMTT8214}.HIGH";
monitor HCMTT8214HIGH;
evflag  evHCMTT8214HIGH;
sync 	HCMTT8214HIGH evHCMTT8214HIGH;

float HCMEH8401VHIGHArray[32];
assign HCMEH8401VHIGHArray to {
 "SCL32-BL02:CM01-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM02-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM03-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM04-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM05-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM06-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM07-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM08-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM09-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM10-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM11-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM12-EH8401:VoltR.HIGH",
 "SCL32-BL02:CM13-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM01-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM02-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM03-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM04-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM05-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM06-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM07-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM08-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM09-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM10-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM11-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM12-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM13-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM14-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM15-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM16-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM17-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM18-EH8401:VoltR.HIGH",
 "SCL32-BL03:CM19-EH8401:VoltR.HIGH"

};
float	HCMEH8401VHIGH;
assign	HCMEH8401VHIGH to "{GrpHCMEH8401V}.HIGH";
monitor HCMEH8401VHIGH;
evflag  evHCMEH8401VHIGH;
sync 	HCMEH8401VHIGH evHCMEH8401VHIGH;

float HCMEH8401WHIGHArray[32];
assign HCMEH8401WHIGHArray to {
 "SCL32-BL02:CM01-EH8401:WattR.HIGH",
 "SCL32-BL02:CM02-EH8401:WattR.HIGH",
 "SCL32-BL02:CM03-EH8401:WattR.HIGH",
 "SCL32-BL02:CM04-EH8401:WattR.HIGH",
 "SCL32-BL02:CM05-EH8401:WattR.HIGH",
 "SCL32-BL02:CM06-EH8401:WattR.HIGH",
 "SCL32-BL02:CM07-EH8401:WattR.HIGH",
 "SCL32-BL02:CM08-EH8401:WattR.HIGH",
 "SCL32-BL02:CM09-EH8401:WattR.HIGH",
 "SCL32-BL02:CM10-EH8401:WattR.HIGH",
 "SCL32-BL02:CM11-EH8401:WattR.HIGH",
 "SCL32-BL02:CM12-EH8401:WattR.HIGH",
 "SCL32-BL02:CM13-EH8401:WattR.HIGH",
 "SCL32-BL03:CM01-EH8401:WattR.HIGH",
 "SCL32-BL03:CM02-EH8401:WattR.HIGH",
 "SCL32-BL03:CM03-EH8401:WattR.HIGH",
 "SCL32-BL03:CM04-EH8401:WattR.HIGH",
 "SCL32-BL03:CM05-EH8401:WattR.HIGH",
 "SCL32-BL03:CM06-EH8401:WattR.HIGH",
 "SCL32-BL03:CM07-EH8401:WattR.HIGH",
 "SCL32-BL03:CM08-EH8401:WattR.HIGH",
 "SCL32-BL03:CM09-EH8401:WattR.HIGH",
 "SCL32-BL03:CM10-EH8401:WattR.HIGH",
 "SCL32-BL03:CM11-EH8401:WattR.HIGH",
 "SCL32-BL03:CM12-EH8401:WattR.HIGH",
 "SCL32-BL03:CM13-EH8401:WattR.HIGH",
 "SCL32-BL03:CM14-EH8401:WattR.HIGH",
 "SCL32-BL03:CM15-EH8401:WattR.HIGH",
 "SCL32-BL03:CM16-EH8401:WattR.HIGH",
 "SCL32-BL03:CM17-EH8401:WattR.HIGH",
 "SCL32-BL03:CM18-EH8401:WattR.HIGH",
 "SCL32-BL03:CM19-EH8401:WattR.HIGH"

};
float	HCMEH8401WHIGH;
assign	HCMEH8401WHIGH to "{GrpHCMEH8401W}.HIGH";
monitor HCMEH8401WHIGH;
evflag  evHCMEH8401WHIGH;
sync 	HCMEH8401WHIGH evHCMEH8401WHIGH;

float HCMEH8402VHIGHArray[32];
assign HCMEH8402VHIGHArray to {
 "SCL32-BL02:CM01-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM02-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM03-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM04-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM05-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM06-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM07-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM08-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM09-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM10-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM11-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM12-EH8402:VoltR.HIGH",
 "SCL32-BL02:CM13-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM01-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM02-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM03-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM04-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM05-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM06-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM07-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM08-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM09-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM10-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM11-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM12-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM13-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM14-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM15-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM16-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM17-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM18-EH8402:VoltR.HIGH",
 "SCL32-BL03:CM19-EH8402:VoltR.HIGH"

};
float	HCMEH8402VHIGH;
assign	HCMEH8402VHIGH to "{GrpHCMEH8402V}.HIGH";
monitor HCMEH8402VHIGH;
evflag  evHCMEH8402VHIGH;
sync 	HCMEH8402VHIGH evHCMEH8402VHIGH;

float HCMEH8402WHIGHArray[32];
assign HCMEH8402WHIGHArray to {
 "SCL32-BL02:CM01-EH8402:WattR.HIGH",
 "SCL32-BL02:CM02-EH8402:WattR.HIGH",
 "SCL32-BL02:CM03-EH8402:WattR.HIGH",
 "SCL32-BL02:CM04-EH8402:WattR.HIGH",
 "SCL32-BL02:CM05-EH8402:WattR.HIGH",
 "SCL32-BL02:CM06-EH8402:WattR.HIGH",
 "SCL32-BL02:CM07-EH8402:WattR.HIGH",
 "SCL32-BL02:CM08-EH8402:WattR.HIGH",
 "SCL32-BL02:CM09-EH8402:WattR.HIGH",
 "SCL32-BL02:CM10-EH8402:WattR.HIGH",
 "SCL32-BL02:CM11-EH8402:WattR.HIGH",
 "SCL32-BL02:CM12-EH8402:WattR.HIGH",
 "SCL32-BL02:CM13-EH8402:WattR.HIGH",
 "SCL32-BL03:CM01-EH8402:WattR.HIGH",
 "SCL32-BL03:CM02-EH8402:WattR.HIGH",
 "SCL32-BL03:CM03-EH8402:WattR.HIGH",
 "SCL32-BL03:CM04-EH8402:WattR.HIGH",
 "SCL32-BL03:CM05-EH8402:WattR.HIGH",
 "SCL32-BL03:CM06-EH8402:WattR.HIGH",
 "SCL32-BL03:CM07-EH8402:WattR.HIGH",
 "SCL32-BL03:CM08-EH8402:WattR.HIGH",
 "SCL32-BL03:CM09-EH8402:WattR.HIGH",
 "SCL32-BL03:CM10-EH8402:WattR.HIGH",
 "SCL32-BL03:CM11-EH8402:WattR.HIGH",
 "SCL32-BL03:CM12-EH8402:WattR.HIGH",
 "SCL32-BL03:CM13-EH8402:WattR.HIGH",
 "SCL32-BL03:CM14-EH8402:WattR.HIGH",
 "SCL32-BL03:CM15-EH8402:WattR.HIGH",
 "SCL32-BL03:CM16-EH8402:WattR.HIGH",
 "SCL32-BL03:CM17-EH8402:WattR.HIGH",
 "SCL32-BL03:CM18-EH8402:WattR.HIGH",
 "SCL32-BL03:CM19-EH8402:WattR.HIGH"

};
float	HCMEH8402WHIGH;
assign	HCMEH8402WHIGH to "{GrpHCMEH8402W}.HIGH";
monitor HCMEH8402WHIGH;
evflag  evHCMEH8402WHIGH;
sync 	HCMEH8402WHIGH evHCMEH8402WHIGH;

float HCMEH8201VHIGHArray[32];
assign HCMEH8201VHIGHArray to {
 "SCL32-BL02:CM01-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM02-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM03-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM04-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM05-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM06-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM07-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM08-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM09-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM10-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM11-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM12-EH8201:VoltR.HIGH",
 "SCL32-BL02:CM13-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM01-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM02-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM03-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM04-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM05-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM06-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM07-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM08-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM09-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM10-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM11-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM12-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM13-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM14-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM15-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM16-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM17-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM18-EH8201:VoltR.HIGH",
 "SCL32-BL03:CM19-EH8201:VoltR.HIGH"

};
float	HCMEH8201VHIGH;
assign	HCMEH8201VHIGH to "{GrpHCMEH8201V}.HIGH";
monitor HCMEH8201VHIGH;
evflag  evHCMEH8201VHIGH;
sync 	HCMEH8201VHIGH evHCMEH8201VHIGH;

float HCMEH8201WHIGHArray[32];
assign HCMEH8201WHIGHArray to {
 "SCL32-BL02:CM01-EH8201:WattR.HIGH",
 "SCL32-BL02:CM02-EH8201:WattR.HIGH",
 "SCL32-BL02:CM03-EH8201:WattR.HIGH",
 "SCL32-BL02:CM04-EH8201:WattR.HIGH",
 "SCL32-BL02:CM05-EH8201:WattR.HIGH",
 "SCL32-BL02:CM06-EH8201:WattR.HIGH",
 "SCL32-BL02:CM07-EH8201:WattR.HIGH",
 "SCL32-BL02:CM08-EH8201:WattR.HIGH",
 "SCL32-BL02:CM09-EH8201:WattR.HIGH",
 "SCL32-BL02:CM10-EH8201:WattR.HIGH",
 "SCL32-BL02:CM11-EH8201:WattR.HIGH",
 "SCL32-BL02:CM12-EH8201:WattR.HIGH",
 "SCL32-BL02:CM13-EH8201:WattR.HIGH",
 "SCL32-BL03:CM01-EH8201:WattR.HIGH",
 "SCL32-BL03:CM02-EH8201:WattR.HIGH",
 "SCL32-BL03:CM03-EH8201:WattR.HIGH",
 "SCL32-BL03:CM04-EH8201:WattR.HIGH",
 "SCL32-BL03:CM05-EH8201:WattR.HIGH",
 "SCL32-BL03:CM06-EH8201:WattR.HIGH",
 "SCL32-BL03:CM07-EH8201:WattR.HIGH",
 "SCL32-BL03:CM08-EH8201:WattR.HIGH",
 "SCL32-BL03:CM09-EH8201:WattR.HIGH",
 "SCL32-BL03:CM10-EH8201:WattR.HIGH",
 "SCL32-BL03:CM11-EH8201:WattR.HIGH",
 "SCL32-BL03:CM12-EH8201:WattR.HIGH",
 "SCL32-BL03:CM13-EH8201:WattR.HIGH",
 "SCL32-BL03:CM14-EH8201:WattR.HIGH",
 "SCL32-BL03:CM15-EH8201:WattR.HIGH",
 "SCL32-BL03:CM16-EH8201:WattR.HIGH",
 "SCL32-BL03:CM17-EH8201:WattR.HIGH",
 "SCL32-BL03:CM18-EH8201:WattR.HIGH",
 "SCL32-BL03:CM19-EH8201:WattR.HIGH"

};
float	HCMEH8201WHIGH;
assign	HCMEH8201WHIGH to "{GrpHCMEH8201W}.HIGH";
monitor HCMEH8201WHIGH;
evflag  evHCMEH8201WHIGH;
sync 	HCMEH8201WHIGH evHCMEH8201WHIGH;



float HVBxPT7501LOWArray[32];
assign HVBxPT7501LOWArray to {
 "SCL32-CDL02:VBx01-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7501:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7501:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7501:PresR.LOW"

};
float	HVBxPT7501LOW;
assign	HVBxPT7501LOW to "{GrpHVBxPT7501}.LOW";
monitor HVBxPT7501LOW;
evflag  evHVBxPT7501LOW;
sync 	HVBxPT7501LOW evHVBxPT7501LOW;

float HVBxPT7502LOWArray[32];
assign HVBxPT7502LOWArray to {
 "SCL32-CDL02:VBx01-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7502:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7502:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7502:PresR.LOW"

};
float	HVBxPT7502LOW;
assign	HVBxPT7502LOW to "{GrpHVBxPT7502}.LOW";
monitor HVBxPT7502LOW;
evflag  evHVBxPT7502LOW;
sync 	HVBxPT7502LOW evHVBxPT7502LOW;

float HVBxPT7503LOWArray[32];
assign HVBxPT7503LOWArray to {
 "SCL32-CDL02:VBx01-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7503:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7503:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7503:PresR.LOW"

};
float	HVBxPT7503LOW;
assign	HVBxPT7503LOW to "{GrpHVBxPT7503}.LOW";
monitor HVBxPT7503LOW;
evflag  evHVBxPT7503LOW;
sync 	HVBxPT7503LOW evHVBxPT7503LOW;

float HVBxPT7401LOWArray[32];
assign HVBxPT7401LOWArray to {
 "SCL32-CDL02:VBx01-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7401:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7401:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7401:PresR.LOW"

};
float	HVBxPT7401LOW;
assign	HVBxPT7401LOW to "{GrpHVBxPT7401}.LOW";
monitor HVBxPT7401LOW;
evflag  evHVBxPT7401LOW;
sync 	HVBxPT7401LOW evHVBxPT7401LOW;

float HVBxPT7301LOWArray[32];
assign HVBxPT7301LOWArray to {
 "SCL32-CDL02:VBx01-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7301:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7301:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7301:PresR.LOW"

};
float	HVBxPT7301LOW;
assign	HVBxPT7301LOW to "{GrpHVBxPT7301}.LOW";
monitor HVBxPT7301LOW;
evflag  evHVBxPT7301LOW;
sync 	HVBxPT7301LOW evHVBxPT7301LOW;

float HVBxPT7201LOWArray[32];
assign HVBxPT7201LOWArray to {
 "SCL32-CDL02:VBx01-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7201:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7201:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7201:PresR.LOW"

};
float	HVBxPT7201LOW;
assign	HVBxPT7201LOW to "{GrpHVBxPT7201}.LOW";
monitor HVBxPT7201LOW;
evflag  evHVBxPT7201LOW;
sync 	HVBxPT7201LOW evHVBxPT7201LOW;

float HVBxPT7102LOWArray[5];
assign HVBxPT7102LOWArray to {
 "SCL32-CDL02:VBx04-PT7102:VacuumR.LOW",
 "SCL32-CDL02:VBx09-PT7102:VacuumR.LOW",
 "SCL32-CDL03:VBx04-PT7102:VacuumR.LOW",
 "SCL32-CDL03:VBx09-PT7102:VacuumR.LOW",
 "SCL32-CDL03:VBx18-PT7102:VacuumR.LOW"

};
float	HVBxPT7102LOW;
assign	HVBxPT7102LOW to "{GrpHVBxPT7102}.LOW";
monitor HVBxPT7102LOW;
evflag  evHVBxPT7102LOW;
sync 	HVBxPT7102LOW evHVBxPT7102LOW;

float HVBxPT7202LOWArray[32];
assign HVBxPT7202LOWArray to {
 "SCL32-CDL02:VBx01-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7202:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7202:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7202:PresR.LOW"

};
float	HVBxPT7202LOW;
assign	HVBxPT7202LOW to "{GrpHVBxPT7202}.LOW";
monitor HVBxPT7202LOW;
evflag  evHVBxPT7202LOW;
sync 	HVBxPT7202LOW evHVBxPT7202LOW;

float HVBxPT7203LOWArray[32];
assign HVBxPT7203LOWArray to {
 "SCL32-CDL02:VBx01-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx02-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx03-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx04-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx05-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx06-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx07-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx08-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx09-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx10-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx11-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx12-PT7203:PresR.LOW",
 "SCL32-CDL02:VBx13-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx01-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx02-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx03-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx04-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx05-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx06-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx07-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx08-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx09-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx10-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx11-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx12-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx13-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx14-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx15-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx16-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx17-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx18-PT7203:PresR.LOW",
 "SCL32-CDL03:VBx19-PT7203:PresR.LOW"

};
float	HVBxPT7203LOW;
assign	HVBxPT7203LOW to "{GrpHVBxPT7203}.LOW";
monitor HVBxPT7203LOW;
evflag  evHVBxPT7203LOW;
sync 	HVBxPT7203LOW evHVBxPT7203LOW;

float HVBxTT7501LOWArray[32];
assign HVBxTT7501LOWArray to {
 "SCL32-CDL02:VBx01-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx02-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx03-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx04-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx05-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx06-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx07-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx08-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx09-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx10-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx11-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx12-TT7501:TempR.LOW",
 "SCL32-CDL02:VBx13-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx01-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx02-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx03-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx04-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx05-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx06-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx07-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx08-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx09-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx10-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx11-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx12-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx13-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx14-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx15-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx16-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx17-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx18-TT7501:TempR.LOW",
 "SCL32-CDL03:VBx19-TT7501:TempR.LOW"

};
float	HVBxTT7501LOW;
assign	HVBxTT7501LOW to "{GrpHVBxTT7501}.LOW";
monitor HVBxTT7501LOW;
evflag  evHVBxTT7501LOW;
sync 	HVBxTT7501LOW evHVBxTT7501LOW;

float HVBxTT7502LOWArray[32];
assign HVBxTT7502LOWArray to {
 "SCL32-CDL02:VBx01-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx02-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx03-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx04-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx05-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx06-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx07-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx08-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx09-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx10-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx11-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx12-TT7502:TempR.LOW",
 "SCL32-CDL02:VBx13-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx01-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx02-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx03-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx04-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx05-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx06-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx07-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx08-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx09-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx10-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx11-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx12-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx13-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx14-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx15-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx16-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx17-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx18-TT7502:TempR.LOW",
 "SCL32-CDL03:VBx19-TT7502:TempR.LOW"

};
float	HVBxTT7502LOW;
assign	HVBxTT7502LOW to "{GrpHVBxTT7502}.LOW";
monitor HVBxTT7502LOW;
evflag  evHVBxTT7502LOW;
sync 	HVBxTT7502LOW evHVBxTT7502LOW;

float HVBxTT7503LOWArray[32];
assign HVBxTT7503LOWArray to {
 "SCL32-CDL02:VBx01-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx02-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx03-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx04-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx05-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx06-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx07-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx08-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx09-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx10-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx11-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx12-TT7503:TempR.LOW",
 "SCL32-CDL02:VBx13-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx01-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx02-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx03-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx04-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx05-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx06-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx07-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx08-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx09-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx10-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx11-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx12-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx13-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx14-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx15-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx16-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx17-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx18-TT7503:TempR.LOW",
 "SCL32-CDL03:VBx19-TT7503:TempR.LOW"

};
float	HVBxTT7503LOW;
assign	HVBxTT7503LOW to "{GrpHVBxTT7503}.LOW";
monitor HVBxTT7503LOW;
evflag  evHVBxTT7503LOW;
sync 	HVBxTT7503LOW evHVBxTT7503LOW;

float HVBxTT7504LOWArray[32];
assign HVBxTT7504LOWArray to {
 "SCL32-CDL02:VBx01-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx02-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx03-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx04-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx05-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx06-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx07-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx08-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx09-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx10-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx11-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx12-TT7504:TempR.LOW",
 "SCL32-CDL02:VBx13-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx01-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx02-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx03-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx04-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx05-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx06-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx07-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx08-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx09-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx10-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx11-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx12-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx13-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx14-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx15-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx16-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx17-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx18-TT7504:TempR.LOW",
 "SCL32-CDL03:VBx19-TT7504:TempR.LOW"

};
float	HVBxTT7504LOW;
assign	HVBxTT7504LOW to "{GrpHVBxTT7504}.LOW";
monitor HVBxTT7504LOW;
evflag  evHVBxTT7504LOW;
sync 	HVBxTT7504LOW evHVBxTT7504LOW;

float HVBxTT7401LOWArray[32];
assign HVBxTT7401LOWArray to {
 "SCL32-CDL02:VBx01-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx02-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx03-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx04-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx05-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx06-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx07-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx08-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx09-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx10-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx11-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx12-TT7401:TempR.LOW",
 "SCL32-CDL02:VBx13-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx01-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx02-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx03-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx04-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx05-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx06-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx07-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx08-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx09-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx10-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx11-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx12-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx13-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx14-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx15-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx16-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx17-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx18-TT7401:TempR.LOW",
 "SCL32-CDL03:VBx19-TT7401:TempR.LOW"

};
float	HVBxTT7401LOW;
assign	HVBxTT7401LOW to "{GrpHVBxTT7401}.LOW";
monitor HVBxTT7401LOW;
evflag  evHVBxTT7401LOW;
sync 	HVBxTT7401LOW evHVBxTT7401LOW;

float HVBxTT7301LOWArray[32];
assign HVBxTT7301LOWArray to {
 "SCL32-CDL02:VBx01-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx02-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx03-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx04-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx05-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx06-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx07-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx08-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx09-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx10-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx11-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx12-TT7301:TempR.LOW",
 "SCL32-CDL02:VBx13-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx01-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx02-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx03-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx04-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx05-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx06-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx07-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx08-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx09-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx10-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx11-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx12-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx13-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx14-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx15-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx16-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx17-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx18-TT7301:TempR.LOW",
 "SCL32-CDL03:VBx19-TT7301:TempR.LOW"

};
float	HVBxTT7301LOW;
assign	HVBxTT7301LOW to "{GrpHVBxTT7301}.LOW";
monitor HVBxTT7301LOW;
evflag  evHVBxTT7301LOW;
sync 	HVBxTT7301LOW evHVBxTT7301LOW;

float HVBxTT7201LOWArray[32];
assign HVBxTT7201LOWArray to {
 "SCL32-CDL02:VBx01-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx02-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx03-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx04-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx05-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx06-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx07-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx08-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx09-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx10-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx11-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx12-TT7201:TempR.LOW",
 "SCL32-CDL02:VBx13-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx01-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx02-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx03-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx04-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx05-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx06-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx07-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx08-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx09-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx10-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx11-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx12-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx13-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx14-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx15-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx16-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx17-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx18-TT7201:TempR.LOW",
 "SCL32-CDL03:VBx19-TT7201:TempR.LOW"

};
float	HVBxTT7201LOW;
assign	HVBxTT7201LOW to "{GrpHVBxTT7201}.LOW";
monitor HVBxTT7201LOW;
evflag  evHVBxTT7201LOW;
sync 	HVBxTT7201LOW evHVBxTT7201LOW;

float HCMPT8501LOWArray[32];
assign HCMPT8501LOWArray to {
 "SCL32-BL02:CM01-PT8501:PresR.LOW",
 "SCL32-BL02:CM02-PT8501:PresR.LOW",
 "SCL32-BL02:CM03-PT8501:PresR.LOW",
 "SCL32-BL02:CM04-PT8501:PresR.LOW",
 "SCL32-BL02:CM05-PT8501:PresR.LOW",
 "SCL32-BL02:CM06-PT8501:PresR.LOW",
 "SCL32-BL02:CM07-PT8501:PresR.LOW",
 "SCL32-BL02:CM08-PT8501:PresR.LOW",
 "SCL32-BL02:CM09-PT8501:PresR.LOW",
 "SCL32-BL02:CM10-PT8501:PresR.LOW",
 "SCL32-BL02:CM11-PT8501:PresR.LOW",
 "SCL32-BL02:CM12-PT8501:PresR.LOW",
 "SCL32-BL02:CM13-PT8501:PresR.LOW",
 "SCL32-BL03:CM01-PT8501:PresR.LOW",
 "SCL32-BL03:CM02-PT8501:PresR.LOW",
 "SCL32-BL03:CM03-PT8501:PresR.LOW",
 "SCL32-BL03:CM04-PT8501:PresR.LOW",
 "SCL32-BL03:CM05-PT8501:PresR.LOW",
 "SCL32-BL03:CM06-PT8501:PresR.LOW",
 "SCL32-BL03:CM07-PT8501:PresR.LOW",
 "SCL32-BL03:CM08-PT8501:PresR.LOW",
 "SCL32-BL03:CM09-PT8501:PresR.LOW",
 "SCL32-BL03:CM10-PT8501:PresR.LOW",
 "SCL32-BL03:CM11-PT8501:PresR.LOW",
 "SCL32-BL03:CM12-PT8501:PresR.LOW",
 "SCL32-BL03:CM13-PT8501:PresR.LOW",
 "SCL32-BL03:CM14-PT8501:PresR.LOW",
 "SCL32-BL03:CM15-PT8501:PresR.LOW",
 "SCL32-BL03:CM16-PT8501:PresR.LOW",
 "SCL32-BL03:CM17-PT8501:PresR.LOW",
 "SCL32-BL03:CM18-PT8501:PresR.LOW",
 "SCL32-BL03:CM19-PT8501:PresR.LOW"

};
float	HCMPT8501LOW;
assign	HCMPT8501LOW to "{GrpHCMPT8501}.LOW";
monitor HCMPT8501LOW;
evflag  evHCMPT8501LOW;
sync 	HCMPT8501LOW evHCMPT8501LOW;

float HCMPT8301LOWArray[32];
assign HCMPT8301LOWArray to {
 "SCL32-BL02:CM01-PT8301:PresR.LOW",
 "SCL32-BL02:CM02-PT8301:PresR.LOW",
 "SCL32-BL02:CM03-PT8301:PresR.LOW",
 "SCL32-BL02:CM04-PT8301:PresR.LOW",
 "SCL32-BL02:CM05-PT8301:PresR.LOW",
 "SCL32-BL02:CM06-PT8301:PresR.LOW",
 "SCL32-BL02:CM07-PT8301:PresR.LOW",
 "SCL32-BL02:CM08-PT8301:PresR.LOW",
 "SCL32-BL02:CM09-PT8301:PresR.LOW",
 "SCL32-BL02:CM10-PT8301:PresR.LOW",
 "SCL32-BL02:CM11-PT8301:PresR.LOW",
 "SCL32-BL02:CM12-PT8301:PresR.LOW",
 "SCL32-BL02:CM13-PT8301:PresR.LOW",
 "SCL32-BL03:CM01-PT8301:PresR.LOW",
 "SCL32-BL03:CM02-PT8301:PresR.LOW",
 "SCL32-BL03:CM03-PT8301:PresR.LOW",
 "SCL32-BL03:CM04-PT8301:PresR.LOW",
 "SCL32-BL03:CM05-PT8301:PresR.LOW",
 "SCL32-BL03:CM06-PT8301:PresR.LOW",
 "SCL32-BL03:CM07-PT8301:PresR.LOW",
 "SCL32-BL03:CM08-PT8301:PresR.LOW",
 "SCL32-BL03:CM09-PT8301:PresR.LOW",
 "SCL32-BL03:CM10-PT8301:PresR.LOW",
 "SCL32-BL03:CM11-PT8301:PresR.LOW",
 "SCL32-BL03:CM12-PT8301:PresR.LOW",
 "SCL32-BL03:CM13-PT8301:PresR.LOW",
 "SCL32-BL03:CM14-PT8301:PresR.LOW",
 "SCL32-BL03:CM15-PT8301:PresR.LOW",
 "SCL32-BL03:CM16-PT8301:PresR.LOW",
 "SCL32-BL03:CM17-PT8301:PresR.LOW",
 "SCL32-BL03:CM18-PT8301:PresR.LOW",
 "SCL32-BL03:CM19-PT8301:PresR.LOW"

};
float	HCMPT8301LOW;
assign	HCMPT8301LOW to "{GrpHCMPT8301}.LOW";
monitor HCMPT8301LOW;
evflag  evHCMPT8301LOW;
sync 	HCMPT8301LOW evHCMPT8301LOW;

float HCMPT8201LOWArray[32];
assign HCMPT8201LOWArray to {
 "SCL32-BL02:CM01-PT8201:PresR.LOW",
 "SCL32-BL02:CM02-PT8201:PresR.LOW",
 "SCL32-BL02:CM03-PT8201:PresR.LOW",
 "SCL32-BL02:CM04-PT8201:PresR.LOW",
 "SCL32-BL02:CM05-PT8201:PresR.LOW",
 "SCL32-BL02:CM06-PT8201:PresR.LOW",
 "SCL32-BL02:CM07-PT8201:PresR.LOW",
 "SCL32-BL02:CM08-PT8201:PresR.LOW",
 "SCL32-BL02:CM09-PT8201:PresR.LOW",
 "SCL32-BL02:CM10-PT8201:PresR.LOW",
 "SCL32-BL02:CM11-PT8201:PresR.LOW",
 "SCL32-BL02:CM12-PT8201:PresR.LOW",
 "SCL32-BL02:CM13-PT8201:PresR.LOW",
 "SCL32-BL03:CM01-PT8201:PresR.LOW",
 "SCL32-BL03:CM02-PT8201:PresR.LOW",
 "SCL32-BL03:CM03-PT8201:PresR.LOW",
 "SCL32-BL03:CM04-PT8201:PresR.LOW",
 "SCL32-BL03:CM05-PT8201:PresR.LOW",
 "SCL32-BL03:CM06-PT8201:PresR.LOW",
 "SCL32-BL03:CM07-PT8201:PresR.LOW",
 "SCL32-BL03:CM08-PT8201:PresR.LOW",
 "SCL32-BL03:CM09-PT8201:PresR.LOW",
 "SCL32-BL03:CM10-PT8201:PresR.LOW",
 "SCL32-BL03:CM11-PT8201:PresR.LOW",
 "SCL32-BL03:CM12-PT8201:PresR.LOW",
 "SCL32-BL03:CM13-PT8201:PresR.LOW",
 "SCL32-BL03:CM14-PT8201:PresR.LOW",
 "SCL32-BL03:CM15-PT8201:PresR.LOW",
 "SCL32-BL03:CM16-PT8201:PresR.LOW",
 "SCL32-BL03:CM17-PT8201:PresR.LOW",
 "SCL32-BL03:CM18-PT8201:PresR.LOW",
 "SCL32-BL03:CM19-PT8201:PresR.LOW"

};
float	HCMPT8201LOW;
assign	HCMPT8201LOW to "{GrpHCMPT8201}.LOW";
monitor HCMPT8201LOW;
evflag  evHCMPT8201LOW;
sync 	HCMPT8201LOW evHCMPT8201LOW;

float HCMPT8202LOWArray[32];
assign HCMPT8202LOWArray to {
 "SCL32-BL02:CM01-PT8202:PresR.LOW",
 "SCL32-BL02:CM02-PT8202:PresR.LOW",
 "SCL32-BL02:CM03-PT8202:PresR.LOW",
 "SCL32-BL02:CM04-PT8202:PresR.LOW",
 "SCL32-BL02:CM05-PT8202:PresR.LOW",
 "SCL32-BL02:CM06-PT8202:PresR.LOW",
 "SCL32-BL02:CM07-PT8202:PresR.LOW",
 "SCL32-BL02:CM08-PT8202:PresR.LOW",
 "SCL32-BL02:CM09-PT8202:PresR.LOW",
 "SCL32-BL02:CM10-PT8202:PresR.LOW",
 "SCL32-BL02:CM11-PT8202:PresR.LOW",
 "SCL32-BL02:CM12-PT8202:PresR.LOW",
 "SCL32-BL02:CM13-PT8202:PresR.LOW",
 "SCL32-BL03:CM01-PT8202:PresR.LOW",
 "SCL32-BL03:CM02-PT8202:PresR.LOW",
 "SCL32-BL03:CM03-PT8202:PresR.LOW",
 "SCL32-BL03:CM04-PT8202:PresR.LOW",
 "SCL32-BL03:CM05-PT8202:PresR.LOW",
 "SCL32-BL03:CM06-PT8202:PresR.LOW",
 "SCL32-BL03:CM07-PT8202:PresR.LOW",
 "SCL32-BL03:CM08-PT8202:PresR.LOW",
 "SCL32-BL03:CM09-PT8202:PresR.LOW",
 "SCL32-BL03:CM10-PT8202:PresR.LOW",
 "SCL32-BL03:CM11-PT8202:PresR.LOW",
 "SCL32-BL03:CM12-PT8202:PresR.LOW",
 "SCL32-BL03:CM13-PT8202:PresR.LOW",
 "SCL32-BL03:CM14-PT8202:PresR.LOW",
 "SCL32-BL03:CM15-PT8202:PresR.LOW",
 "SCL32-BL03:CM16-PT8202:PresR.LOW",
 "SCL32-BL03:CM17-PT8202:PresR.LOW",
 "SCL32-BL03:CM18-PT8202:PresR.LOW",
 "SCL32-BL03:CM19-PT8202:PresR.LOW"

};
float	HCMPT8202LOW;
assign	HCMPT8202LOW to "{GrpHCMPT8202}.LOW";
monitor HCMPT8202LOW;
evflag  evHCMPT8202LOW;
sync 	HCMPT8202LOW evHCMPT8202LOW;

float HCMPT8203LOWArray[32];
assign HCMPT8203LOWArray to {
 "SCL32-BL02:CM01-PT8203:PresR.LOW",
 "SCL32-BL02:CM02-PT8203:PresR.LOW",
 "SCL32-BL02:CM03-PT8203:PresR.LOW",
 "SCL32-BL02:CM04-PT8203:PresR.LOW",
 "SCL32-BL02:CM05-PT8203:PresR.LOW",
 "SCL32-BL02:CM06-PT8203:PresR.LOW",
 "SCL32-BL02:CM07-PT8203:PresR.LOW",
 "SCL32-BL02:CM08-PT8203:PresR.LOW",
 "SCL32-BL02:CM09-PT8203:PresR.LOW",
 "SCL32-BL02:CM10-PT8203:PresR.LOW",
 "SCL32-BL02:CM11-PT8203:PresR.LOW",
 "SCL32-BL02:CM12-PT8203:PresR.LOW",
 "SCL32-BL02:CM13-PT8203:PresR.LOW",
 "SCL32-BL03:CM01-PT8203:PresR.LOW",
 "SCL32-BL03:CM02-PT8203:PresR.LOW",
 "SCL32-BL03:CM03-PT8203:PresR.LOW",
 "SCL32-BL03:CM04-PT8203:PresR.LOW",
 "SCL32-BL03:CM05-PT8203:PresR.LOW",
 "SCL32-BL03:CM06-PT8203:PresR.LOW",
 "SCL32-BL03:CM07-PT8203:PresR.LOW",
 "SCL32-BL03:CM08-PT8203:PresR.LOW",
 "SCL32-BL03:CM09-PT8203:PresR.LOW",
 "SCL32-BL03:CM10-PT8203:PresR.LOW",
 "SCL32-BL03:CM11-PT8203:PresR.LOW",
 "SCL32-BL03:CM12-PT8203:PresR.LOW",
 "SCL32-BL03:CM13-PT8203:PresR.LOW",
 "SCL32-BL03:CM14-PT8203:PresR.LOW",
 "SCL32-BL03:CM15-PT8203:PresR.LOW",
 "SCL32-BL03:CM16-PT8203:PresR.LOW",
 "SCL32-BL03:CM17-PT8203:PresR.LOW",
 "SCL32-BL03:CM18-PT8203:PresR.LOW",
 "SCL32-BL03:CM19-PT8203:PresR.LOW"

};
float	HCMPT8203LOW;
assign	HCMPT8203LOW to "{GrpHCMPT8203}.LOW";
monitor HCMPT8203LOW;
evflag  evHCMPT8203LOW;
sync 	HCMPT8203LOW evHCMPT8203LOW;

float HCMPT8101LOWArray[32];
assign HCMPT8101LOWArray to {
 "SCL32-BL02:CM01-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM02-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM03-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM04-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM05-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM06-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM07-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM08-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM09-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM10-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM11-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM12-PT8101:VacuumR.LOW",
 "SCL32-BL02:CM13-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM01-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM02-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM03-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM04-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM05-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM06-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM07-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM08-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM09-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM10-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM11-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM12-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM13-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM14-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM15-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM16-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM17-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM18-PT8101:VacuumR.LOW",
 "SCL32-BL03:CM19-PT8101:VacuumR.LOW"

};
float	HCMPT8101LOW;
assign	HCMPT8101LOW to "{GrpHCMPT8101}.LOW";
monitor HCMPT8101LOW;
evflag  evHCMPT8101LOW;
sync 	HCMPT8101LOW evHCMPT8101LOW;

float HCMPT8102LOWArray[32];
assign HCMPT8102LOWArray to {
 "SCL32-BL02:CM01-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM02-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM03-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM04-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM05-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM06-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM07-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM08-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM09-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM10-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM11-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM12-PT8102:VacuumR.LOW",
 "SCL32-BL02:CM13-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM01-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM02-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM03-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM04-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM05-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM06-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM07-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM08-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM09-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM10-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM11-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM12-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM13-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM14-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM15-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM16-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM17-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM18-PT8102:VacuumR.LOW",
 "SCL32-BL03:CM19-PT8102:VacuumR.LOW"

};
float	HCMPT8102LOW;
assign	HCMPT8102LOW to "{GrpHCMPT8102}.LOW";
monitor HCMPT8102LOW;
evflag  evHCMPT8102LOW;
sync 	HCMPT8102LOW evHCMPT8102LOW;

float HCMPT8104LOWArray[32];
assign HCMPT8104LOWArray to {
 "SCL32-BL02:CM01-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM02-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM03-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM04-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM05-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM06-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM07-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM08-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM09-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM10-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM11-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM12-PT8104:VacuumR.LOW",
 "SCL32-BL02:CM13-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM01-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM02-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM03-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM04-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM05-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM06-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM07-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM08-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM09-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM10-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM11-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM12-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM13-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM14-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM15-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM16-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM17-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM18-PT8104:VacuumR.LOW",
 "SCL32-BL03:CM19-PT8104:VacuumR.LOW"

};
float	HCMPT8104LOW;
assign	HCMPT8104LOW to "{GrpHCMPT8104}.LOW";
monitor HCMPT8104LOW;
evflag  evHCMPT8104LOW;
sync 	HCMPT8104LOW evHCMPT8104LOW;

float HCMPT8112LOWArray[32];
assign HCMPT8112LOWArray to {
 "SCL32-BL02:CM01-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM02-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM03-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM04-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM05-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM06-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM07-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM08-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM09-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM10-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM11-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM12-PT8112:VacuumR.LOW",
 "SCL32-BL02:CM13-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM01-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM02-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM03-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM04-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM05-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM06-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM07-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM08-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM09-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM10-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM11-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM12-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM13-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM14-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM15-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM16-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM17-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM18-PT8112:VacuumR.LOW",
 "SCL32-BL03:CM19-PT8112:VacuumR.LOW"

};
float	HCMPT8112LOW;
assign	HCMPT8112LOW to "{GrpHCMPT8112}.LOW";
monitor HCMPT8112LOW;
evflag  evHCMPT8112LOW;
sync 	HCMPT8112LOW evHCMPT8112LOW;

float HCMPT8103LOWArray[27];
assign HCMPT8103LOWArray to {
 "SCL32-BL02:CM01-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM02-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM03-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM05-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM06-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM07-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM08-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM10-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM11-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM12-PT8103:VacuumR.LOW",
 "SCL32-BL02:CM13-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM01-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM02-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM03-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM05-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM06-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM07-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM08-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM10-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM11-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM12-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM13-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM14-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM15-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM16-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM17-PT8103:VacuumR.LOW",
 "SCL32-BL03:CM19-PT8103:VacuumR.LOW"

};
float	HCMPT8103LOW;
assign	HCMPT8103LOW to "{GrpHCMPT8103}.LOW";
monitor HCMPT8103LOW;
evflag  evHCMPT8103LOW;
sync 	HCMPT8103LOW evHCMPT8103LOW;

float HCMPT8113LOWArray[27];
assign HCMPT8113LOWArray to {
 "SCL32-BL02:CM01-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM02-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM03-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM05-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM06-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM07-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM08-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM10-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM11-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM12-PT8113:VacuumR.LOW",
 "SCL32-BL02:CM13-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM01-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM02-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM03-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM05-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM06-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM07-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM08-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM10-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM11-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM12-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM13-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM14-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM15-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM16-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM17-PT8113:VacuumR.LOW",
 "SCL32-BL03:CM19-PT8113:VacuumR.LOW"

};
float	HCMPT8113LOW;
assign	HCMPT8113LOW to "{GrpHCMPT8113}.LOW";
monitor HCMPT8113LOW;
evflag  evHCMPT8113LOW;
sync 	HCMPT8113LOW evHCMPT8113LOW;

float HCMTT8601LOWArray[32];
assign HCMTT8601LOWArray to {
 "SCL32-BL02:CM01-TT8601:TempR.LOW",
 "SCL32-BL02:CM02-TT8601:TempR.LOW",
 "SCL32-BL02:CM03-TT8601:TempR.LOW",
 "SCL32-BL02:CM04-TT8601:TempR.LOW",
 "SCL32-BL02:CM05-TT8601:TempR.LOW",
 "SCL32-BL02:CM06-TT8601:TempR.LOW",
 "SCL32-BL02:CM07-TT8601:TempR.LOW",
 "SCL32-BL02:CM08-TT8601:TempR.LOW",
 "SCL32-BL02:CM09-TT8601:TempR.LOW",
 "SCL32-BL02:CM10-TT8601:TempR.LOW",
 "SCL32-BL02:CM11-TT8601:TempR.LOW",
 "SCL32-BL02:CM12-TT8601:TempR.LOW",
 "SCL32-BL02:CM13-TT8601:TempR.LOW",
 "SCL32-BL03:CM01-TT8601:TempR.LOW",
 "SCL32-BL03:CM02-TT8601:TempR.LOW",
 "SCL32-BL03:CM03-TT8601:TempR.LOW",
 "SCL32-BL03:CM04-TT8601:TempR.LOW",
 "SCL32-BL03:CM05-TT8601:TempR.LOW",
 "SCL32-BL03:CM06-TT8601:TempR.LOW",
 "SCL32-BL03:CM07-TT8601:TempR.LOW",
 "SCL32-BL03:CM08-TT8601:TempR.LOW",
 "SCL32-BL03:CM09-TT8601:TempR.LOW",
 "SCL32-BL03:CM10-TT8601:TempR.LOW",
 "SCL32-BL03:CM11-TT8601:TempR.LOW",
 "SCL32-BL03:CM12-TT8601:TempR.LOW",
 "SCL32-BL03:CM13-TT8601:TempR.LOW",
 "SCL32-BL03:CM14-TT8601:TempR.LOW",
 "SCL32-BL03:CM15-TT8601:TempR.LOW",
 "SCL32-BL03:CM16-TT8601:TempR.LOW",
 "SCL32-BL03:CM17-TT8601:TempR.LOW",
 "SCL32-BL03:CM18-TT8601:TempR.LOW",
 "SCL32-BL03:CM19-TT8601:TempR.LOW"

};
float	HCMTT8601LOW;
assign	HCMTT8601LOW to "{GrpHCMTT8601}.LOW";
monitor HCMTT8601LOW;
evflag  evHCMTT8601LOW;
sync 	HCMTT8601LOW evHCMTT8601LOW;

float HCMTT8602LOWArray[32];
assign HCMTT8602LOWArray to {
 "SCL32-BL02:CM01-TT8602:TempR.LOW",
 "SCL32-BL02:CM02-TT8602:TempR.LOW",
 "SCL32-BL02:CM03-TT8602:TempR.LOW",
 "SCL32-BL02:CM04-TT8602:TempR.LOW",
 "SCL32-BL02:CM05-TT8602:TempR.LOW",
 "SCL32-BL02:CM06-TT8602:TempR.LOW",
 "SCL32-BL02:CM07-TT8602:TempR.LOW",
 "SCL32-BL02:CM08-TT8602:TempR.LOW",
 "SCL32-BL02:CM09-TT8602:TempR.LOW",
 "SCL32-BL02:CM10-TT8602:TempR.LOW",
 "SCL32-BL02:CM11-TT8602:TempR.LOW",
 "SCL32-BL02:CM12-TT8602:TempR.LOW",
 "SCL32-BL02:CM13-TT8602:TempR.LOW",
 "SCL32-BL03:CM01-TT8602:TempR.LOW",
 "SCL32-BL03:CM02-TT8602:TempR.LOW",
 "SCL32-BL03:CM03-TT8602:TempR.LOW",
 "SCL32-BL03:CM04-TT8602:TempR.LOW",
 "SCL32-BL03:CM05-TT8602:TempR.LOW",
 "SCL32-BL03:CM06-TT8602:TempR.LOW",
 "SCL32-BL03:CM07-TT8602:TempR.LOW",
 "SCL32-BL03:CM08-TT8602:TempR.LOW",
 "SCL32-BL03:CM09-TT8602:TempR.LOW",
 "SCL32-BL03:CM10-TT8602:TempR.LOW",
 "SCL32-BL03:CM11-TT8602:TempR.LOW",
 "SCL32-BL03:CM12-TT8602:TempR.LOW",
 "SCL32-BL03:CM13-TT8602:TempR.LOW",
 "SCL32-BL03:CM14-TT8602:TempR.LOW",
 "SCL32-BL03:CM15-TT8602:TempR.LOW",
 "SCL32-BL03:CM16-TT8602:TempR.LOW",
 "SCL32-BL03:CM17-TT8602:TempR.LOW",
 "SCL32-BL03:CM18-TT8602:TempR.LOW",
 "SCL32-BL03:CM19-TT8602:TempR.LOW"

};
float	HCMTT8602LOW;
assign	HCMTT8602LOW to "{GrpHCMTT8602}.LOW";
monitor HCMTT8602LOW;
evflag  evHCMTT8602LOW;
sync 	HCMTT8602LOW evHCMTT8602LOW;

float HCMTT8501LOWArray[32];
assign HCMTT8501LOWArray to {
 "SCL32-BL02:CM01-TT8501:TempR.LOW",
 "SCL32-BL02:CM02-TT8501:TempR.LOW",
 "SCL32-BL02:CM03-TT8501:TempR.LOW",
 "SCL32-BL02:CM04-TT8501:TempR.LOW",
 "SCL32-BL02:CM05-TT8501:TempR.LOW",
 "SCL32-BL02:CM06-TT8501:TempR.LOW",
 "SCL32-BL02:CM07-TT8501:TempR.LOW",
 "SCL32-BL02:CM08-TT8501:TempR.LOW",
 "SCL32-BL02:CM09-TT8501:TempR.LOW",
 "SCL32-BL02:CM10-TT8501:TempR.LOW",
 "SCL32-BL02:CM11-TT8501:TempR.LOW",
 "SCL32-BL02:CM12-TT8501:TempR.LOW",
 "SCL32-BL02:CM13-TT8501:TempR.LOW",
 "SCL32-BL03:CM01-TT8501:TempR.LOW",
 "SCL32-BL03:CM02-TT8501:TempR.LOW",
 "SCL32-BL03:CM03-TT8501:TempR.LOW",
 "SCL32-BL03:CM04-TT8501:TempR.LOW",
 "SCL32-BL03:CM05-TT8501:TempR.LOW",
 "SCL32-BL03:CM06-TT8501:TempR.LOW",
 "SCL32-BL03:CM07-TT8501:TempR.LOW",
 "SCL32-BL03:CM08-TT8501:TempR.LOW",
 "SCL32-BL03:CM09-TT8501:TempR.LOW",
 "SCL32-BL03:CM10-TT8501:TempR.LOW",
 "SCL32-BL03:CM11-TT8501:TempR.LOW",
 "SCL32-BL03:CM12-TT8501:TempR.LOW",
 "SCL32-BL03:CM13-TT8501:TempR.LOW",
 "SCL32-BL03:CM14-TT8501:TempR.LOW",
 "SCL32-BL03:CM15-TT8501:TempR.LOW",
 "SCL32-BL03:CM16-TT8501:TempR.LOW",
 "SCL32-BL03:CM17-TT8501:TempR.LOW",
 "SCL32-BL03:CM18-TT8501:TempR.LOW",
 "SCL32-BL03:CM19-TT8501:TempR.LOW"

};
float	HCMTT8501LOW;
assign	HCMTT8501LOW to "{GrpHCMTT8501}.LOW";
monitor HCMTT8501LOW;
evflag  evHCMTT8501LOW;
sync 	HCMTT8501LOW evHCMTT8501LOW;

float HCMTT8502LOWArray[32];
assign HCMTT8502LOWArray to {
 "SCL32-BL02:CM01-TT8502:TempR.LOW",
 "SCL32-BL02:CM02-TT8502:TempR.LOW",
 "SCL32-BL02:CM03-TT8502:TempR.LOW",
 "SCL32-BL02:CM04-TT8502:TempR.LOW",
 "SCL32-BL02:CM05-TT8502:TempR.LOW",
 "SCL32-BL02:CM06-TT8502:TempR.LOW",
 "SCL32-BL02:CM07-TT8502:TempR.LOW",
 "SCL32-BL02:CM08-TT8502:TempR.LOW",
 "SCL32-BL02:CM09-TT8502:TempR.LOW",
 "SCL32-BL02:CM10-TT8502:TempR.LOW",
 "SCL32-BL02:CM11-TT8502:TempR.LOW",
 "SCL32-BL02:CM12-TT8502:TempR.LOW",
 "SCL32-BL02:CM13-TT8502:TempR.LOW",
 "SCL32-BL03:CM01-TT8502:TempR.LOW",
 "SCL32-BL03:CM02-TT8502:TempR.LOW",
 "SCL32-BL03:CM03-TT8502:TempR.LOW",
 "SCL32-BL03:CM04-TT8502:TempR.LOW",
 "SCL32-BL03:CM05-TT8502:TempR.LOW",
 "SCL32-BL03:CM06-TT8502:TempR.LOW",
 "SCL32-BL03:CM07-TT8502:TempR.LOW",
 "SCL32-BL03:CM08-TT8502:TempR.LOW",
 "SCL32-BL03:CM09-TT8502:TempR.LOW",
 "SCL32-BL03:CM10-TT8502:TempR.LOW",
 "SCL32-BL03:CM11-TT8502:TempR.LOW",
 "SCL32-BL03:CM12-TT8502:TempR.LOW",
 "SCL32-BL03:CM13-TT8502:TempR.LOW",
 "SCL32-BL03:CM14-TT8502:TempR.LOW",
 "SCL32-BL03:CM15-TT8502:TempR.LOW",
 "SCL32-BL03:CM16-TT8502:TempR.LOW",
 "SCL32-BL03:CM17-TT8502:TempR.LOW",
 "SCL32-BL03:CM18-TT8502:TempR.LOW",
 "SCL32-BL03:CM19-TT8502:TempR.LOW"

};
float	HCMTT8502LOW;
assign	HCMTT8502LOW to "{GrpHCMTT8502}.LOW";
monitor HCMTT8502LOW;
evflag  evHCMTT8502LOW;
sync 	HCMTT8502LOW evHCMTT8502LOW;

float HCMTT8401LOWArray[32];
assign HCMTT8401LOWArray to {
 "SCL32-BL02:CM01-TT8401:TempR.LOW",
 "SCL32-BL02:CM02-TT8401:TempR.LOW",
 "SCL32-BL02:CM03-TT8401:TempR.LOW",
 "SCL32-BL02:CM04-TT8401:TempR.LOW",
 "SCL32-BL02:CM05-TT8401:TempR.LOW",
 "SCL32-BL02:CM06-TT8401:TempR.LOW",
 "SCL32-BL02:CM07-TT8401:TempR.LOW",
 "SCL32-BL02:CM08-TT8401:TempR.LOW",
 "SCL32-BL02:CM09-TT8401:TempR.LOW",
 "SCL32-BL02:CM10-TT8401:TempR.LOW",
 "SCL32-BL02:CM11-TT8401:TempR.LOW",
 "SCL32-BL02:CM12-TT8401:TempR.LOW",
 "SCL32-BL02:CM13-TT8401:TempR.LOW",
 "SCL32-BL03:CM01-TT8401:TempR.LOW",
 "SCL32-BL03:CM02-TT8401:TempR.LOW",
 "SCL32-BL03:CM03-TT8401:TempR.LOW",
 "SCL32-BL03:CM04-TT8401:TempR.LOW",
 "SCL32-BL03:CM05-TT8401:TempR.LOW",
 "SCL32-BL03:CM06-TT8401:TempR.LOW",
 "SCL32-BL03:CM07-TT8401:TempR.LOW",
 "SCL32-BL03:CM08-TT8401:TempR.LOW",
 "SCL32-BL03:CM09-TT8401:TempR.LOW",
 "SCL32-BL03:CM10-TT8401:TempR.LOW",
 "SCL32-BL03:CM11-TT8401:TempR.LOW",
 "SCL32-BL03:CM12-TT8401:TempR.LOW",
 "SCL32-BL03:CM13-TT8401:TempR.LOW",
 "SCL32-BL03:CM14-TT8401:TempR.LOW",
 "SCL32-BL03:CM15-TT8401:TempR.LOW",
 "SCL32-BL03:CM16-TT8401:TempR.LOW",
 "SCL32-BL03:CM17-TT8401:TempR.LOW",
 "SCL32-BL03:CM18-TT8401:TempR.LOW",
 "SCL32-BL03:CM19-TT8401:TempR.LOW"

};
float	HCMTT8401LOW;
assign	HCMTT8401LOW to "{GrpHCMTT8401}.LOW";
monitor HCMTT8401LOW;
evflag  evHCMTT8401LOW;
sync 	HCMTT8401LOW evHCMTT8401LOW;

float HCMTT8402LOWArray[32];
assign HCMTT8402LOWArray to {
 "SCL32-BL02:CM01-TT8402:TempR.LOW",
 "SCL32-BL02:CM02-TT8402:TempR.LOW",
 "SCL32-BL02:CM03-TT8402:TempR.LOW",
 "SCL32-BL02:CM04-TT8402:TempR.LOW",
 "SCL32-BL02:CM05-TT8402:TempR.LOW",
 "SCL32-BL02:CM06-TT8402:TempR.LOW",
 "SCL32-BL02:CM07-TT8402:TempR.LOW",
 "SCL32-BL02:CM08-TT8402:TempR.LOW",
 "SCL32-BL02:CM09-TT8402:TempR.LOW",
 "SCL32-BL02:CM10-TT8402:TempR.LOW",
 "SCL32-BL02:CM11-TT8402:TempR.LOW",
 "SCL32-BL02:CM12-TT8402:TempR.LOW",
 "SCL32-BL02:CM13-TT8402:TempR.LOW",
 "SCL32-BL03:CM01-TT8402:TempR.LOW",
 "SCL32-BL03:CM02-TT8402:TempR.LOW",
 "SCL32-BL03:CM03-TT8402:TempR.LOW",
 "SCL32-BL03:CM04-TT8402:TempR.LOW",
 "SCL32-BL03:CM05-TT8402:TempR.LOW",
 "SCL32-BL03:CM06-TT8402:TempR.LOW",
 "SCL32-BL03:CM07-TT8402:TempR.LOW",
 "SCL32-BL03:CM08-TT8402:TempR.LOW",
 "SCL32-BL03:CM09-TT8402:TempR.LOW",
 "SCL32-BL03:CM10-TT8402:TempR.LOW",
 "SCL32-BL03:CM11-TT8402:TempR.LOW",
 "SCL32-BL03:CM12-TT8402:TempR.LOW",
 "SCL32-BL03:CM13-TT8402:TempR.LOW",
 "SCL32-BL03:CM14-TT8402:TempR.LOW",
 "SCL32-BL03:CM15-TT8402:TempR.LOW",
 "SCL32-BL03:CM16-TT8402:TempR.LOW",
 "SCL32-BL03:CM17-TT8402:TempR.LOW",
 "SCL32-BL03:CM18-TT8402:TempR.LOW",
 "SCL32-BL03:CM19-TT8402:TempR.LOW"

};
float	HCMTT8402LOW;
assign	HCMTT8402LOW to "{GrpHCMTT8402}.LOW";
monitor HCMTT8402LOW;
evflag  evHCMTT8402LOW;
sync 	HCMTT8402LOW evHCMTT8402LOW;

float HCMTT8404LOWArray[32];
assign HCMTT8404LOWArray to {
 "SCL32-BL02:CM01-TT8404:TempR.LOW",
 "SCL32-BL02:CM02-TT8404:TempR.LOW",
 "SCL32-BL02:CM03-TT8404:TempR.LOW",
 "SCL32-BL02:CM04-TT8404:TempR.LOW",
 "SCL32-BL02:CM05-TT8404:TempR.LOW",
 "SCL32-BL02:CM06-TT8404:TempR.LOW",
 "SCL32-BL02:CM07-TT8404:TempR.LOW",
 "SCL32-BL02:CM08-TT8404:TempR.LOW",
 "SCL32-BL02:CM09-TT8404:TempR.LOW",
 "SCL32-BL02:CM10-TT8404:TempR.LOW",
 "SCL32-BL02:CM11-TT8404:TempR.LOW",
 "SCL32-BL02:CM12-TT8404:TempR.LOW",
 "SCL32-BL02:CM13-TT8404:TempR.LOW",
 "SCL32-BL03:CM01-TT8404:TempR.LOW",
 "SCL32-BL03:CM02-TT8404:TempR.LOW",
 "SCL32-BL03:CM03-TT8404:TempR.LOW",
 "SCL32-BL03:CM04-TT8404:TempR.LOW",
 "SCL32-BL03:CM05-TT8404:TempR.LOW",
 "SCL32-BL03:CM06-TT8404:TempR.LOW",
 "SCL32-BL03:CM07-TT8404:TempR.LOW",
 "SCL32-BL03:CM08-TT8404:TempR.LOW",
 "SCL32-BL03:CM09-TT8404:TempR.LOW",
 "SCL32-BL03:CM10-TT8404:TempR.LOW",
 "SCL32-BL03:CM11-TT8404:TempR.LOW",
 "SCL32-BL03:CM12-TT8404:TempR.LOW",
 "SCL32-BL03:CM13-TT8404:TempR.LOW",
 "SCL32-BL03:CM14-TT8404:TempR.LOW",
 "SCL32-BL03:CM15-TT8404:TempR.LOW",
 "SCL32-BL03:CM16-TT8404:TempR.LOW",
 "SCL32-BL03:CM17-TT8404:TempR.LOW",
 "SCL32-BL03:CM18-TT8404:TempR.LOW",
 "SCL32-BL03:CM19-TT8404:TempR.LOW"

};
float	HCMTT8404LOW;
assign	HCMTT8404LOW to "{GrpHCMTT8404}.LOW";
monitor HCMTT8404LOW;
evflag  evHCMTT8404LOW;
sync 	HCMTT8404LOW evHCMTT8404LOW;

float HCMTT8202LOWArray[32];
assign HCMTT8202LOWArray to {
 "SCL32-BL02:CM01-TT8202:TempR.LOW",
 "SCL32-BL02:CM02-TT8202:TempR.LOW",
 "SCL32-BL02:CM03-TT8202:TempR.LOW",
 "SCL32-BL02:CM04-TT8202:TempR.LOW",
 "SCL32-BL02:CM05-TT8202:TempR.LOW",
 "SCL32-BL02:CM06-TT8202:TempR.LOW",
 "SCL32-BL02:CM07-TT8202:TempR.LOW",
 "SCL32-BL02:CM08-TT8202:TempR.LOW",
 "SCL32-BL02:CM09-TT8202:TempR.LOW",
 "SCL32-BL02:CM10-TT8202:TempR.LOW",
 "SCL32-BL02:CM11-TT8202:TempR.LOW",
 "SCL32-BL02:CM12-TT8202:TempR.LOW",
 "SCL32-BL02:CM13-TT8202:TempR.LOW",
 "SCL32-BL03:CM01-TT8202:TempR.LOW",
 "SCL32-BL03:CM02-TT8202:TempR.LOW",
 "SCL32-BL03:CM03-TT8202:TempR.LOW",
 "SCL32-BL03:CM04-TT8202:TempR.LOW",
 "SCL32-BL03:CM05-TT8202:TempR.LOW",
 "SCL32-BL03:CM06-TT8202:TempR.LOW",
 "SCL32-BL03:CM07-TT8202:TempR.LOW",
 "SCL32-BL03:CM08-TT8202:TempR.LOW",
 "SCL32-BL03:CM09-TT8202:TempR.LOW",
 "SCL32-BL03:CM10-TT8202:TempR.LOW",
 "SCL32-BL03:CM11-TT8202:TempR.LOW",
 "SCL32-BL03:CM12-TT8202:TempR.LOW",
 "SCL32-BL03:CM13-TT8202:TempR.LOW",
 "SCL32-BL03:CM14-TT8202:TempR.LOW",
 "SCL32-BL03:CM15-TT8202:TempR.LOW",
 "SCL32-BL03:CM16-TT8202:TempR.LOW",
 "SCL32-BL03:CM17-TT8202:TempR.LOW",
 "SCL32-BL03:CM18-TT8202:TempR.LOW",
 "SCL32-BL03:CM19-TT8202:TempR.LOW"

};
float	HCMTT8202LOW;
assign	HCMTT8202LOW to "{GrpHCMTT8202}.LOW";
monitor HCMTT8202LOW;
evflag  evHCMTT8202LOW;
sync 	HCMTT8202LOW evHCMTT8202LOW;

float HCMTT8203LOWArray[32];
assign HCMTT8203LOWArray to {
 "SCL32-BL02:CM01-TT8203:TempR.LOW",
 "SCL32-BL02:CM02-TT8203:TempR.LOW",
 "SCL32-BL02:CM03-TT8203:TempR.LOW",
 "SCL32-BL02:CM04-TT8203:TempR.LOW",
 "SCL32-BL02:CM05-TT8203:TempR.LOW",
 "SCL32-BL02:CM06-TT8203:TempR.LOW",
 "SCL32-BL02:CM07-TT8203:TempR.LOW",
 "SCL32-BL02:CM08-TT8203:TempR.LOW",
 "SCL32-BL02:CM09-TT8203:TempR.LOW",
 "SCL32-BL02:CM10-TT8203:TempR.LOW",
 "SCL32-BL02:CM11-TT8203:TempR.LOW",
 "SCL32-BL02:CM12-TT8203:TempR.LOW",
 "SCL32-BL02:CM13-TT8203:TempR.LOW",
 "SCL32-BL03:CM01-TT8203:TempR.LOW",
 "SCL32-BL03:CM02-TT8203:TempR.LOW",
 "SCL32-BL03:CM03-TT8203:TempR.LOW",
 "SCL32-BL03:CM04-TT8203:TempR.LOW",
 "SCL32-BL03:CM05-TT8203:TempR.LOW",
 "SCL32-BL03:CM06-TT8203:TempR.LOW",
 "SCL32-BL03:CM07-TT8203:TempR.LOW",
 "SCL32-BL03:CM08-TT8203:TempR.LOW",
 "SCL32-BL03:CM09-TT8203:TempR.LOW",
 "SCL32-BL03:CM10-TT8203:TempR.LOW",
 "SCL32-BL03:CM11-TT8203:TempR.LOW",
 "SCL32-BL03:CM12-TT8203:TempR.LOW",
 "SCL32-BL03:CM13-TT8203:TempR.LOW",
 "SCL32-BL03:CM14-TT8203:TempR.LOW",
 "SCL32-BL03:CM15-TT8203:TempR.LOW",
 "SCL32-BL03:CM16-TT8203:TempR.LOW",
 "SCL32-BL03:CM17-TT8203:TempR.LOW",
 "SCL32-BL03:CM18-TT8203:TempR.LOW",
 "SCL32-BL03:CM19-TT8203:TempR.LOW"

};
float	HCMTT8203LOW;
assign	HCMTT8203LOW to "{GrpHCMTT8203}.LOW";
monitor HCMTT8203LOW;
evflag  evHCMTT8203LOW;
sync 	HCMTT8203LOW evHCMTT8203LOW;

float HCMTT8204LOWArray[32];
assign HCMTT8204LOWArray to {
 "SCL32-BL02:CM01-TT8204:TempR.LOW",
 "SCL32-BL02:CM02-TT8204:TempR.LOW",
 "SCL32-BL02:CM03-TT8204:TempR.LOW",
 "SCL32-BL02:CM04-TT8204:TempR.LOW",
 "SCL32-BL02:CM05-TT8204:TempR.LOW",
 "SCL32-BL02:CM06-TT8204:TempR.LOW",
 "SCL32-BL02:CM07-TT8204:TempR.LOW",
 "SCL32-BL02:CM08-TT8204:TempR.LOW",
 "SCL32-BL02:CM09-TT8204:TempR.LOW",
 "SCL32-BL02:CM10-TT8204:TempR.LOW",
 "SCL32-BL02:CM11-TT8204:TempR.LOW",
 "SCL32-BL02:CM12-TT8204:TempR.LOW",
 "SCL32-BL02:CM13-TT8204:TempR.LOW",
 "SCL32-BL03:CM01-TT8204:TempR.LOW",
 "SCL32-BL03:CM02-TT8204:TempR.LOW",
 "SCL32-BL03:CM03-TT8204:TempR.LOW",
 "SCL32-BL03:CM04-TT8204:TempR.LOW",
 "SCL32-BL03:CM05-TT8204:TempR.LOW",
 "SCL32-BL03:CM06-TT8204:TempR.LOW",
 "SCL32-BL03:CM07-TT8204:TempR.LOW",
 "SCL32-BL03:CM08-TT8204:TempR.LOW",
 "SCL32-BL03:CM09-TT8204:TempR.LOW",
 "SCL32-BL03:CM10-TT8204:TempR.LOW",
 "SCL32-BL03:CM11-TT8204:TempR.LOW",
 "SCL32-BL03:CM12-TT8204:TempR.LOW",
 "SCL32-BL03:CM13-TT8204:TempR.LOW",
 "SCL32-BL03:CM14-TT8204:TempR.LOW",
 "SCL32-BL03:CM15-TT8204:TempR.LOW",
 "SCL32-BL03:CM16-TT8204:TempR.LOW",
 "SCL32-BL03:CM17-TT8204:TempR.LOW",
 "SCL32-BL03:CM18-TT8204:TempR.LOW",
 "SCL32-BL03:CM19-TT8204:TempR.LOW"

};
float	HCMTT8204LOW;
assign	HCMTT8204LOW to "{GrpHCMTT8204}.LOW";
monitor HCMTT8204LOW;
evflag  evHCMTT8204LOW;
sync 	HCMTT8204LOW evHCMTT8204LOW;

float HCMTT8205LOWArray[32];
assign HCMTT8205LOWArray to {
 "SCL32-BL02:CM01-TT8205:TempR.LOW",
 "SCL32-BL02:CM02-TT8205:TempR.LOW",
 "SCL32-BL02:CM03-TT8205:TempR.LOW",
 "SCL32-BL02:CM04-TT8205:TempR.LOW",
 "SCL32-BL02:CM05-TT8205:TempR.LOW",
 "SCL32-BL02:CM06-TT8205:TempR.LOW",
 "SCL32-BL02:CM07-TT8205:TempR.LOW",
 "SCL32-BL02:CM08-TT8205:TempR.LOW",
 "SCL32-BL02:CM09-TT8205:TempR.LOW",
 "SCL32-BL02:CM10-TT8205:TempR.LOW",
 "SCL32-BL02:CM11-TT8205:TempR.LOW",
 "SCL32-BL02:CM12-TT8205:TempR.LOW",
 "SCL32-BL02:CM13-TT8205:TempR.LOW",
 "SCL32-BL03:CM01-TT8205:TempR.LOW",
 "SCL32-BL03:CM02-TT8205:TempR.LOW",
 "SCL32-BL03:CM03-TT8205:TempR.LOW",
 "SCL32-BL03:CM04-TT8205:TempR.LOW",
 "SCL32-BL03:CM05-TT8205:TempR.LOW",
 "SCL32-BL03:CM06-TT8205:TempR.LOW",
 "SCL32-BL03:CM07-TT8205:TempR.LOW",
 "SCL32-BL03:CM08-TT8205:TempR.LOW",
 "SCL32-BL03:CM09-TT8205:TempR.LOW",
 "SCL32-BL03:CM10-TT8205:TempR.LOW",
 "SCL32-BL03:CM11-TT8205:TempR.LOW",
 "SCL32-BL03:CM12-TT8205:TempR.LOW",
 "SCL32-BL03:CM13-TT8205:TempR.LOW",
 "SCL32-BL03:CM14-TT8205:TempR.LOW",
 "SCL32-BL03:CM15-TT8205:TempR.LOW",
 "SCL32-BL03:CM16-TT8205:TempR.LOW",
 "SCL32-BL03:CM17-TT8205:TempR.LOW",
 "SCL32-BL03:CM18-TT8205:TempR.LOW",
 "SCL32-BL03:CM19-TT8205:TempR.LOW"

};
float	HCMTT8205LOW;
assign	HCMTT8205LOW to "{GrpHCMTT8205}.LOW";
monitor HCMTT8205LOW;
evflag  evHCMTT8205LOW;
sync 	HCMTT8205LOW evHCMTT8205LOW;

float HCMTT8206LOWArray[32];
assign HCMTT8206LOWArray to {
 "SCL32-BL02:CM01-TT8206:TempR.LOW",
 "SCL32-BL02:CM02-TT8206:TempR.LOW",
 "SCL32-BL02:CM03-TT8206:TempR.LOW",
 "SCL32-BL02:CM04-TT8206:TempR.LOW",
 "SCL32-BL02:CM05-TT8206:TempR.LOW",
 "SCL32-BL02:CM06-TT8206:TempR.LOW",
 "SCL32-BL02:CM07-TT8206:TempR.LOW",
 "SCL32-BL02:CM08-TT8206:TempR.LOW",
 "SCL32-BL02:CM09-TT8206:TempR.LOW",
 "SCL32-BL02:CM10-TT8206:TempR.LOW",
 "SCL32-BL02:CM11-TT8206:TempR.LOW",
 "SCL32-BL02:CM12-TT8206:TempR.LOW",
 "SCL32-BL02:CM13-TT8206:TempR.LOW",
 "SCL32-BL03:CM01-TT8206:TempR.LOW",
 "SCL32-BL03:CM02-TT8206:TempR.LOW",
 "SCL32-BL03:CM03-TT8206:TempR.LOW",
 "SCL32-BL03:CM04-TT8206:TempR.LOW",
 "SCL32-BL03:CM05-TT8206:TempR.LOW",
 "SCL32-BL03:CM06-TT8206:TempR.LOW",
 "SCL32-BL03:CM07-TT8206:TempR.LOW",
 "SCL32-BL03:CM08-TT8206:TempR.LOW",
 "SCL32-BL03:CM09-TT8206:TempR.LOW",
 "SCL32-BL03:CM10-TT8206:TempR.LOW",
 "SCL32-BL03:CM11-TT8206:TempR.LOW",
 "SCL32-BL03:CM12-TT8206:TempR.LOW",
 "SCL32-BL03:CM13-TT8206:TempR.LOW",
 "SCL32-BL03:CM14-TT8206:TempR.LOW",
 "SCL32-BL03:CM15-TT8206:TempR.LOW",
 "SCL32-BL03:CM16-TT8206:TempR.LOW",
 "SCL32-BL03:CM17-TT8206:TempR.LOW",
 "SCL32-BL03:CM18-TT8206:TempR.LOW",
 "SCL32-BL03:CM19-TT8206:TempR.LOW"

};
float	HCMTT8206LOW;
assign	HCMTT8206LOW to "{GrpHCMTT8206}.LOW";
monitor HCMTT8206LOW;
evflag  evHCMTT8206LOW;
sync 	HCMTT8206LOW evHCMTT8206LOW;

float HCMTT8207LOWArray[32];
assign HCMTT8207LOWArray to {
 "SCL32-BL02:CM01-TT8207:TempR.LOW",
 "SCL32-BL02:CM02-TT8207:TempR.LOW",
 "SCL32-BL02:CM03-TT8207:TempR.LOW",
 "SCL32-BL02:CM04-TT8207:TempR.LOW",
 "SCL32-BL02:CM05-TT8207:TempR.LOW",
 "SCL32-BL02:CM06-TT8207:TempR.LOW",
 "SCL32-BL02:CM07-TT8207:TempR.LOW",
 "SCL32-BL02:CM08-TT8207:TempR.LOW",
 "SCL32-BL02:CM09-TT8207:TempR.LOW",
 "SCL32-BL02:CM10-TT8207:TempR.LOW",
 "SCL32-BL02:CM11-TT8207:TempR.LOW",
 "SCL32-BL02:CM12-TT8207:TempR.LOW",
 "SCL32-BL02:CM13-TT8207:TempR.LOW",
 "SCL32-BL03:CM01-TT8207:TempR.LOW",
 "SCL32-BL03:CM02-TT8207:TempR.LOW",
 "SCL32-BL03:CM03-TT8207:TempR.LOW",
 "SCL32-BL03:CM04-TT8207:TempR.LOW",
 "SCL32-BL03:CM05-TT8207:TempR.LOW",
 "SCL32-BL03:CM06-TT8207:TempR.LOW",
 "SCL32-BL03:CM07-TT8207:TempR.LOW",
 "SCL32-BL03:CM08-TT8207:TempR.LOW",
 "SCL32-BL03:CM09-TT8207:TempR.LOW",
 "SCL32-BL03:CM10-TT8207:TempR.LOW",
 "SCL32-BL03:CM11-TT8207:TempR.LOW",
 "SCL32-BL03:CM12-TT8207:TempR.LOW",
 "SCL32-BL03:CM13-TT8207:TempR.LOW",
 "SCL32-BL03:CM14-TT8207:TempR.LOW",
 "SCL32-BL03:CM15-TT8207:TempR.LOW",
 "SCL32-BL03:CM16-TT8207:TempR.LOW",
 "SCL32-BL03:CM17-TT8207:TempR.LOW",
 "SCL32-BL03:CM18-TT8207:TempR.LOW",
 "SCL32-BL03:CM19-TT8207:TempR.LOW"

};
float	HCMTT8207LOW;
assign	HCMTT8207LOW to "{GrpHCMTT8207}.LOW";
monitor HCMTT8207LOW;
evflag  evHCMTT8207LOW;
sync 	HCMTT8207LOW evHCMTT8207LOW;

float HCMTT8208LOWArray[32];
assign HCMTT8208LOWArray to {
 "SCL32-BL02:CM01-TT8208:TempR.LOW",
 "SCL32-BL02:CM02-TT8208:TempR.LOW",
 "SCL32-BL02:CM03-TT8208:TempR.LOW",
 "SCL32-BL02:CM04-TT8208:TempR.LOW",
 "SCL32-BL02:CM05-TT8208:TempR.LOW",
 "SCL32-BL02:CM06-TT8208:TempR.LOW",
 "SCL32-BL02:CM07-TT8208:TempR.LOW",
 "SCL32-BL02:CM08-TT8208:TempR.LOW",
 "SCL32-BL02:CM09-TT8208:TempR.LOW",
 "SCL32-BL02:CM10-TT8208:TempR.LOW",
 "SCL32-BL02:CM11-TT8208:TempR.LOW",
 "SCL32-BL02:CM12-TT8208:TempR.LOW",
 "SCL32-BL02:CM13-TT8208:TempR.LOW",
 "SCL32-BL03:CM01-TT8208:TempR.LOW",
 "SCL32-BL03:CM02-TT8208:TempR.LOW",
 "SCL32-BL03:CM03-TT8208:TempR.LOW",
 "SCL32-BL03:CM04-TT8208:TempR.LOW",
 "SCL32-BL03:CM05-TT8208:TempR.LOW",
 "SCL32-BL03:CM06-TT8208:TempR.LOW",
 "SCL32-BL03:CM07-TT8208:TempR.LOW",
 "SCL32-BL03:CM08-TT8208:TempR.LOW",
 "SCL32-BL03:CM09-TT8208:TempR.LOW",
 "SCL32-BL03:CM10-TT8208:TempR.LOW",
 "SCL32-BL03:CM11-TT8208:TempR.LOW",
 "SCL32-BL03:CM12-TT8208:TempR.LOW",
 "SCL32-BL03:CM13-TT8208:TempR.LOW",
 "SCL32-BL03:CM14-TT8208:TempR.LOW",
 "SCL32-BL03:CM15-TT8208:TempR.LOW",
 "SCL32-BL03:CM16-TT8208:TempR.LOW",
 "SCL32-BL03:CM17-TT8208:TempR.LOW",
 "SCL32-BL03:CM18-TT8208:TempR.LOW",
 "SCL32-BL03:CM19-TT8208:TempR.LOW"

};
float	HCMTT8208LOW;
assign	HCMTT8208LOW to "{GrpHCMTT8208}.LOW";
monitor HCMTT8208LOW;
evflag  evHCMTT8208LOW;
sync 	HCMTT8208LOW evHCMTT8208LOW;

float HCMLT8401LOWArray[32];
assign HCMLT8401LOWArray to {
 "SCL32-BL02:CM01-LT8401:PercR.LOW",
 "SCL32-BL02:CM02-LT8401:PercR.LOW",
 "SCL32-BL02:CM03-LT8401:PercR.LOW",
 "SCL32-BL02:CM04-LT8401:PercR.LOW",
 "SCL32-BL02:CM05-LT8401:PercR.LOW",
 "SCL32-BL02:CM06-LT8401:PercR.LOW",
 "SCL32-BL02:CM07-LT8401:PercR.LOW",
 "SCL32-BL02:CM08-LT8401:PercR.LOW",
 "SCL32-BL02:CM09-LT8401:PercR.LOW",
 "SCL32-BL02:CM10-LT8401:PercR.LOW",
 "SCL32-BL02:CM11-LT8401:PercR.LOW",
 "SCL32-BL02:CM12-LT8401:PercR.LOW",
 "SCL32-BL02:CM13-LT8401:PercR.LOW",
 "SCL32-BL03:CM01-LT8401:PercR.LOW",
 "SCL32-BL03:CM02-LT8401:PercR.LOW",
 "SCL32-BL03:CM03-LT8401:PercR.LOW",
 "SCL32-BL03:CM04-LT8401:PercR.LOW",
 "SCL32-BL03:CM05-LT8401:PercR.LOW",
 "SCL32-BL03:CM06-LT8401:PercR.LOW",
 "SCL32-BL03:CM07-LT8401:PercR.LOW",
 "SCL32-BL03:CM08-LT8401:PercR.LOW",
 "SCL32-BL03:CM09-LT8401:PercR.LOW",
 "SCL32-BL03:CM10-LT8401:PercR.LOW",
 "SCL32-BL03:CM11-LT8401:PercR.LOW",
 "SCL32-BL03:CM12-LT8401:PercR.LOW",
 "SCL32-BL03:CM13-LT8401:PercR.LOW",
 "SCL32-BL03:CM14-LT8401:PercR.LOW",
 "SCL32-BL03:CM15-LT8401:PercR.LOW",
 "SCL32-BL03:CM16-LT8401:PercR.LOW",
 "SCL32-BL03:CM17-LT8401:PercR.LOW",
 "SCL32-BL03:CM18-LT8401:PercR.LOW",
 "SCL32-BL03:CM19-LT8401:PercR.LOW"

};
float	HCMLT8401LOW;
assign	HCMLT8401LOW to "{GrpHCMLT8401}.LOW";
monitor HCMLT8401LOW;
evflag  evHCMLT8401LOW;
sync 	HCMLT8401LOW evHCMLT8401LOW;

float HCMLT8201LOWArray[32];
assign HCMLT8201LOWArray to {
 "SCL32-BL02:CM01-LT8201:PercR.LOW",
 "SCL32-BL02:CM02-LT8201:PercR.LOW",
 "SCL32-BL02:CM03-LT8201:PercR.LOW",
 "SCL32-BL02:CM04-LT8201:PercR.LOW",
 "SCL32-BL02:CM05-LT8201:PercR.LOW",
 "SCL32-BL02:CM06-LT8201:PercR.LOW",
 "SCL32-BL02:CM07-LT8201:PercR.LOW",
 "SCL32-BL02:CM08-LT8201:PercR.LOW",
 "SCL32-BL02:CM09-LT8201:PercR.LOW",
 "SCL32-BL02:CM10-LT8201:PercR.LOW",
 "SCL32-BL02:CM11-LT8201:PercR.LOW",
 "SCL32-BL02:CM12-LT8201:PercR.LOW",
 "SCL32-BL02:CM13-LT8201:PercR.LOW",
 "SCL32-BL03:CM01-LT8201:PercR.LOW",
 "SCL32-BL03:CM02-LT8201:PercR.LOW",
 "SCL32-BL03:CM03-LT8201:PercR.LOW",
 "SCL32-BL03:CM04-LT8201:PercR.LOW",
 "SCL32-BL03:CM05-LT8201:PercR.LOW",
 "SCL32-BL03:CM06-LT8201:PercR.LOW",
 "SCL32-BL03:CM07-LT8201:PercR.LOW",
 "SCL32-BL03:CM08-LT8201:PercR.LOW",
 "SCL32-BL03:CM09-LT8201:PercR.LOW",
 "SCL32-BL03:CM10-LT8201:PercR.LOW",
 "SCL32-BL03:CM11-LT8201:PercR.LOW",
 "SCL32-BL03:CM12-LT8201:PercR.LOW",
 "SCL32-BL03:CM13-LT8201:PercR.LOW",
 "SCL32-BL03:CM14-LT8201:PercR.LOW",
 "SCL32-BL03:CM15-LT8201:PercR.LOW",
 "SCL32-BL03:CM16-LT8201:PercR.LOW",
 "SCL32-BL03:CM17-LT8201:PercR.LOW",
 "SCL32-BL03:CM18-LT8201:PercR.LOW",
 "SCL32-BL03:CM19-LT8201:PercR.LOW"

};
float	HCMLT8201LOW;
assign	HCMLT8201LOW to "{GrpHCMLT8201}.LOW";
monitor HCMLT8201LOW;
evflag  evHCMLT8201LOW;
sync 	HCMLT8201LOW evHCMLT8201LOW;

float HCMTT8603LOWArray[32];
assign HCMTT8603LOWArray to {
 "SCL32-BL02:CM01-TT8603:TempR.LOW",
 "SCL32-BL02:CM02-TT8603:TempR.LOW",
 "SCL32-BL02:CM03-TT8603:TempR.LOW",
 "SCL32-BL02:CM04-TT8603:TempR.LOW",
 "SCL32-BL02:CM05-TT8603:TempR.LOW",
 "SCL32-BL02:CM06-TT8603:TempR.LOW",
 "SCL32-BL02:CM07-TT8603:TempR.LOW",
 "SCL32-BL02:CM08-TT8603:TempR.LOW",
 "SCL32-BL02:CM09-TT8603:TempR.LOW",
 "SCL32-BL02:CM10-TT8603:TempR.LOW",
 "SCL32-BL02:CM11-TT8603:TempR.LOW",
 "SCL32-BL02:CM12-TT8603:TempR.LOW",
 "SCL32-BL02:CM13-TT8603:TempR.LOW",
 "SCL32-BL03:CM01-TT8603:TempR.LOW",
 "SCL32-BL03:CM02-TT8603:TempR.LOW",
 "SCL32-BL03:CM03-TT8603:TempR.LOW",
 "SCL32-BL03:CM04-TT8603:TempR.LOW",
 "SCL32-BL03:CM05-TT8603:TempR.LOW",
 "SCL32-BL03:CM06-TT8603:TempR.LOW",
 "SCL32-BL03:CM07-TT8603:TempR.LOW",
 "SCL32-BL03:CM08-TT8603:TempR.LOW",
 "SCL32-BL03:CM09-TT8603:TempR.LOW",
 "SCL32-BL03:CM10-TT8603:TempR.LOW",
 "SCL32-BL03:CM11-TT8603:TempR.LOW",
 "SCL32-BL03:CM12-TT8603:TempR.LOW",
 "SCL32-BL03:CM13-TT8603:TempR.LOW",
 "SCL32-BL03:CM14-TT8603:TempR.LOW",
 "SCL32-BL03:CM15-TT8603:TempR.LOW",
 "SCL32-BL03:CM16-TT8603:TempR.LOW",
 "SCL32-BL03:CM17-TT8603:TempR.LOW",
 "SCL32-BL03:CM18-TT8603:TempR.LOW",
 "SCL32-BL03:CM19-TT8603:TempR.LOW"

};
float	HCMTT8603LOW;
assign	HCMTT8603LOW to "{GrpHCMTT8603}.LOW";
monitor HCMTT8603LOW;
evflag  evHCMTT8603LOW;
sync 	HCMTT8603LOW evHCMTT8603LOW;

float HCMTT8604LOWArray[32];
assign HCMTT8604LOWArray to {
 "SCL32-BL02:CM01-TT8604:TempR.LOW",
 "SCL32-BL02:CM02-TT8604:TempR.LOW",
 "SCL32-BL02:CM03-TT8604:TempR.LOW",
 "SCL32-BL02:CM04-TT8604:TempR.LOW",
 "SCL32-BL02:CM05-TT8604:TempR.LOW",
 "SCL32-BL02:CM06-TT8604:TempR.LOW",
 "SCL32-BL02:CM07-TT8604:TempR.LOW",
 "SCL32-BL02:CM08-TT8604:TempR.LOW",
 "SCL32-BL02:CM09-TT8604:TempR.LOW",
 "SCL32-BL02:CM10-TT8604:TempR.LOW",
 "SCL32-BL02:CM11-TT8604:TempR.LOW",
 "SCL32-BL02:CM12-TT8604:TempR.LOW",
 "SCL32-BL02:CM13-TT8604:TempR.LOW",
 "SCL32-BL03:CM01-TT8604:TempR.LOW",
 "SCL32-BL03:CM02-TT8604:TempR.LOW",
 "SCL32-BL03:CM03-TT8604:TempR.LOW",
 "SCL32-BL03:CM04-TT8604:TempR.LOW",
 "SCL32-BL03:CM05-TT8604:TempR.LOW",
 "SCL32-BL03:CM06-TT8604:TempR.LOW",
 "SCL32-BL03:CM07-TT8604:TempR.LOW",
 "SCL32-BL03:CM08-TT8604:TempR.LOW",
 "SCL32-BL03:CM09-TT8604:TempR.LOW",
 "SCL32-BL03:CM10-TT8604:TempR.LOW",
 "SCL32-BL03:CM11-TT8604:TempR.LOW",
 "SCL32-BL03:CM12-TT8604:TempR.LOW",
 "SCL32-BL03:CM13-TT8604:TempR.LOW",
 "SCL32-BL03:CM14-TT8604:TempR.LOW",
 "SCL32-BL03:CM15-TT8604:TempR.LOW",
 "SCL32-BL03:CM16-TT8604:TempR.LOW",
 "SCL32-BL03:CM17-TT8604:TempR.LOW",
 "SCL32-BL03:CM18-TT8604:TempR.LOW",
 "SCL32-BL03:CM19-TT8604:TempR.LOW"

};
float	HCMTT8604LOW;
assign	HCMTT8604LOW to "{GrpHCMTT8604}.LOW";
monitor HCMTT8604LOW;
evflag  evHCMTT8604LOW;
sync 	HCMTT8604LOW evHCMTT8604LOW;

float HCMTT8209LOWArray[19];
assign HCMTT8209LOWArray to {
 "SCL32-BL03:CM01-TT8209:TempR.LOW",
 "SCL32-BL03:CM02-TT8209:TempR.LOW",
 "SCL32-BL03:CM03-TT8209:TempR.LOW",
 "SCL32-BL03:CM04-TT8209:TempR.LOW",
 "SCL32-BL03:CM05-TT8209:TempR.LOW",
 "SCL32-BL03:CM06-TT8209:TempR.LOW",
 "SCL32-BL03:CM07-TT8209:TempR.LOW",
 "SCL32-BL03:CM08-TT8209:TempR.LOW",
 "SCL32-BL03:CM09-TT8209:TempR.LOW",
 "SCL32-BL03:CM10-TT8209:TempR.LOW",
 "SCL32-BL03:CM11-TT8209:TempR.LOW",
 "SCL32-BL03:CM12-TT8209:TempR.LOW",
 "SCL32-BL03:CM13-TT8209:TempR.LOW",
 "SCL32-BL03:CM14-TT8209:TempR.LOW",
 "SCL32-BL03:CM15-TT8209:TempR.LOW",
 "SCL32-BL03:CM16-TT8209:TempR.LOW",
 "SCL32-BL03:CM17-TT8209:TempR.LOW",
 "SCL32-BL03:CM18-TT8209:TempR.LOW",
 "SCL32-BL03:CM19-TT8209:TempR.LOW"

};
float	HCMTT8209LOW;
assign	HCMTT8209LOW to "{GrpHCMTT8209}.LOW";
monitor HCMTT8209LOW;
evflag  evHCMTT8209LOW;
sync 	HCMTT8209LOW evHCMTT8209LOW;

float HCMTT8210LOWArray[19];
assign HCMTT8210LOWArray to {
 "SCL32-BL03:CM01-TT8210:TempR.LOW",
 "SCL32-BL03:CM02-TT8210:TempR.LOW",
 "SCL32-BL03:CM03-TT8210:TempR.LOW",
 "SCL32-BL03:CM04-TT8210:TempR.LOW",
 "SCL32-BL03:CM05-TT8210:TempR.LOW",
 "SCL32-BL03:CM06-TT8210:TempR.LOW",
 "SCL32-BL03:CM07-TT8210:TempR.LOW",
 "SCL32-BL03:CM08-TT8210:TempR.LOW",
 "SCL32-BL03:CM09-TT8210:TempR.LOW",
 "SCL32-BL03:CM10-TT8210:TempR.LOW",
 "SCL32-BL03:CM11-TT8210:TempR.LOW",
 "SCL32-BL03:CM12-TT8210:TempR.LOW",
 "SCL32-BL03:CM13-TT8210:TempR.LOW",
 "SCL32-BL03:CM14-TT8210:TempR.LOW",
 "SCL32-BL03:CM15-TT8210:TempR.LOW",
 "SCL32-BL03:CM16-TT8210:TempR.LOW",
 "SCL32-BL03:CM17-TT8210:TempR.LOW",
 "SCL32-BL03:CM18-TT8210:TempR.LOW",
 "SCL32-BL03:CM19-TT8210:TempR.LOW"

};
float	HCMTT8210LOW;
assign	HCMTT8210LOW to "{GrpHCMTT8210}.LOW";
monitor HCMTT8210LOW;
evflag  evHCMTT8210LOW;
sync 	HCMTT8210LOW evHCMTT8210LOW;

float HCMTT8211LOWArray[19];
assign HCMTT8211LOWArray to {
 "SCL32-BL03:CM01-TT8211:TempR.LOW",
 "SCL32-BL03:CM02-TT8211:TempR.LOW",
 "SCL32-BL03:CM03-TT8211:TempR.LOW",
 "SCL32-BL03:CM04-TT8211:TempR.LOW",
 "SCL32-BL03:CM05-TT8211:TempR.LOW",
 "SCL32-BL03:CM06-TT8211:TempR.LOW",
 "SCL32-BL03:CM07-TT8211:TempR.LOW",
 "SCL32-BL03:CM08-TT8211:TempR.LOW",
 "SCL32-BL03:CM09-TT8211:TempR.LOW",
 "SCL32-BL03:CM10-TT8211:TempR.LOW",
 "SCL32-BL03:CM11-TT8211:TempR.LOW",
 "SCL32-BL03:CM12-TT8211:TempR.LOW",
 "SCL32-BL03:CM13-TT8211:TempR.LOW",
 "SCL32-BL03:CM14-TT8211:TempR.LOW",
 "SCL32-BL03:CM15-TT8211:TempR.LOW",
 "SCL32-BL03:CM16-TT8211:TempR.LOW",
 "SCL32-BL03:CM17-TT8211:TempR.LOW",
 "SCL32-BL03:CM18-TT8211:TempR.LOW",
 "SCL32-BL03:CM19-TT8211:TempR.LOW"

};
float	HCMTT8211LOW;
assign	HCMTT8211LOW to "{GrpHCMTT8211}.LOW";
monitor HCMTT8211LOW;
evflag  evHCMTT8211LOW;
sync 	HCMTT8211LOW evHCMTT8211LOW;

float HCMTT8212LOWArray[19];
assign HCMTT8212LOWArray to {
 "SCL32-BL03:CM01-TT8212:TempR.LOW",
 "SCL32-BL03:CM02-TT8212:TempR.LOW",
 "SCL32-BL03:CM03-TT8212:TempR.LOW",
 "SCL32-BL03:CM04-TT8212:TempR.LOW",
 "SCL32-BL03:CM05-TT8212:TempR.LOW",
 "SCL32-BL03:CM06-TT8212:TempR.LOW",
 "SCL32-BL03:CM07-TT8212:TempR.LOW",
 "SCL32-BL03:CM08-TT8212:TempR.LOW",
 "SCL32-BL03:CM09-TT8212:TempR.LOW",
 "SCL32-BL03:CM10-TT8212:TempR.LOW",
 "SCL32-BL03:CM11-TT8212:TempR.LOW",
 "SCL32-BL03:CM12-TT8212:TempR.LOW",
 "SCL32-BL03:CM13-TT8212:TempR.LOW",
 "SCL32-BL03:CM14-TT8212:TempR.LOW",
 "SCL32-BL03:CM15-TT8212:TempR.LOW",
 "SCL32-BL03:CM16-TT8212:TempR.LOW",
 "SCL32-BL03:CM17-TT8212:TempR.LOW",
 "SCL32-BL03:CM18-TT8212:TempR.LOW",
 "SCL32-BL03:CM19-TT8212:TempR.LOW"

};
float	HCMTT8212LOW;
assign	HCMTT8212LOW to "{GrpHCMTT8212}.LOW";
monitor HCMTT8212LOW;
evflag  evHCMTT8212LOW;
sync 	HCMTT8212LOW evHCMTT8212LOW;

float HCMTT8213LOWArray[19];
assign HCMTT8213LOWArray to {
 "SCL32-BL03:CM01-TT8213:TempR.LOW",
 "SCL32-BL03:CM02-TT8213:TempR.LOW",
 "SCL32-BL03:CM03-TT8213:TempR.LOW",
 "SCL32-BL03:CM04-TT8213:TempR.LOW",
 "SCL32-BL03:CM05-TT8213:TempR.LOW",
 "SCL32-BL03:CM06-TT8213:TempR.LOW",
 "SCL32-BL03:CM07-TT8213:TempR.LOW",
 "SCL32-BL03:CM08-TT8213:TempR.LOW",
 "SCL32-BL03:CM09-TT8213:TempR.LOW",
 "SCL32-BL03:CM10-TT8213:TempR.LOW",
 "SCL32-BL03:CM11-TT8213:TempR.LOW",
 "SCL32-BL03:CM12-TT8213:TempR.LOW",
 "SCL32-BL03:CM13-TT8213:TempR.LOW",
 "SCL32-BL03:CM14-TT8213:TempR.LOW",
 "SCL32-BL03:CM15-TT8213:TempR.LOW",
 "SCL32-BL03:CM16-TT8213:TempR.LOW",
 "SCL32-BL03:CM17-TT8213:TempR.LOW",
 "SCL32-BL03:CM18-TT8213:TempR.LOW",
 "SCL32-BL03:CM19-TT8213:TempR.LOW"

};
float	HCMTT8213LOW;
assign	HCMTT8213LOW to "{GrpHCMTT8213}.LOW";
monitor HCMTT8213LOW;
evflag  evHCMTT8213LOW;
sync 	HCMTT8213LOW evHCMTT8213LOW;

float HCMTT8214LOWArray[19];
assign HCMTT8214LOWArray to {
 "SCL32-BL03:CM01-TT8214:TempR.LOW",
 "SCL32-BL03:CM02-TT8214:TempR.LOW",
 "SCL32-BL03:CM03-TT8214:TempR.LOW",
 "SCL32-BL03:CM04-TT8214:TempR.LOW",
 "SCL32-BL03:CM05-TT8214:TempR.LOW",
 "SCL32-BL03:CM06-TT8214:TempR.LOW",
 "SCL32-BL03:CM07-TT8214:TempR.LOW",
 "SCL32-BL03:CM08-TT8214:TempR.LOW",
 "SCL32-BL03:CM09-TT8214:TempR.LOW",
 "SCL32-BL03:CM10-TT8214:TempR.LOW",
 "SCL32-BL03:CM11-TT8214:TempR.LOW",
 "SCL32-BL03:CM12-TT8214:TempR.LOW",
 "SCL32-BL03:CM13-TT8214:TempR.LOW",
 "SCL32-BL03:CM14-TT8214:TempR.LOW",
 "SCL32-BL03:CM15-TT8214:TempR.LOW",
 "SCL32-BL03:CM16-TT8214:TempR.LOW",
 "SCL32-BL03:CM17-TT8214:TempR.LOW",
 "SCL32-BL03:CM18-TT8214:TempR.LOW",
 "SCL32-BL03:CM19-TT8214:TempR.LOW"

};
float	HCMTT8214LOW;
assign	HCMTT8214LOW to "{GrpHCMTT8214}.LOW";
monitor HCMTT8214LOW;
evflag  evHCMTT8214LOW;
sync 	HCMTT8214LOW evHCMTT8214LOW;

float HCMEH8401VLOWArray[32];
assign HCMEH8401VLOWArray to {
 "SCL32-BL02:CM01-EH8401:VoltR.LOW",
 "SCL32-BL02:CM02-EH8401:VoltR.LOW",
 "SCL32-BL02:CM03-EH8401:VoltR.LOW",
 "SCL32-BL02:CM04-EH8401:VoltR.LOW",
 "SCL32-BL02:CM05-EH8401:VoltR.LOW",
 "SCL32-BL02:CM06-EH8401:VoltR.LOW",
 "SCL32-BL02:CM07-EH8401:VoltR.LOW",
 "SCL32-BL02:CM08-EH8401:VoltR.LOW",
 "SCL32-BL02:CM09-EH8401:VoltR.LOW",
 "SCL32-BL02:CM10-EH8401:VoltR.LOW",
 "SCL32-BL02:CM11-EH8401:VoltR.LOW",
 "SCL32-BL02:CM12-EH8401:VoltR.LOW",
 "SCL32-BL02:CM13-EH8401:VoltR.LOW",
 "SCL32-BL03:CM01-EH8401:VoltR.LOW",
 "SCL32-BL03:CM02-EH8401:VoltR.LOW",
 "SCL32-BL03:CM03-EH8401:VoltR.LOW",
 "SCL32-BL03:CM04-EH8401:VoltR.LOW",
 "SCL32-BL03:CM05-EH8401:VoltR.LOW",
 "SCL32-BL03:CM06-EH8401:VoltR.LOW",
 "SCL32-BL03:CM07-EH8401:VoltR.LOW",
 "SCL32-BL03:CM08-EH8401:VoltR.LOW",
 "SCL32-BL03:CM09-EH8401:VoltR.LOW",
 "SCL32-BL03:CM10-EH8401:VoltR.LOW",
 "SCL32-BL03:CM11-EH8401:VoltR.LOW",
 "SCL32-BL03:CM12-EH8401:VoltR.LOW",
 "SCL32-BL03:CM13-EH8401:VoltR.LOW",
 "SCL32-BL03:CM14-EH8401:VoltR.LOW",
 "SCL32-BL03:CM15-EH8401:VoltR.LOW",
 "SCL32-BL03:CM16-EH8401:VoltR.LOW",
 "SCL32-BL03:CM17-EH8401:VoltR.LOW",
 "SCL32-BL03:CM18-EH8401:VoltR.LOW",
 "SCL32-BL03:CM19-EH8401:VoltR.LOW"

};
float	HCMEH8401VLOW;
assign	HCMEH8401VLOW to "{GrpHCMEH8401V}.LOW";
monitor HCMEH8401VLOW;
evflag  evHCMEH8401VLOW;
sync 	HCMEH8401VLOW evHCMEH8401VLOW;

float HCMEH8401WLOWArray[32];
assign HCMEH8401WLOWArray to {
 "SCL32-BL02:CM01-EH8401:WattR.LOW",
 "SCL32-BL02:CM02-EH8401:WattR.LOW",
 "SCL32-BL02:CM03-EH8401:WattR.LOW",
 "SCL32-BL02:CM04-EH8401:WattR.LOW",
 "SCL32-BL02:CM05-EH8401:WattR.LOW",
 "SCL32-BL02:CM06-EH8401:WattR.LOW",
 "SCL32-BL02:CM07-EH8401:WattR.LOW",
 "SCL32-BL02:CM08-EH8401:WattR.LOW",
 "SCL32-BL02:CM09-EH8401:WattR.LOW",
 "SCL32-BL02:CM10-EH8401:WattR.LOW",
 "SCL32-BL02:CM11-EH8401:WattR.LOW",
 "SCL32-BL02:CM12-EH8401:WattR.LOW",
 "SCL32-BL02:CM13-EH8401:WattR.LOW",
 "SCL32-BL03:CM01-EH8401:WattR.LOW",
 "SCL32-BL03:CM02-EH8401:WattR.LOW",
 "SCL32-BL03:CM03-EH8401:WattR.LOW",
 "SCL32-BL03:CM04-EH8401:WattR.LOW",
 "SCL32-BL03:CM05-EH8401:WattR.LOW",
 "SCL32-BL03:CM06-EH8401:WattR.LOW",
 "SCL32-BL03:CM07-EH8401:WattR.LOW",
 "SCL32-BL03:CM08-EH8401:WattR.LOW",
 "SCL32-BL03:CM09-EH8401:WattR.LOW",
 "SCL32-BL03:CM10-EH8401:WattR.LOW",
 "SCL32-BL03:CM11-EH8401:WattR.LOW",
 "SCL32-BL03:CM12-EH8401:WattR.LOW",
 "SCL32-BL03:CM13-EH8401:WattR.LOW",
 "SCL32-BL03:CM14-EH8401:WattR.LOW",
 "SCL32-BL03:CM15-EH8401:WattR.LOW",
 "SCL32-BL03:CM16-EH8401:WattR.LOW",
 "SCL32-BL03:CM17-EH8401:WattR.LOW",
 "SCL32-BL03:CM18-EH8401:WattR.LOW",
 "SCL32-BL03:CM19-EH8401:WattR.LOW"

};
float	HCMEH8401WLOW;
assign	HCMEH8401WLOW to "{GrpHCMEH8401W}.LOW";
monitor HCMEH8401WLOW;
evflag  evHCMEH8401WLOW;
sync 	HCMEH8401WLOW evHCMEH8401WLOW;

float HCMEH8402VLOWArray[32];
assign HCMEH8402VLOWArray to {
 "SCL32-BL02:CM01-EH8402:VoltR.LOW",
 "SCL32-BL02:CM02-EH8402:VoltR.LOW",
 "SCL32-BL02:CM03-EH8402:VoltR.LOW",
 "SCL32-BL02:CM04-EH8402:VoltR.LOW",
 "SCL32-BL02:CM05-EH8402:VoltR.LOW",
 "SCL32-BL02:CM06-EH8402:VoltR.LOW",
 "SCL32-BL02:CM07-EH8402:VoltR.LOW",
 "SCL32-BL02:CM08-EH8402:VoltR.LOW",
 "SCL32-BL02:CM09-EH8402:VoltR.LOW",
 "SCL32-BL02:CM10-EH8402:VoltR.LOW",
 "SCL32-BL02:CM11-EH8402:VoltR.LOW",
 "SCL32-BL02:CM12-EH8402:VoltR.LOW",
 "SCL32-BL02:CM13-EH8402:VoltR.LOW",
 "SCL32-BL03:CM01-EH8402:VoltR.LOW",
 "SCL32-BL03:CM02-EH8402:VoltR.LOW",
 "SCL32-BL03:CM03-EH8402:VoltR.LOW",
 "SCL32-BL03:CM04-EH8402:VoltR.LOW",
 "SCL32-BL03:CM05-EH8402:VoltR.LOW",
 "SCL32-BL03:CM06-EH8402:VoltR.LOW",
 "SCL32-BL03:CM07-EH8402:VoltR.LOW",
 "SCL32-BL03:CM08-EH8402:VoltR.LOW",
 "SCL32-BL03:CM09-EH8402:VoltR.LOW",
 "SCL32-BL03:CM10-EH8402:VoltR.LOW",
 "SCL32-BL03:CM11-EH8402:VoltR.LOW",
 "SCL32-BL03:CM12-EH8402:VoltR.LOW",
 "SCL32-BL03:CM13-EH8402:VoltR.LOW",
 "SCL32-BL03:CM14-EH8402:VoltR.LOW",
 "SCL32-BL03:CM15-EH8402:VoltR.LOW",
 "SCL32-BL03:CM16-EH8402:VoltR.LOW",
 "SCL32-BL03:CM17-EH8402:VoltR.LOW",
 "SCL32-BL03:CM18-EH8402:VoltR.LOW",
 "SCL32-BL03:CM19-EH8402:VoltR.LOW"

};
float	HCMEH8402VLOW;
assign	HCMEH8402VLOW to "{GrpHCMEH8402V}.LOW";
monitor HCMEH8402VLOW;
evflag  evHCMEH8402VLOW;
sync 	HCMEH8402VLOW evHCMEH8402VLOW;

float HCMEH8402WLOWArray[32];
assign HCMEH8402WLOWArray to {
 "SCL32-BL02:CM01-EH8402:WattR.LOW",
 "SCL32-BL02:CM02-EH8402:WattR.LOW",
 "SCL32-BL02:CM03-EH8402:WattR.LOW",
 "SCL32-BL02:CM04-EH8402:WattR.LOW",
 "SCL32-BL02:CM05-EH8402:WattR.LOW",
 "SCL32-BL02:CM06-EH8402:WattR.LOW",
 "SCL32-BL02:CM07-EH8402:WattR.LOW",
 "SCL32-BL02:CM08-EH8402:WattR.LOW",
 "SCL32-BL02:CM09-EH8402:WattR.LOW",
 "SCL32-BL02:CM10-EH8402:WattR.LOW",
 "SCL32-BL02:CM11-EH8402:WattR.LOW",
 "SCL32-BL02:CM12-EH8402:WattR.LOW",
 "SCL32-BL02:CM13-EH8402:WattR.LOW",
 "SCL32-BL03:CM01-EH8402:WattR.LOW",
 "SCL32-BL03:CM02-EH8402:WattR.LOW",
 "SCL32-BL03:CM03-EH8402:WattR.LOW",
 "SCL32-BL03:CM04-EH8402:WattR.LOW",
 "SCL32-BL03:CM05-EH8402:WattR.LOW",
 "SCL32-BL03:CM06-EH8402:WattR.LOW",
 "SCL32-BL03:CM07-EH8402:WattR.LOW",
 "SCL32-BL03:CM08-EH8402:WattR.LOW",
 "SCL32-BL03:CM09-EH8402:WattR.LOW",
 "SCL32-BL03:CM10-EH8402:WattR.LOW",
 "SCL32-BL03:CM11-EH8402:WattR.LOW",
 "SCL32-BL03:CM12-EH8402:WattR.LOW",
 "SCL32-BL03:CM13-EH8402:WattR.LOW",
 "SCL32-BL03:CM14-EH8402:WattR.LOW",
 "SCL32-BL03:CM15-EH8402:WattR.LOW",
 "SCL32-BL03:CM16-EH8402:WattR.LOW",
 "SCL32-BL03:CM17-EH8402:WattR.LOW",
 "SCL32-BL03:CM18-EH8402:WattR.LOW",
 "SCL32-BL03:CM19-EH8402:WattR.LOW"

};
float	HCMEH8402WLOW;
assign	HCMEH8402WLOW to "{GrpHCMEH8402W}.LOW";
monitor HCMEH8402WLOW;
evflag  evHCMEH8402WLOW;
sync 	HCMEH8402WLOW evHCMEH8402WLOW;

float HCMEH8201VLOWArray[32];
assign HCMEH8201VLOWArray to {
 "SCL32-BL02:CM01-EH8201:VoltR.LOW",
 "SCL32-BL02:CM02-EH8201:VoltR.LOW",
 "SCL32-BL02:CM03-EH8201:VoltR.LOW",
 "SCL32-BL02:CM04-EH8201:VoltR.LOW",
 "SCL32-BL02:CM05-EH8201:VoltR.LOW",
 "SCL32-BL02:CM06-EH8201:VoltR.LOW",
 "SCL32-BL02:CM07-EH8201:VoltR.LOW",
 "SCL32-BL02:CM08-EH8201:VoltR.LOW",
 "SCL32-BL02:CM09-EH8201:VoltR.LOW",
 "SCL32-BL02:CM10-EH8201:VoltR.LOW",
 "SCL32-BL02:CM11-EH8201:VoltR.LOW",
 "SCL32-BL02:CM12-EH8201:VoltR.LOW",
 "SCL32-BL02:CM13-EH8201:VoltR.LOW",
 "SCL32-BL03:CM01-EH8201:VoltR.LOW",
 "SCL32-BL03:CM02-EH8201:VoltR.LOW",
 "SCL32-BL03:CM03-EH8201:VoltR.LOW",
 "SCL32-BL03:CM04-EH8201:VoltR.LOW",
 "SCL32-BL03:CM05-EH8201:VoltR.LOW",
 "SCL32-BL03:CM06-EH8201:VoltR.LOW",
 "SCL32-BL03:CM07-EH8201:VoltR.LOW",
 "SCL32-BL03:CM08-EH8201:VoltR.LOW",
 "SCL32-BL03:CM09-EH8201:VoltR.LOW",
 "SCL32-BL03:CM10-EH8201:VoltR.LOW",
 "SCL32-BL03:CM11-EH8201:VoltR.LOW",
 "SCL32-BL03:CM12-EH8201:VoltR.LOW",
 "SCL32-BL03:CM13-EH8201:VoltR.LOW",
 "SCL32-BL03:CM14-EH8201:VoltR.LOW",
 "SCL32-BL03:CM15-EH8201:VoltR.LOW",
 "SCL32-BL03:CM16-EH8201:VoltR.LOW",
 "SCL32-BL03:CM17-EH8201:VoltR.LOW",
 "SCL32-BL03:CM18-EH8201:VoltR.LOW",
 "SCL32-BL03:CM19-EH8201:VoltR.LOW"

};
float	HCMEH8201VLOW;
assign	HCMEH8201VLOW to "{GrpHCMEH8201V}.LOW";
monitor HCMEH8201VLOW;
evflag  evHCMEH8201VLOW;
sync 	HCMEH8201VLOW evHCMEH8201VLOW;

float HCMEH8201WLOWArray[32];
assign HCMEH8201WLOWArray to {
 "SCL32-BL02:CM01-EH8201:WattR.LOW",
 "SCL32-BL02:CM02-EH8201:WattR.LOW",
 "SCL32-BL02:CM03-EH8201:WattR.LOW",
 "SCL32-BL02:CM04-EH8201:WattR.LOW",
 "SCL32-BL02:CM05-EH8201:WattR.LOW",
 "SCL32-BL02:CM06-EH8201:WattR.LOW",
 "SCL32-BL02:CM07-EH8201:WattR.LOW",
 "SCL32-BL02:CM08-EH8201:WattR.LOW",
 "SCL32-BL02:CM09-EH8201:WattR.LOW",
 "SCL32-BL02:CM10-EH8201:WattR.LOW",
 "SCL32-BL02:CM11-EH8201:WattR.LOW",
 "SCL32-BL02:CM12-EH8201:WattR.LOW",
 "SCL32-BL02:CM13-EH8201:WattR.LOW",
 "SCL32-BL03:CM01-EH8201:WattR.LOW",
 "SCL32-BL03:CM02-EH8201:WattR.LOW",
 "SCL32-BL03:CM03-EH8201:WattR.LOW",
 "SCL32-BL03:CM04-EH8201:WattR.LOW",
 "SCL32-BL03:CM05-EH8201:WattR.LOW",
 "SCL32-BL03:CM06-EH8201:WattR.LOW",
 "SCL32-BL03:CM07-EH8201:WattR.LOW",
 "SCL32-BL03:CM08-EH8201:WattR.LOW",
 "SCL32-BL03:CM09-EH8201:WattR.LOW",
 "SCL32-BL03:CM10-EH8201:WattR.LOW",
 "SCL32-BL03:CM11-EH8201:WattR.LOW",
 "SCL32-BL03:CM12-EH8201:WattR.LOW",
 "SCL32-BL03:CM13-EH8201:WattR.LOW",
 "SCL32-BL03:CM14-EH8201:WattR.LOW",
 "SCL32-BL03:CM15-EH8201:WattR.LOW",
 "SCL32-BL03:CM16-EH8201:WattR.LOW",
 "SCL32-BL03:CM17-EH8201:WattR.LOW",
 "SCL32-BL03:CM18-EH8201:WattR.LOW",
 "SCL32-BL03:CM19-EH8201:WattR.LOW"

};
float	HCMEH8201WLOW;
assign	HCMEH8201WLOW to "{GrpHCMEH8201W}.LOW";
monitor HCMEH8201WLOW;
evflag  evHCMEH8201WLOW;
sync 	HCMEH8201WLOW evHCMEH8201WLOW;



float HVBxPT7501LOLOArray[32];
assign HVBxPT7501LOLOArray to {
 "SCL32-CDL02:VBx01-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7501:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7501:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7501:PresR.LOLO"

};
float	HVBxPT7501LOLO;
assign	HVBxPT7501LOLO to "{GrpHVBxPT7501}.LOLO";
monitor HVBxPT7501LOLO;
evflag  evHVBxPT7501LOLO;
sync 	HVBxPT7501LOLO evHVBxPT7501LOLO;

float HVBxPT7502LOLOArray[32];
assign HVBxPT7502LOLOArray to {
 "SCL32-CDL02:VBx01-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7502:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7502:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7502:PresR.LOLO"

};
float	HVBxPT7502LOLO;
assign	HVBxPT7502LOLO to "{GrpHVBxPT7502}.LOLO";
monitor HVBxPT7502LOLO;
evflag  evHVBxPT7502LOLO;
sync 	HVBxPT7502LOLO evHVBxPT7502LOLO;

float HVBxPT7503LOLOArray[32];
assign HVBxPT7503LOLOArray to {
 "SCL32-CDL02:VBx01-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7503:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7503:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7503:PresR.LOLO"

};
float	HVBxPT7503LOLO;
assign	HVBxPT7503LOLO to "{GrpHVBxPT7503}.LOLO";
monitor HVBxPT7503LOLO;
evflag  evHVBxPT7503LOLO;
sync 	HVBxPT7503LOLO evHVBxPT7503LOLO;

float HVBxPT7401LOLOArray[32];
assign HVBxPT7401LOLOArray to {
 "SCL32-CDL02:VBx01-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7401:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7401:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7401:PresR.LOLO"

};
float	HVBxPT7401LOLO;
assign	HVBxPT7401LOLO to "{GrpHVBxPT7401}.LOLO";
monitor HVBxPT7401LOLO;
evflag  evHVBxPT7401LOLO;
sync 	HVBxPT7401LOLO evHVBxPT7401LOLO;

float HVBxPT7301LOLOArray[32];
assign HVBxPT7301LOLOArray to {
 "SCL32-CDL02:VBx01-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7301:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7301:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7301:PresR.LOLO"

};
float	HVBxPT7301LOLO;
assign	HVBxPT7301LOLO to "{GrpHVBxPT7301}.LOLO";
monitor HVBxPT7301LOLO;
evflag  evHVBxPT7301LOLO;
sync 	HVBxPT7301LOLO evHVBxPT7301LOLO;

float HVBxPT7201LOLOArray[32];
assign HVBxPT7201LOLOArray to {
 "SCL32-CDL02:VBx01-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7201:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7201:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7201:PresR.LOLO"

};
float	HVBxPT7201LOLO;
assign	HVBxPT7201LOLO to "{GrpHVBxPT7201}.LOLO";
monitor HVBxPT7201LOLO;
evflag  evHVBxPT7201LOLO;
sync 	HVBxPT7201LOLO evHVBxPT7201LOLO;

float HVBxPT7102LOLOArray[5];
assign HVBxPT7102LOLOArray to {
 "SCL32-CDL02:VBx04-PT7102:VacuumR.LOLO",
 "SCL32-CDL02:VBx09-PT7102:VacuumR.LOLO",
 "SCL32-CDL03:VBx04-PT7102:VacuumR.LOLO",
 "SCL32-CDL03:VBx09-PT7102:VacuumR.LOLO",
 "SCL32-CDL03:VBx18-PT7102:VacuumR.LOLO"

};
float	HVBxPT7102LOLO;
assign	HVBxPT7102LOLO to "{GrpHVBxPT7102}.LOLO";
monitor HVBxPT7102LOLO;
evflag  evHVBxPT7102LOLO;
sync 	HVBxPT7102LOLO evHVBxPT7102LOLO;

float HVBxPT7202LOLOArray[32];
assign HVBxPT7202LOLOArray to {
 "SCL32-CDL02:VBx01-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7202:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7202:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7202:PresR.LOLO"

};
float	HVBxPT7202LOLO;
assign	HVBxPT7202LOLO to "{GrpHVBxPT7202}.LOLO";
monitor HVBxPT7202LOLO;
evflag  evHVBxPT7202LOLO;
sync 	HVBxPT7202LOLO evHVBxPT7202LOLO;

float HVBxPT7203LOLOArray[32];
assign HVBxPT7203LOLOArray to {
 "SCL32-CDL02:VBx01-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx02-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx03-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx04-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx05-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx06-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx07-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx08-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx09-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx10-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx11-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx12-PT7203:PresR.LOLO",
 "SCL32-CDL02:VBx13-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx01-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx02-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx03-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx04-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx05-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx06-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx07-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx08-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx09-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx10-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx11-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx12-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx13-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx14-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx15-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx16-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx17-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx18-PT7203:PresR.LOLO",
 "SCL32-CDL03:VBx19-PT7203:PresR.LOLO"

};
float	HVBxPT7203LOLO;
assign	HVBxPT7203LOLO to "{GrpHVBxPT7203}.LOLO";
monitor HVBxPT7203LOLO;
evflag  evHVBxPT7203LOLO;
sync 	HVBxPT7203LOLO evHVBxPT7203LOLO;

float HVBxTT7501LOLOArray[32];
assign HVBxTT7501LOLOArray to {
 "SCL32-CDL02:VBx01-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx02-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx03-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx04-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx05-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx06-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx07-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx08-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx09-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx10-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx11-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx12-TT7501:TempR.LOLO",
 "SCL32-CDL02:VBx13-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx01-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx02-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx03-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx04-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx05-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx06-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx07-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx08-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx09-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx10-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx11-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx12-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx13-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx14-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx15-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx16-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx17-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx18-TT7501:TempR.LOLO",
 "SCL32-CDL03:VBx19-TT7501:TempR.LOLO"

};
float	HVBxTT7501LOLO;
assign	HVBxTT7501LOLO to "{GrpHVBxTT7501}.LOLO";
monitor HVBxTT7501LOLO;
evflag  evHVBxTT7501LOLO;
sync 	HVBxTT7501LOLO evHVBxTT7501LOLO;

float HVBxTT7502LOLOArray[32];
assign HVBxTT7502LOLOArray to {
 "SCL32-CDL02:VBx01-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx02-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx03-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx04-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx05-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx06-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx07-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx08-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx09-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx10-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx11-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx12-TT7502:TempR.LOLO",
 "SCL32-CDL02:VBx13-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx01-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx02-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx03-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx04-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx05-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx06-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx07-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx08-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx09-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx10-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx11-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx12-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx13-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx14-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx15-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx16-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx17-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx18-TT7502:TempR.LOLO",
 "SCL32-CDL03:VBx19-TT7502:TempR.LOLO"

};
float	HVBxTT7502LOLO;
assign	HVBxTT7502LOLO to "{GrpHVBxTT7502}.LOLO";
monitor HVBxTT7502LOLO;
evflag  evHVBxTT7502LOLO;
sync 	HVBxTT7502LOLO evHVBxTT7502LOLO;

float HVBxTT7503LOLOArray[32];
assign HVBxTT7503LOLOArray to {
 "SCL32-CDL02:VBx01-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx02-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx03-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx04-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx05-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx06-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx07-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx08-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx09-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx10-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx11-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx12-TT7503:TempR.LOLO",
 "SCL32-CDL02:VBx13-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx01-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx02-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx03-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx04-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx05-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx06-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx07-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx08-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx09-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx10-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx11-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx12-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx13-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx14-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx15-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx16-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx17-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx18-TT7503:TempR.LOLO",
 "SCL32-CDL03:VBx19-TT7503:TempR.LOLO"

};
float	HVBxTT7503LOLO;
assign	HVBxTT7503LOLO to "{GrpHVBxTT7503}.LOLO";
monitor HVBxTT7503LOLO;
evflag  evHVBxTT7503LOLO;
sync 	HVBxTT7503LOLO evHVBxTT7503LOLO;

float HVBxTT7504LOLOArray[32];
assign HVBxTT7504LOLOArray to {
 "SCL32-CDL02:VBx01-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx02-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx03-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx04-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx05-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx06-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx07-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx08-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx09-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx10-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx11-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx12-TT7504:TempR.LOLO",
 "SCL32-CDL02:VBx13-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx01-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx02-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx03-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx04-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx05-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx06-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx07-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx08-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx09-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx10-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx11-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx12-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx13-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx14-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx15-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx16-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx17-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx18-TT7504:TempR.LOLO",
 "SCL32-CDL03:VBx19-TT7504:TempR.LOLO"

};
float	HVBxTT7504LOLO;
assign	HVBxTT7504LOLO to "{GrpHVBxTT7504}.LOLO";
monitor HVBxTT7504LOLO;
evflag  evHVBxTT7504LOLO;
sync 	HVBxTT7504LOLO evHVBxTT7504LOLO;

float HVBxTT7401LOLOArray[32];
assign HVBxTT7401LOLOArray to {
 "SCL32-CDL02:VBx01-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx02-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx03-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx04-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx05-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx06-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx07-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx08-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx09-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx10-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx11-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx12-TT7401:TempR.LOLO",
 "SCL32-CDL02:VBx13-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx01-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx02-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx03-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx04-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx05-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx06-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx07-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx08-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx09-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx10-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx11-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx12-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx13-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx14-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx15-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx16-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx17-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx18-TT7401:TempR.LOLO",
 "SCL32-CDL03:VBx19-TT7401:TempR.LOLO"

};
float	HVBxTT7401LOLO;
assign	HVBxTT7401LOLO to "{GrpHVBxTT7401}.LOLO";
monitor HVBxTT7401LOLO;
evflag  evHVBxTT7401LOLO;
sync 	HVBxTT7401LOLO evHVBxTT7401LOLO;

float HVBxTT7301LOLOArray[32];
assign HVBxTT7301LOLOArray to {
 "SCL32-CDL02:VBx01-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx02-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx03-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx04-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx05-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx06-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx07-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx08-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx09-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx10-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx11-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx12-TT7301:TempR.LOLO",
 "SCL32-CDL02:VBx13-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx01-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx02-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx03-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx04-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx05-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx06-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx07-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx08-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx09-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx10-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx11-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx12-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx13-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx14-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx15-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx16-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx17-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx18-TT7301:TempR.LOLO",
 "SCL32-CDL03:VBx19-TT7301:TempR.LOLO"

};
float	HVBxTT7301LOLO;
assign	HVBxTT7301LOLO to "{GrpHVBxTT7301}.LOLO";
monitor HVBxTT7301LOLO;
evflag  evHVBxTT7301LOLO;
sync 	HVBxTT7301LOLO evHVBxTT7301LOLO;

float HVBxTT7201LOLOArray[32];
assign HVBxTT7201LOLOArray to {
 "SCL32-CDL02:VBx01-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx02-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx03-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx04-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx05-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx06-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx07-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx08-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx09-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx10-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx11-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx12-TT7201:TempR.LOLO",
 "SCL32-CDL02:VBx13-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx01-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx02-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx03-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx04-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx05-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx06-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx07-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx08-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx09-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx10-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx11-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx12-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx13-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx14-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx15-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx16-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx17-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx18-TT7201:TempR.LOLO",
 "SCL32-CDL03:VBx19-TT7201:TempR.LOLO"

};
float	HVBxTT7201LOLO;
assign	HVBxTT7201LOLO to "{GrpHVBxTT7201}.LOLO";
monitor HVBxTT7201LOLO;
evflag  evHVBxTT7201LOLO;
sync 	HVBxTT7201LOLO evHVBxTT7201LOLO;

float HCMPT8501LOLOArray[32];
assign HCMPT8501LOLOArray to {
 "SCL32-BL02:CM01-PT8501:PresR.LOLO",
 "SCL32-BL02:CM02-PT8501:PresR.LOLO",
 "SCL32-BL02:CM03-PT8501:PresR.LOLO",
 "SCL32-BL02:CM04-PT8501:PresR.LOLO",
 "SCL32-BL02:CM05-PT8501:PresR.LOLO",
 "SCL32-BL02:CM06-PT8501:PresR.LOLO",
 "SCL32-BL02:CM07-PT8501:PresR.LOLO",
 "SCL32-BL02:CM08-PT8501:PresR.LOLO",
 "SCL32-BL02:CM09-PT8501:PresR.LOLO",
 "SCL32-BL02:CM10-PT8501:PresR.LOLO",
 "SCL32-BL02:CM11-PT8501:PresR.LOLO",
 "SCL32-BL02:CM12-PT8501:PresR.LOLO",
 "SCL32-BL02:CM13-PT8501:PresR.LOLO",
 "SCL32-BL03:CM01-PT8501:PresR.LOLO",
 "SCL32-BL03:CM02-PT8501:PresR.LOLO",
 "SCL32-BL03:CM03-PT8501:PresR.LOLO",
 "SCL32-BL03:CM04-PT8501:PresR.LOLO",
 "SCL32-BL03:CM05-PT8501:PresR.LOLO",
 "SCL32-BL03:CM06-PT8501:PresR.LOLO",
 "SCL32-BL03:CM07-PT8501:PresR.LOLO",
 "SCL32-BL03:CM08-PT8501:PresR.LOLO",
 "SCL32-BL03:CM09-PT8501:PresR.LOLO",
 "SCL32-BL03:CM10-PT8501:PresR.LOLO",
 "SCL32-BL03:CM11-PT8501:PresR.LOLO",
 "SCL32-BL03:CM12-PT8501:PresR.LOLO",
 "SCL32-BL03:CM13-PT8501:PresR.LOLO",
 "SCL32-BL03:CM14-PT8501:PresR.LOLO",
 "SCL32-BL03:CM15-PT8501:PresR.LOLO",
 "SCL32-BL03:CM16-PT8501:PresR.LOLO",
 "SCL32-BL03:CM17-PT8501:PresR.LOLO",
 "SCL32-BL03:CM18-PT8501:PresR.LOLO",
 "SCL32-BL03:CM19-PT8501:PresR.LOLO"

};
float	HCMPT8501LOLO;
assign	HCMPT8501LOLO to "{GrpHCMPT8501}.LOLO";
monitor HCMPT8501LOLO;
evflag  evHCMPT8501LOLO;
sync 	HCMPT8501LOLO evHCMPT8501LOLO;

float HCMPT8301LOLOArray[32];
assign HCMPT8301LOLOArray to {
 "SCL32-BL02:CM01-PT8301:PresR.LOLO",
 "SCL32-BL02:CM02-PT8301:PresR.LOLO",
 "SCL32-BL02:CM03-PT8301:PresR.LOLO",
 "SCL32-BL02:CM04-PT8301:PresR.LOLO",
 "SCL32-BL02:CM05-PT8301:PresR.LOLO",
 "SCL32-BL02:CM06-PT8301:PresR.LOLO",
 "SCL32-BL02:CM07-PT8301:PresR.LOLO",
 "SCL32-BL02:CM08-PT8301:PresR.LOLO",
 "SCL32-BL02:CM09-PT8301:PresR.LOLO",
 "SCL32-BL02:CM10-PT8301:PresR.LOLO",
 "SCL32-BL02:CM11-PT8301:PresR.LOLO",
 "SCL32-BL02:CM12-PT8301:PresR.LOLO",
 "SCL32-BL02:CM13-PT8301:PresR.LOLO",
 "SCL32-BL03:CM01-PT8301:PresR.LOLO",
 "SCL32-BL03:CM02-PT8301:PresR.LOLO",
 "SCL32-BL03:CM03-PT8301:PresR.LOLO",
 "SCL32-BL03:CM04-PT8301:PresR.LOLO",
 "SCL32-BL03:CM05-PT8301:PresR.LOLO",
 "SCL32-BL03:CM06-PT8301:PresR.LOLO",
 "SCL32-BL03:CM07-PT8301:PresR.LOLO",
 "SCL32-BL03:CM08-PT8301:PresR.LOLO",
 "SCL32-BL03:CM09-PT8301:PresR.LOLO",
 "SCL32-BL03:CM10-PT8301:PresR.LOLO",
 "SCL32-BL03:CM11-PT8301:PresR.LOLO",
 "SCL32-BL03:CM12-PT8301:PresR.LOLO",
 "SCL32-BL03:CM13-PT8301:PresR.LOLO",
 "SCL32-BL03:CM14-PT8301:PresR.LOLO",
 "SCL32-BL03:CM15-PT8301:PresR.LOLO",
 "SCL32-BL03:CM16-PT8301:PresR.LOLO",
 "SCL32-BL03:CM17-PT8301:PresR.LOLO",
 "SCL32-BL03:CM18-PT8301:PresR.LOLO",
 "SCL32-BL03:CM19-PT8301:PresR.LOLO"

};
float	HCMPT8301LOLO;
assign	HCMPT8301LOLO to "{GrpHCMPT8301}.LOLO";
monitor HCMPT8301LOLO;
evflag  evHCMPT8301LOLO;
sync 	HCMPT8301LOLO evHCMPT8301LOLO;

float HCMPT8201LOLOArray[32];
assign HCMPT8201LOLOArray to {
 "SCL32-BL02:CM01-PT8201:PresR.LOLO",
 "SCL32-BL02:CM02-PT8201:PresR.LOLO",
 "SCL32-BL02:CM03-PT8201:PresR.LOLO",
 "SCL32-BL02:CM04-PT8201:PresR.LOLO",
 "SCL32-BL02:CM05-PT8201:PresR.LOLO",
 "SCL32-BL02:CM06-PT8201:PresR.LOLO",
 "SCL32-BL02:CM07-PT8201:PresR.LOLO",
 "SCL32-BL02:CM08-PT8201:PresR.LOLO",
 "SCL32-BL02:CM09-PT8201:PresR.LOLO",
 "SCL32-BL02:CM10-PT8201:PresR.LOLO",
 "SCL32-BL02:CM11-PT8201:PresR.LOLO",
 "SCL32-BL02:CM12-PT8201:PresR.LOLO",
 "SCL32-BL02:CM13-PT8201:PresR.LOLO",
 "SCL32-BL03:CM01-PT8201:PresR.LOLO",
 "SCL32-BL03:CM02-PT8201:PresR.LOLO",
 "SCL32-BL03:CM03-PT8201:PresR.LOLO",
 "SCL32-BL03:CM04-PT8201:PresR.LOLO",
 "SCL32-BL03:CM05-PT8201:PresR.LOLO",
 "SCL32-BL03:CM06-PT8201:PresR.LOLO",
 "SCL32-BL03:CM07-PT8201:PresR.LOLO",
 "SCL32-BL03:CM08-PT8201:PresR.LOLO",
 "SCL32-BL03:CM09-PT8201:PresR.LOLO",
 "SCL32-BL03:CM10-PT8201:PresR.LOLO",
 "SCL32-BL03:CM11-PT8201:PresR.LOLO",
 "SCL32-BL03:CM12-PT8201:PresR.LOLO",
 "SCL32-BL03:CM13-PT8201:PresR.LOLO",
 "SCL32-BL03:CM14-PT8201:PresR.LOLO",
 "SCL32-BL03:CM15-PT8201:PresR.LOLO",
 "SCL32-BL03:CM16-PT8201:PresR.LOLO",
 "SCL32-BL03:CM17-PT8201:PresR.LOLO",
 "SCL32-BL03:CM18-PT8201:PresR.LOLO",
 "SCL32-BL03:CM19-PT8201:PresR.LOLO"

};
float	HCMPT8201LOLO;
assign	HCMPT8201LOLO to "{GrpHCMPT8201}.LOLO";
monitor HCMPT8201LOLO;
evflag  evHCMPT8201LOLO;
sync 	HCMPT8201LOLO evHCMPT8201LOLO;

float HCMPT8202LOLOArray[32];
assign HCMPT8202LOLOArray to {
 "SCL32-BL02:CM01-PT8202:PresR.LOLO",
 "SCL32-BL02:CM02-PT8202:PresR.LOLO",
 "SCL32-BL02:CM03-PT8202:PresR.LOLO",
 "SCL32-BL02:CM04-PT8202:PresR.LOLO",
 "SCL32-BL02:CM05-PT8202:PresR.LOLO",
 "SCL32-BL02:CM06-PT8202:PresR.LOLO",
 "SCL32-BL02:CM07-PT8202:PresR.LOLO",
 "SCL32-BL02:CM08-PT8202:PresR.LOLO",
 "SCL32-BL02:CM09-PT8202:PresR.LOLO",
 "SCL32-BL02:CM10-PT8202:PresR.LOLO",
 "SCL32-BL02:CM11-PT8202:PresR.LOLO",
 "SCL32-BL02:CM12-PT8202:PresR.LOLO",
 "SCL32-BL02:CM13-PT8202:PresR.LOLO",
 "SCL32-BL03:CM01-PT8202:PresR.LOLO",
 "SCL32-BL03:CM02-PT8202:PresR.LOLO",
 "SCL32-BL03:CM03-PT8202:PresR.LOLO",
 "SCL32-BL03:CM04-PT8202:PresR.LOLO",
 "SCL32-BL03:CM05-PT8202:PresR.LOLO",
 "SCL32-BL03:CM06-PT8202:PresR.LOLO",
 "SCL32-BL03:CM07-PT8202:PresR.LOLO",
 "SCL32-BL03:CM08-PT8202:PresR.LOLO",
 "SCL32-BL03:CM09-PT8202:PresR.LOLO",
 "SCL32-BL03:CM10-PT8202:PresR.LOLO",
 "SCL32-BL03:CM11-PT8202:PresR.LOLO",
 "SCL32-BL03:CM12-PT8202:PresR.LOLO",
 "SCL32-BL03:CM13-PT8202:PresR.LOLO",
 "SCL32-BL03:CM14-PT8202:PresR.LOLO",
 "SCL32-BL03:CM15-PT8202:PresR.LOLO",
 "SCL32-BL03:CM16-PT8202:PresR.LOLO",
 "SCL32-BL03:CM17-PT8202:PresR.LOLO",
 "SCL32-BL03:CM18-PT8202:PresR.LOLO",
 "SCL32-BL03:CM19-PT8202:PresR.LOLO"

};
float	HCMPT8202LOLO;
assign	HCMPT8202LOLO to "{GrpHCMPT8202}.LOLO";
monitor HCMPT8202LOLO;
evflag  evHCMPT8202LOLO;
sync 	HCMPT8202LOLO evHCMPT8202LOLO;

float HCMPT8203LOLOArray[32];
assign HCMPT8203LOLOArray to {
 "SCL32-BL02:CM01-PT8203:PresR.LOLO",
 "SCL32-BL02:CM02-PT8203:PresR.LOLO",
 "SCL32-BL02:CM03-PT8203:PresR.LOLO",
 "SCL32-BL02:CM04-PT8203:PresR.LOLO",
 "SCL32-BL02:CM05-PT8203:PresR.LOLO",
 "SCL32-BL02:CM06-PT8203:PresR.LOLO",
 "SCL32-BL02:CM07-PT8203:PresR.LOLO",
 "SCL32-BL02:CM08-PT8203:PresR.LOLO",
 "SCL32-BL02:CM09-PT8203:PresR.LOLO",
 "SCL32-BL02:CM10-PT8203:PresR.LOLO",
 "SCL32-BL02:CM11-PT8203:PresR.LOLO",
 "SCL32-BL02:CM12-PT8203:PresR.LOLO",
 "SCL32-BL02:CM13-PT8203:PresR.LOLO",
 "SCL32-BL03:CM01-PT8203:PresR.LOLO",
 "SCL32-BL03:CM02-PT8203:PresR.LOLO",
 "SCL32-BL03:CM03-PT8203:PresR.LOLO",
 "SCL32-BL03:CM04-PT8203:PresR.LOLO",
 "SCL32-BL03:CM05-PT8203:PresR.LOLO",
 "SCL32-BL03:CM06-PT8203:PresR.LOLO",
 "SCL32-BL03:CM07-PT8203:PresR.LOLO",
 "SCL32-BL03:CM08-PT8203:PresR.LOLO",
 "SCL32-BL03:CM09-PT8203:PresR.LOLO",
 "SCL32-BL03:CM10-PT8203:PresR.LOLO",
 "SCL32-BL03:CM11-PT8203:PresR.LOLO",
 "SCL32-BL03:CM12-PT8203:PresR.LOLO",
 "SCL32-BL03:CM13-PT8203:PresR.LOLO",
 "SCL32-BL03:CM14-PT8203:PresR.LOLO",
 "SCL32-BL03:CM15-PT8203:PresR.LOLO",
 "SCL32-BL03:CM16-PT8203:PresR.LOLO",
 "SCL32-BL03:CM17-PT8203:PresR.LOLO",
 "SCL32-BL03:CM18-PT8203:PresR.LOLO",
 "SCL32-BL03:CM19-PT8203:PresR.LOLO"

};
float	HCMPT8203LOLO;
assign	HCMPT8203LOLO to "{GrpHCMPT8203}.LOLO";
monitor HCMPT8203LOLO;
evflag  evHCMPT8203LOLO;
sync 	HCMPT8203LOLO evHCMPT8203LOLO;

float HCMPT8101LOLOArray[32];
assign HCMPT8101LOLOArray to {
 "SCL32-BL02:CM01-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM02-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM03-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM04-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM05-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM06-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM07-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM08-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM09-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM10-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM11-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM12-PT8101:VacuumR.LOLO",
 "SCL32-BL02:CM13-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM01-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM02-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM03-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM04-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM05-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM06-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM07-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM08-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM09-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM10-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM11-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM12-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM13-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM14-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM15-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM16-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM17-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM18-PT8101:VacuumR.LOLO",
 "SCL32-BL03:CM19-PT8101:VacuumR.LOLO"

};
float	HCMPT8101LOLO;
assign	HCMPT8101LOLO to "{GrpHCMPT8101}.LOLO";
monitor HCMPT8101LOLO;
evflag  evHCMPT8101LOLO;
sync 	HCMPT8101LOLO evHCMPT8101LOLO;

float HCMPT8102LOLOArray[32];
assign HCMPT8102LOLOArray to {
 "SCL32-BL02:CM01-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM02-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM03-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM04-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM05-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM06-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM07-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM08-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM09-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM10-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM11-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM12-PT8102:VacuumR.LOLO",
 "SCL32-BL02:CM13-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM01-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM02-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM03-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM04-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM05-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM06-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM07-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM08-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM09-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM10-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM11-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM12-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM13-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM14-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM15-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM16-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM17-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM18-PT8102:VacuumR.LOLO",
 "SCL32-BL03:CM19-PT8102:VacuumR.LOLO"

};
float	HCMPT8102LOLO;
assign	HCMPT8102LOLO to "{GrpHCMPT8102}.LOLO";
monitor HCMPT8102LOLO;
evflag  evHCMPT8102LOLO;
sync 	HCMPT8102LOLO evHCMPT8102LOLO;

float HCMPT8104LOLOArray[32];
assign HCMPT8104LOLOArray to {
 "SCL32-BL02:CM01-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM02-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM03-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM04-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM05-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM06-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM07-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM08-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM09-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM10-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM11-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM12-PT8104:VacuumR.LOLO",
 "SCL32-BL02:CM13-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM01-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM02-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM03-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM04-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM05-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM06-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM07-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM08-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM09-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM10-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM11-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM12-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM13-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM14-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM15-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM16-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM17-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM18-PT8104:VacuumR.LOLO",
 "SCL32-BL03:CM19-PT8104:VacuumR.LOLO"

};
float	HCMPT8104LOLO;
assign	HCMPT8104LOLO to "{GrpHCMPT8104}.LOLO";
monitor HCMPT8104LOLO;
evflag  evHCMPT8104LOLO;
sync 	HCMPT8104LOLO evHCMPT8104LOLO;

float HCMPT8112LOLOArray[32];
assign HCMPT8112LOLOArray to {
 "SCL32-BL02:CM01-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM02-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM03-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM04-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM05-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM06-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM07-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM08-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM09-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM10-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM11-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM12-PT8112:VacuumR.LOLO",
 "SCL32-BL02:CM13-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM01-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM02-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM03-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM04-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM05-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM06-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM07-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM08-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM09-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM10-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM11-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM12-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM13-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM14-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM15-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM16-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM17-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM18-PT8112:VacuumR.LOLO",
 "SCL32-BL03:CM19-PT8112:VacuumR.LOLO"

};
float	HCMPT8112LOLO;
assign	HCMPT8112LOLO to "{GrpHCMPT8112}.LOLO";
monitor HCMPT8112LOLO;
evflag  evHCMPT8112LOLO;
sync 	HCMPT8112LOLO evHCMPT8112LOLO;

float HCMPT8103LOLOArray[27];
assign HCMPT8103LOLOArray to {
 "SCL32-BL02:CM01-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM02-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM03-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM05-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM06-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM07-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM08-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM10-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM11-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM12-PT8103:VacuumR.LOLO",
 "SCL32-BL02:CM13-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM01-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM02-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM03-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM05-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM06-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM07-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM08-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM10-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM11-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM12-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM13-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM14-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM15-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM16-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM17-PT8103:VacuumR.LOLO",
 "SCL32-BL03:CM19-PT8103:VacuumR.LOLO"

};
float	HCMPT8103LOLO;
assign	HCMPT8103LOLO to "{GrpHCMPT8103}.LOLO";
monitor HCMPT8103LOLO;
evflag  evHCMPT8103LOLO;
sync 	HCMPT8103LOLO evHCMPT8103LOLO;

float HCMPT8113LOLOArray[27];
assign HCMPT8113LOLOArray to {
 "SCL32-BL02:CM01-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM02-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM03-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM05-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM06-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM07-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM08-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM10-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM11-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM12-PT8113:VacuumR.LOLO",
 "SCL32-BL02:CM13-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM01-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM02-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM03-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM05-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM06-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM07-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM08-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM10-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM11-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM12-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM13-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM14-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM15-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM16-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM17-PT8113:VacuumR.LOLO",
 "SCL32-BL03:CM19-PT8113:VacuumR.LOLO"

};
float	HCMPT8113LOLO;
assign	HCMPT8113LOLO to "{GrpHCMPT8113}.LOLO";
monitor HCMPT8113LOLO;
evflag  evHCMPT8113LOLO;
sync 	HCMPT8113LOLO evHCMPT8113LOLO;

float HCMTT8601LOLOArray[32];
assign HCMTT8601LOLOArray to {
 "SCL32-BL02:CM01-TT8601:TempR.LOLO",
 "SCL32-BL02:CM02-TT8601:TempR.LOLO",
 "SCL32-BL02:CM03-TT8601:TempR.LOLO",
 "SCL32-BL02:CM04-TT8601:TempR.LOLO",
 "SCL32-BL02:CM05-TT8601:TempR.LOLO",
 "SCL32-BL02:CM06-TT8601:TempR.LOLO",
 "SCL32-BL02:CM07-TT8601:TempR.LOLO",
 "SCL32-BL02:CM08-TT8601:TempR.LOLO",
 "SCL32-BL02:CM09-TT8601:TempR.LOLO",
 "SCL32-BL02:CM10-TT8601:TempR.LOLO",
 "SCL32-BL02:CM11-TT8601:TempR.LOLO",
 "SCL32-BL02:CM12-TT8601:TempR.LOLO",
 "SCL32-BL02:CM13-TT8601:TempR.LOLO",
 "SCL32-BL03:CM01-TT8601:TempR.LOLO",
 "SCL32-BL03:CM02-TT8601:TempR.LOLO",
 "SCL32-BL03:CM03-TT8601:TempR.LOLO",
 "SCL32-BL03:CM04-TT8601:TempR.LOLO",
 "SCL32-BL03:CM05-TT8601:TempR.LOLO",
 "SCL32-BL03:CM06-TT8601:TempR.LOLO",
 "SCL32-BL03:CM07-TT8601:TempR.LOLO",
 "SCL32-BL03:CM08-TT8601:TempR.LOLO",
 "SCL32-BL03:CM09-TT8601:TempR.LOLO",
 "SCL32-BL03:CM10-TT8601:TempR.LOLO",
 "SCL32-BL03:CM11-TT8601:TempR.LOLO",
 "SCL32-BL03:CM12-TT8601:TempR.LOLO",
 "SCL32-BL03:CM13-TT8601:TempR.LOLO",
 "SCL32-BL03:CM14-TT8601:TempR.LOLO",
 "SCL32-BL03:CM15-TT8601:TempR.LOLO",
 "SCL32-BL03:CM16-TT8601:TempR.LOLO",
 "SCL32-BL03:CM17-TT8601:TempR.LOLO",
 "SCL32-BL03:CM18-TT8601:TempR.LOLO",
 "SCL32-BL03:CM19-TT8601:TempR.LOLO"

};
float	HCMTT8601LOLO;
assign	HCMTT8601LOLO to "{GrpHCMTT8601}.LOLO";
monitor HCMTT8601LOLO;
evflag  evHCMTT8601LOLO;
sync 	HCMTT8601LOLO evHCMTT8601LOLO;

float HCMTT8602LOLOArray[32];
assign HCMTT8602LOLOArray to {
 "SCL32-BL02:CM01-TT8602:TempR.LOLO",
 "SCL32-BL02:CM02-TT8602:TempR.LOLO",
 "SCL32-BL02:CM03-TT8602:TempR.LOLO",
 "SCL32-BL02:CM04-TT8602:TempR.LOLO",
 "SCL32-BL02:CM05-TT8602:TempR.LOLO",
 "SCL32-BL02:CM06-TT8602:TempR.LOLO",
 "SCL32-BL02:CM07-TT8602:TempR.LOLO",
 "SCL32-BL02:CM08-TT8602:TempR.LOLO",
 "SCL32-BL02:CM09-TT8602:TempR.LOLO",
 "SCL32-BL02:CM10-TT8602:TempR.LOLO",
 "SCL32-BL02:CM11-TT8602:TempR.LOLO",
 "SCL32-BL02:CM12-TT8602:TempR.LOLO",
 "SCL32-BL02:CM13-TT8602:TempR.LOLO",
 "SCL32-BL03:CM01-TT8602:TempR.LOLO",
 "SCL32-BL03:CM02-TT8602:TempR.LOLO",
 "SCL32-BL03:CM03-TT8602:TempR.LOLO",
 "SCL32-BL03:CM04-TT8602:TempR.LOLO",
 "SCL32-BL03:CM05-TT8602:TempR.LOLO",
 "SCL32-BL03:CM06-TT8602:TempR.LOLO",
 "SCL32-BL03:CM07-TT8602:TempR.LOLO",
 "SCL32-BL03:CM08-TT8602:TempR.LOLO",
 "SCL32-BL03:CM09-TT8602:TempR.LOLO",
 "SCL32-BL03:CM10-TT8602:TempR.LOLO",
 "SCL32-BL03:CM11-TT8602:TempR.LOLO",
 "SCL32-BL03:CM12-TT8602:TempR.LOLO",
 "SCL32-BL03:CM13-TT8602:TempR.LOLO",
 "SCL32-BL03:CM14-TT8602:TempR.LOLO",
 "SCL32-BL03:CM15-TT8602:TempR.LOLO",
 "SCL32-BL03:CM16-TT8602:TempR.LOLO",
 "SCL32-BL03:CM17-TT8602:TempR.LOLO",
 "SCL32-BL03:CM18-TT8602:TempR.LOLO",
 "SCL32-BL03:CM19-TT8602:TempR.LOLO"

};
float	HCMTT8602LOLO;
assign	HCMTT8602LOLO to "{GrpHCMTT8602}.LOLO";
monitor HCMTT8602LOLO;
evflag  evHCMTT8602LOLO;
sync 	HCMTT8602LOLO evHCMTT8602LOLO;

float HCMTT8501LOLOArray[32];
assign HCMTT8501LOLOArray to {
 "SCL32-BL02:CM01-TT8501:TempR.LOLO",
 "SCL32-BL02:CM02-TT8501:TempR.LOLO",
 "SCL32-BL02:CM03-TT8501:TempR.LOLO",
 "SCL32-BL02:CM04-TT8501:TempR.LOLO",
 "SCL32-BL02:CM05-TT8501:TempR.LOLO",
 "SCL32-BL02:CM06-TT8501:TempR.LOLO",
 "SCL32-BL02:CM07-TT8501:TempR.LOLO",
 "SCL32-BL02:CM08-TT8501:TempR.LOLO",
 "SCL32-BL02:CM09-TT8501:TempR.LOLO",
 "SCL32-BL02:CM10-TT8501:TempR.LOLO",
 "SCL32-BL02:CM11-TT8501:TempR.LOLO",
 "SCL32-BL02:CM12-TT8501:TempR.LOLO",
 "SCL32-BL02:CM13-TT8501:TempR.LOLO",
 "SCL32-BL03:CM01-TT8501:TempR.LOLO",
 "SCL32-BL03:CM02-TT8501:TempR.LOLO",
 "SCL32-BL03:CM03-TT8501:TempR.LOLO",
 "SCL32-BL03:CM04-TT8501:TempR.LOLO",
 "SCL32-BL03:CM05-TT8501:TempR.LOLO",
 "SCL32-BL03:CM06-TT8501:TempR.LOLO",
 "SCL32-BL03:CM07-TT8501:TempR.LOLO",
 "SCL32-BL03:CM08-TT8501:TempR.LOLO",
 "SCL32-BL03:CM09-TT8501:TempR.LOLO",
 "SCL32-BL03:CM10-TT8501:TempR.LOLO",
 "SCL32-BL03:CM11-TT8501:TempR.LOLO",
 "SCL32-BL03:CM12-TT8501:TempR.LOLO",
 "SCL32-BL03:CM13-TT8501:TempR.LOLO",
 "SCL32-BL03:CM14-TT8501:TempR.LOLO",
 "SCL32-BL03:CM15-TT8501:TempR.LOLO",
 "SCL32-BL03:CM16-TT8501:TempR.LOLO",
 "SCL32-BL03:CM17-TT8501:TempR.LOLO",
 "SCL32-BL03:CM18-TT8501:TempR.LOLO",
 "SCL32-BL03:CM19-TT8501:TempR.LOLO"

};
float	HCMTT8501LOLO;
assign	HCMTT8501LOLO to "{GrpHCMTT8501}.LOLO";
monitor HCMTT8501LOLO;
evflag  evHCMTT8501LOLO;
sync 	HCMTT8501LOLO evHCMTT8501LOLO;

float HCMTT8502LOLOArray[32];
assign HCMTT8502LOLOArray to {
 "SCL32-BL02:CM01-TT8502:TempR.LOLO",
 "SCL32-BL02:CM02-TT8502:TempR.LOLO",
 "SCL32-BL02:CM03-TT8502:TempR.LOLO",
 "SCL32-BL02:CM04-TT8502:TempR.LOLO",
 "SCL32-BL02:CM05-TT8502:TempR.LOLO",
 "SCL32-BL02:CM06-TT8502:TempR.LOLO",
 "SCL32-BL02:CM07-TT8502:TempR.LOLO",
 "SCL32-BL02:CM08-TT8502:TempR.LOLO",
 "SCL32-BL02:CM09-TT8502:TempR.LOLO",
 "SCL32-BL02:CM10-TT8502:TempR.LOLO",
 "SCL32-BL02:CM11-TT8502:TempR.LOLO",
 "SCL32-BL02:CM12-TT8502:TempR.LOLO",
 "SCL32-BL02:CM13-TT8502:TempR.LOLO",
 "SCL32-BL03:CM01-TT8502:TempR.LOLO",
 "SCL32-BL03:CM02-TT8502:TempR.LOLO",
 "SCL32-BL03:CM03-TT8502:TempR.LOLO",
 "SCL32-BL03:CM04-TT8502:TempR.LOLO",
 "SCL32-BL03:CM05-TT8502:TempR.LOLO",
 "SCL32-BL03:CM06-TT8502:TempR.LOLO",
 "SCL32-BL03:CM07-TT8502:TempR.LOLO",
 "SCL32-BL03:CM08-TT8502:TempR.LOLO",
 "SCL32-BL03:CM09-TT8502:TempR.LOLO",
 "SCL32-BL03:CM10-TT8502:TempR.LOLO",
 "SCL32-BL03:CM11-TT8502:TempR.LOLO",
 "SCL32-BL03:CM12-TT8502:TempR.LOLO",
 "SCL32-BL03:CM13-TT8502:TempR.LOLO",
 "SCL32-BL03:CM14-TT8502:TempR.LOLO",
 "SCL32-BL03:CM15-TT8502:TempR.LOLO",
 "SCL32-BL03:CM16-TT8502:TempR.LOLO",
 "SCL32-BL03:CM17-TT8502:TempR.LOLO",
 "SCL32-BL03:CM18-TT8502:TempR.LOLO",
 "SCL32-BL03:CM19-TT8502:TempR.LOLO"

};
float	HCMTT8502LOLO;
assign	HCMTT8502LOLO to "{GrpHCMTT8502}.LOLO";
monitor HCMTT8502LOLO;
evflag  evHCMTT8502LOLO;
sync 	HCMTT8502LOLO evHCMTT8502LOLO;

float HCMTT8401LOLOArray[32];
assign HCMTT8401LOLOArray to {
 "SCL32-BL02:CM01-TT8401:TempR.LOLO",
 "SCL32-BL02:CM02-TT8401:TempR.LOLO",
 "SCL32-BL02:CM03-TT8401:TempR.LOLO",
 "SCL32-BL02:CM04-TT8401:TempR.LOLO",
 "SCL32-BL02:CM05-TT8401:TempR.LOLO",
 "SCL32-BL02:CM06-TT8401:TempR.LOLO",
 "SCL32-BL02:CM07-TT8401:TempR.LOLO",
 "SCL32-BL02:CM08-TT8401:TempR.LOLO",
 "SCL32-BL02:CM09-TT8401:TempR.LOLO",
 "SCL32-BL02:CM10-TT8401:TempR.LOLO",
 "SCL32-BL02:CM11-TT8401:TempR.LOLO",
 "SCL32-BL02:CM12-TT8401:TempR.LOLO",
 "SCL32-BL02:CM13-TT8401:TempR.LOLO",
 "SCL32-BL03:CM01-TT8401:TempR.LOLO",
 "SCL32-BL03:CM02-TT8401:TempR.LOLO",
 "SCL32-BL03:CM03-TT8401:TempR.LOLO",
 "SCL32-BL03:CM04-TT8401:TempR.LOLO",
 "SCL32-BL03:CM05-TT8401:TempR.LOLO",
 "SCL32-BL03:CM06-TT8401:TempR.LOLO",
 "SCL32-BL03:CM07-TT8401:TempR.LOLO",
 "SCL32-BL03:CM08-TT8401:TempR.LOLO",
 "SCL32-BL03:CM09-TT8401:TempR.LOLO",
 "SCL32-BL03:CM10-TT8401:TempR.LOLO",
 "SCL32-BL03:CM11-TT8401:TempR.LOLO",
 "SCL32-BL03:CM12-TT8401:TempR.LOLO",
 "SCL32-BL03:CM13-TT8401:TempR.LOLO",
 "SCL32-BL03:CM14-TT8401:TempR.LOLO",
 "SCL32-BL03:CM15-TT8401:TempR.LOLO",
 "SCL32-BL03:CM16-TT8401:TempR.LOLO",
 "SCL32-BL03:CM17-TT8401:TempR.LOLO",
 "SCL32-BL03:CM18-TT8401:TempR.LOLO",
 "SCL32-BL03:CM19-TT8401:TempR.LOLO"

};
float	HCMTT8401LOLO;
assign	HCMTT8401LOLO to "{GrpHCMTT8401}.LOLO";
monitor HCMTT8401LOLO;
evflag  evHCMTT8401LOLO;
sync 	HCMTT8401LOLO evHCMTT8401LOLO;

float HCMTT8402LOLOArray[32];
assign HCMTT8402LOLOArray to {
 "SCL32-BL02:CM01-TT8402:TempR.LOLO",
 "SCL32-BL02:CM02-TT8402:TempR.LOLO",
 "SCL32-BL02:CM03-TT8402:TempR.LOLO",
 "SCL32-BL02:CM04-TT8402:TempR.LOLO",
 "SCL32-BL02:CM05-TT8402:TempR.LOLO",
 "SCL32-BL02:CM06-TT8402:TempR.LOLO",
 "SCL32-BL02:CM07-TT8402:TempR.LOLO",
 "SCL32-BL02:CM08-TT8402:TempR.LOLO",
 "SCL32-BL02:CM09-TT8402:TempR.LOLO",
 "SCL32-BL02:CM10-TT8402:TempR.LOLO",
 "SCL32-BL02:CM11-TT8402:TempR.LOLO",
 "SCL32-BL02:CM12-TT8402:TempR.LOLO",
 "SCL32-BL02:CM13-TT8402:TempR.LOLO",
 "SCL32-BL03:CM01-TT8402:TempR.LOLO",
 "SCL32-BL03:CM02-TT8402:TempR.LOLO",
 "SCL32-BL03:CM03-TT8402:TempR.LOLO",
 "SCL32-BL03:CM04-TT8402:TempR.LOLO",
 "SCL32-BL03:CM05-TT8402:TempR.LOLO",
 "SCL32-BL03:CM06-TT8402:TempR.LOLO",
 "SCL32-BL03:CM07-TT8402:TempR.LOLO",
 "SCL32-BL03:CM08-TT8402:TempR.LOLO",
 "SCL32-BL03:CM09-TT8402:TempR.LOLO",
 "SCL32-BL03:CM10-TT8402:TempR.LOLO",
 "SCL32-BL03:CM11-TT8402:TempR.LOLO",
 "SCL32-BL03:CM12-TT8402:TempR.LOLO",
 "SCL32-BL03:CM13-TT8402:TempR.LOLO",
 "SCL32-BL03:CM14-TT8402:TempR.LOLO",
 "SCL32-BL03:CM15-TT8402:TempR.LOLO",
 "SCL32-BL03:CM16-TT8402:TempR.LOLO",
 "SCL32-BL03:CM17-TT8402:TempR.LOLO",
 "SCL32-BL03:CM18-TT8402:TempR.LOLO",
 "SCL32-BL03:CM19-TT8402:TempR.LOLO"

};
float	HCMTT8402LOLO;
assign	HCMTT8402LOLO to "{GrpHCMTT8402}.LOLO";
monitor HCMTT8402LOLO;
evflag  evHCMTT8402LOLO;
sync 	HCMTT8402LOLO evHCMTT8402LOLO;

float HCMTT8404LOLOArray[32];
assign HCMTT8404LOLOArray to {
 "SCL32-BL02:CM01-TT8404:TempR.LOLO",
 "SCL32-BL02:CM02-TT8404:TempR.LOLO",
 "SCL32-BL02:CM03-TT8404:TempR.LOLO",
 "SCL32-BL02:CM04-TT8404:TempR.LOLO",
 "SCL32-BL02:CM05-TT8404:TempR.LOLO",
 "SCL32-BL02:CM06-TT8404:TempR.LOLO",
 "SCL32-BL02:CM07-TT8404:TempR.LOLO",
 "SCL32-BL02:CM08-TT8404:TempR.LOLO",
 "SCL32-BL02:CM09-TT8404:TempR.LOLO",
 "SCL32-BL02:CM10-TT8404:TempR.LOLO",
 "SCL32-BL02:CM11-TT8404:TempR.LOLO",
 "SCL32-BL02:CM12-TT8404:TempR.LOLO",
 "SCL32-BL02:CM13-TT8404:TempR.LOLO",
 "SCL32-BL03:CM01-TT8404:TempR.LOLO",
 "SCL32-BL03:CM02-TT8404:TempR.LOLO",
 "SCL32-BL03:CM03-TT8404:TempR.LOLO",
 "SCL32-BL03:CM04-TT8404:TempR.LOLO",
 "SCL32-BL03:CM05-TT8404:TempR.LOLO",
 "SCL32-BL03:CM06-TT8404:TempR.LOLO",
 "SCL32-BL03:CM07-TT8404:TempR.LOLO",
 "SCL32-BL03:CM08-TT8404:TempR.LOLO",
 "SCL32-BL03:CM09-TT8404:TempR.LOLO",
 "SCL32-BL03:CM10-TT8404:TempR.LOLO",
 "SCL32-BL03:CM11-TT8404:TempR.LOLO",
 "SCL32-BL03:CM12-TT8404:TempR.LOLO",
 "SCL32-BL03:CM13-TT8404:TempR.LOLO",
 "SCL32-BL03:CM14-TT8404:TempR.LOLO",
 "SCL32-BL03:CM15-TT8404:TempR.LOLO",
 "SCL32-BL03:CM16-TT8404:TempR.LOLO",
 "SCL32-BL03:CM17-TT8404:TempR.LOLO",
 "SCL32-BL03:CM18-TT8404:TempR.LOLO",
 "SCL32-BL03:CM19-TT8404:TempR.LOLO"

};
float	HCMTT8404LOLO;
assign	HCMTT8404LOLO to "{GrpHCMTT8404}.LOLO";
monitor HCMTT8404LOLO;
evflag  evHCMTT8404LOLO;
sync 	HCMTT8404LOLO evHCMTT8404LOLO;

float HCMTT8202LOLOArray[32];
assign HCMTT8202LOLOArray to {
 "SCL32-BL02:CM01-TT8202:TempR.LOLO",
 "SCL32-BL02:CM02-TT8202:TempR.LOLO",
 "SCL32-BL02:CM03-TT8202:TempR.LOLO",
 "SCL32-BL02:CM04-TT8202:TempR.LOLO",
 "SCL32-BL02:CM05-TT8202:TempR.LOLO",
 "SCL32-BL02:CM06-TT8202:TempR.LOLO",
 "SCL32-BL02:CM07-TT8202:TempR.LOLO",
 "SCL32-BL02:CM08-TT8202:TempR.LOLO",
 "SCL32-BL02:CM09-TT8202:TempR.LOLO",
 "SCL32-BL02:CM10-TT8202:TempR.LOLO",
 "SCL32-BL02:CM11-TT8202:TempR.LOLO",
 "SCL32-BL02:CM12-TT8202:TempR.LOLO",
 "SCL32-BL02:CM13-TT8202:TempR.LOLO",
 "SCL32-BL03:CM01-TT8202:TempR.LOLO",
 "SCL32-BL03:CM02-TT8202:TempR.LOLO",
 "SCL32-BL03:CM03-TT8202:TempR.LOLO",
 "SCL32-BL03:CM04-TT8202:TempR.LOLO",
 "SCL32-BL03:CM05-TT8202:TempR.LOLO",
 "SCL32-BL03:CM06-TT8202:TempR.LOLO",
 "SCL32-BL03:CM07-TT8202:TempR.LOLO",
 "SCL32-BL03:CM08-TT8202:TempR.LOLO",
 "SCL32-BL03:CM09-TT8202:TempR.LOLO",
 "SCL32-BL03:CM10-TT8202:TempR.LOLO",
 "SCL32-BL03:CM11-TT8202:TempR.LOLO",
 "SCL32-BL03:CM12-TT8202:TempR.LOLO",
 "SCL32-BL03:CM13-TT8202:TempR.LOLO",
 "SCL32-BL03:CM14-TT8202:TempR.LOLO",
 "SCL32-BL03:CM15-TT8202:TempR.LOLO",
 "SCL32-BL03:CM16-TT8202:TempR.LOLO",
 "SCL32-BL03:CM17-TT8202:TempR.LOLO",
 "SCL32-BL03:CM18-TT8202:TempR.LOLO",
 "SCL32-BL03:CM19-TT8202:TempR.LOLO"

};
float	HCMTT8202LOLO;
assign	HCMTT8202LOLO to "{GrpHCMTT8202}.LOLO";
monitor HCMTT8202LOLO;
evflag  evHCMTT8202LOLO;
sync 	HCMTT8202LOLO evHCMTT8202LOLO;

float HCMTT8203LOLOArray[32];
assign HCMTT8203LOLOArray to {
 "SCL32-BL02:CM01-TT8203:TempR.LOLO",
 "SCL32-BL02:CM02-TT8203:TempR.LOLO",
 "SCL32-BL02:CM03-TT8203:TempR.LOLO",
 "SCL32-BL02:CM04-TT8203:TempR.LOLO",
 "SCL32-BL02:CM05-TT8203:TempR.LOLO",
 "SCL32-BL02:CM06-TT8203:TempR.LOLO",
 "SCL32-BL02:CM07-TT8203:TempR.LOLO",
 "SCL32-BL02:CM08-TT8203:TempR.LOLO",
 "SCL32-BL02:CM09-TT8203:TempR.LOLO",
 "SCL32-BL02:CM10-TT8203:TempR.LOLO",
 "SCL32-BL02:CM11-TT8203:TempR.LOLO",
 "SCL32-BL02:CM12-TT8203:TempR.LOLO",
 "SCL32-BL02:CM13-TT8203:TempR.LOLO",
 "SCL32-BL03:CM01-TT8203:TempR.LOLO",
 "SCL32-BL03:CM02-TT8203:TempR.LOLO",
 "SCL32-BL03:CM03-TT8203:TempR.LOLO",
 "SCL32-BL03:CM04-TT8203:TempR.LOLO",
 "SCL32-BL03:CM05-TT8203:TempR.LOLO",
 "SCL32-BL03:CM06-TT8203:TempR.LOLO",
 "SCL32-BL03:CM07-TT8203:TempR.LOLO",
 "SCL32-BL03:CM08-TT8203:TempR.LOLO",
 "SCL32-BL03:CM09-TT8203:TempR.LOLO",
 "SCL32-BL03:CM10-TT8203:TempR.LOLO",
 "SCL32-BL03:CM11-TT8203:TempR.LOLO",
 "SCL32-BL03:CM12-TT8203:TempR.LOLO",
 "SCL32-BL03:CM13-TT8203:TempR.LOLO",
 "SCL32-BL03:CM14-TT8203:TempR.LOLO",
 "SCL32-BL03:CM15-TT8203:TempR.LOLO",
 "SCL32-BL03:CM16-TT8203:TempR.LOLO",
 "SCL32-BL03:CM17-TT8203:TempR.LOLO",
 "SCL32-BL03:CM18-TT8203:TempR.LOLO",
 "SCL32-BL03:CM19-TT8203:TempR.LOLO"

};
float	HCMTT8203LOLO;
assign	HCMTT8203LOLO to "{GrpHCMTT8203}.LOLO";
monitor HCMTT8203LOLO;
evflag  evHCMTT8203LOLO;
sync 	HCMTT8203LOLO evHCMTT8203LOLO;

float HCMTT8204LOLOArray[32];
assign HCMTT8204LOLOArray to {
 "SCL32-BL02:CM01-TT8204:TempR.LOLO",
 "SCL32-BL02:CM02-TT8204:TempR.LOLO",
 "SCL32-BL02:CM03-TT8204:TempR.LOLO",
 "SCL32-BL02:CM04-TT8204:TempR.LOLO",
 "SCL32-BL02:CM05-TT8204:TempR.LOLO",
 "SCL32-BL02:CM06-TT8204:TempR.LOLO",
 "SCL32-BL02:CM07-TT8204:TempR.LOLO",
 "SCL32-BL02:CM08-TT8204:TempR.LOLO",
 "SCL32-BL02:CM09-TT8204:TempR.LOLO",
 "SCL32-BL02:CM10-TT8204:TempR.LOLO",
 "SCL32-BL02:CM11-TT8204:TempR.LOLO",
 "SCL32-BL02:CM12-TT8204:TempR.LOLO",
 "SCL32-BL02:CM13-TT8204:TempR.LOLO",
 "SCL32-BL03:CM01-TT8204:TempR.LOLO",
 "SCL32-BL03:CM02-TT8204:TempR.LOLO",
 "SCL32-BL03:CM03-TT8204:TempR.LOLO",
 "SCL32-BL03:CM04-TT8204:TempR.LOLO",
 "SCL32-BL03:CM05-TT8204:TempR.LOLO",
 "SCL32-BL03:CM06-TT8204:TempR.LOLO",
 "SCL32-BL03:CM07-TT8204:TempR.LOLO",
 "SCL32-BL03:CM08-TT8204:TempR.LOLO",
 "SCL32-BL03:CM09-TT8204:TempR.LOLO",
 "SCL32-BL03:CM10-TT8204:TempR.LOLO",
 "SCL32-BL03:CM11-TT8204:TempR.LOLO",
 "SCL32-BL03:CM12-TT8204:TempR.LOLO",
 "SCL32-BL03:CM13-TT8204:TempR.LOLO",
 "SCL32-BL03:CM14-TT8204:TempR.LOLO",
 "SCL32-BL03:CM15-TT8204:TempR.LOLO",
 "SCL32-BL03:CM16-TT8204:TempR.LOLO",
 "SCL32-BL03:CM17-TT8204:TempR.LOLO",
 "SCL32-BL03:CM18-TT8204:TempR.LOLO",
 "SCL32-BL03:CM19-TT8204:TempR.LOLO"

};
float	HCMTT8204LOLO;
assign	HCMTT8204LOLO to "{GrpHCMTT8204}.LOLO";
monitor HCMTT8204LOLO;
evflag  evHCMTT8204LOLO;
sync 	HCMTT8204LOLO evHCMTT8204LOLO;

float HCMTT8205LOLOArray[32];
assign HCMTT8205LOLOArray to {
 "SCL32-BL02:CM01-TT8205:TempR.LOLO",
 "SCL32-BL02:CM02-TT8205:TempR.LOLO",
 "SCL32-BL02:CM03-TT8205:TempR.LOLO",
 "SCL32-BL02:CM04-TT8205:TempR.LOLO",
 "SCL32-BL02:CM05-TT8205:TempR.LOLO",
 "SCL32-BL02:CM06-TT8205:TempR.LOLO",
 "SCL32-BL02:CM07-TT8205:TempR.LOLO",
 "SCL32-BL02:CM08-TT8205:TempR.LOLO",
 "SCL32-BL02:CM09-TT8205:TempR.LOLO",
 "SCL32-BL02:CM10-TT8205:TempR.LOLO",
 "SCL32-BL02:CM11-TT8205:TempR.LOLO",
 "SCL32-BL02:CM12-TT8205:TempR.LOLO",
 "SCL32-BL02:CM13-TT8205:TempR.LOLO",
 "SCL32-BL03:CM01-TT8205:TempR.LOLO",
 "SCL32-BL03:CM02-TT8205:TempR.LOLO",
 "SCL32-BL03:CM03-TT8205:TempR.LOLO",
 "SCL32-BL03:CM04-TT8205:TempR.LOLO",
 "SCL32-BL03:CM05-TT8205:TempR.LOLO",
 "SCL32-BL03:CM06-TT8205:TempR.LOLO",
 "SCL32-BL03:CM07-TT8205:TempR.LOLO",
 "SCL32-BL03:CM08-TT8205:TempR.LOLO",
 "SCL32-BL03:CM09-TT8205:TempR.LOLO",
 "SCL32-BL03:CM10-TT8205:TempR.LOLO",
 "SCL32-BL03:CM11-TT8205:TempR.LOLO",
 "SCL32-BL03:CM12-TT8205:TempR.LOLO",
 "SCL32-BL03:CM13-TT8205:TempR.LOLO",
 "SCL32-BL03:CM14-TT8205:TempR.LOLO",
 "SCL32-BL03:CM15-TT8205:TempR.LOLO",
 "SCL32-BL03:CM16-TT8205:TempR.LOLO",
 "SCL32-BL03:CM17-TT8205:TempR.LOLO",
 "SCL32-BL03:CM18-TT8205:TempR.LOLO",
 "SCL32-BL03:CM19-TT8205:TempR.LOLO"

};
float	HCMTT8205LOLO;
assign	HCMTT8205LOLO to "{GrpHCMTT8205}.LOLO";
monitor HCMTT8205LOLO;
evflag  evHCMTT8205LOLO;
sync 	HCMTT8205LOLO evHCMTT8205LOLO;

float HCMTT8206LOLOArray[32];
assign HCMTT8206LOLOArray to {
 "SCL32-BL02:CM01-TT8206:TempR.LOLO",
 "SCL32-BL02:CM02-TT8206:TempR.LOLO",
 "SCL32-BL02:CM03-TT8206:TempR.LOLO",
 "SCL32-BL02:CM04-TT8206:TempR.LOLO",
 "SCL32-BL02:CM05-TT8206:TempR.LOLO",
 "SCL32-BL02:CM06-TT8206:TempR.LOLO",
 "SCL32-BL02:CM07-TT8206:TempR.LOLO",
 "SCL32-BL02:CM08-TT8206:TempR.LOLO",
 "SCL32-BL02:CM09-TT8206:TempR.LOLO",
 "SCL32-BL02:CM10-TT8206:TempR.LOLO",
 "SCL32-BL02:CM11-TT8206:TempR.LOLO",
 "SCL32-BL02:CM12-TT8206:TempR.LOLO",
 "SCL32-BL02:CM13-TT8206:TempR.LOLO",
 "SCL32-BL03:CM01-TT8206:TempR.LOLO",
 "SCL32-BL03:CM02-TT8206:TempR.LOLO",
 "SCL32-BL03:CM03-TT8206:TempR.LOLO",
 "SCL32-BL03:CM04-TT8206:TempR.LOLO",
 "SCL32-BL03:CM05-TT8206:TempR.LOLO",
 "SCL32-BL03:CM06-TT8206:TempR.LOLO",
 "SCL32-BL03:CM07-TT8206:TempR.LOLO",
 "SCL32-BL03:CM08-TT8206:TempR.LOLO",
 "SCL32-BL03:CM09-TT8206:TempR.LOLO",
 "SCL32-BL03:CM10-TT8206:TempR.LOLO",
 "SCL32-BL03:CM11-TT8206:TempR.LOLO",
 "SCL32-BL03:CM12-TT8206:TempR.LOLO",
 "SCL32-BL03:CM13-TT8206:TempR.LOLO",
 "SCL32-BL03:CM14-TT8206:TempR.LOLO",
 "SCL32-BL03:CM15-TT8206:TempR.LOLO",
 "SCL32-BL03:CM16-TT8206:TempR.LOLO",
 "SCL32-BL03:CM17-TT8206:TempR.LOLO",
 "SCL32-BL03:CM18-TT8206:TempR.LOLO",
 "SCL32-BL03:CM19-TT8206:TempR.LOLO"

};
float	HCMTT8206LOLO;
assign	HCMTT8206LOLO to "{GrpHCMTT8206}.LOLO";
monitor HCMTT8206LOLO;
evflag  evHCMTT8206LOLO;
sync 	HCMTT8206LOLO evHCMTT8206LOLO;

float HCMTT8207LOLOArray[32];
assign HCMTT8207LOLOArray to {
 "SCL32-BL02:CM01-TT8207:TempR.LOLO",
 "SCL32-BL02:CM02-TT8207:TempR.LOLO",
 "SCL32-BL02:CM03-TT8207:TempR.LOLO",
 "SCL32-BL02:CM04-TT8207:TempR.LOLO",
 "SCL32-BL02:CM05-TT8207:TempR.LOLO",
 "SCL32-BL02:CM06-TT8207:TempR.LOLO",
 "SCL32-BL02:CM07-TT8207:TempR.LOLO",
 "SCL32-BL02:CM08-TT8207:TempR.LOLO",
 "SCL32-BL02:CM09-TT8207:TempR.LOLO",
 "SCL32-BL02:CM10-TT8207:TempR.LOLO",
 "SCL32-BL02:CM11-TT8207:TempR.LOLO",
 "SCL32-BL02:CM12-TT8207:TempR.LOLO",
 "SCL32-BL02:CM13-TT8207:TempR.LOLO",
 "SCL32-BL03:CM01-TT8207:TempR.LOLO",
 "SCL32-BL03:CM02-TT8207:TempR.LOLO",
 "SCL32-BL03:CM03-TT8207:TempR.LOLO",
 "SCL32-BL03:CM04-TT8207:TempR.LOLO",
 "SCL32-BL03:CM05-TT8207:TempR.LOLO",
 "SCL32-BL03:CM06-TT8207:TempR.LOLO",
 "SCL32-BL03:CM07-TT8207:TempR.LOLO",
 "SCL32-BL03:CM08-TT8207:TempR.LOLO",
 "SCL32-BL03:CM09-TT8207:TempR.LOLO",
 "SCL32-BL03:CM10-TT8207:TempR.LOLO",
 "SCL32-BL03:CM11-TT8207:TempR.LOLO",
 "SCL32-BL03:CM12-TT8207:TempR.LOLO",
 "SCL32-BL03:CM13-TT8207:TempR.LOLO",
 "SCL32-BL03:CM14-TT8207:TempR.LOLO",
 "SCL32-BL03:CM15-TT8207:TempR.LOLO",
 "SCL32-BL03:CM16-TT8207:TempR.LOLO",
 "SCL32-BL03:CM17-TT8207:TempR.LOLO",
 "SCL32-BL03:CM18-TT8207:TempR.LOLO",
 "SCL32-BL03:CM19-TT8207:TempR.LOLO"

};
float	HCMTT8207LOLO;
assign	HCMTT8207LOLO to "{GrpHCMTT8207}.LOLO";
monitor HCMTT8207LOLO;
evflag  evHCMTT8207LOLO;
sync 	HCMTT8207LOLO evHCMTT8207LOLO;

float HCMTT8208LOLOArray[32];
assign HCMTT8208LOLOArray to {
 "SCL32-BL02:CM01-TT8208:TempR.LOLO",
 "SCL32-BL02:CM02-TT8208:TempR.LOLO",
 "SCL32-BL02:CM03-TT8208:TempR.LOLO",
 "SCL32-BL02:CM04-TT8208:TempR.LOLO",
 "SCL32-BL02:CM05-TT8208:TempR.LOLO",
 "SCL32-BL02:CM06-TT8208:TempR.LOLO",
 "SCL32-BL02:CM07-TT8208:TempR.LOLO",
 "SCL32-BL02:CM08-TT8208:TempR.LOLO",
 "SCL32-BL02:CM09-TT8208:TempR.LOLO",
 "SCL32-BL02:CM10-TT8208:TempR.LOLO",
 "SCL32-BL02:CM11-TT8208:TempR.LOLO",
 "SCL32-BL02:CM12-TT8208:TempR.LOLO",
 "SCL32-BL02:CM13-TT8208:TempR.LOLO",
 "SCL32-BL03:CM01-TT8208:TempR.LOLO",
 "SCL32-BL03:CM02-TT8208:TempR.LOLO",
 "SCL32-BL03:CM03-TT8208:TempR.LOLO",
 "SCL32-BL03:CM04-TT8208:TempR.LOLO",
 "SCL32-BL03:CM05-TT8208:TempR.LOLO",
 "SCL32-BL03:CM06-TT8208:TempR.LOLO",
 "SCL32-BL03:CM07-TT8208:TempR.LOLO",
 "SCL32-BL03:CM08-TT8208:TempR.LOLO",
 "SCL32-BL03:CM09-TT8208:TempR.LOLO",
 "SCL32-BL03:CM10-TT8208:TempR.LOLO",
 "SCL32-BL03:CM11-TT8208:TempR.LOLO",
 "SCL32-BL03:CM12-TT8208:TempR.LOLO",
 "SCL32-BL03:CM13-TT8208:TempR.LOLO",
 "SCL32-BL03:CM14-TT8208:TempR.LOLO",
 "SCL32-BL03:CM15-TT8208:TempR.LOLO",
 "SCL32-BL03:CM16-TT8208:TempR.LOLO",
 "SCL32-BL03:CM17-TT8208:TempR.LOLO",
 "SCL32-BL03:CM18-TT8208:TempR.LOLO",
 "SCL32-BL03:CM19-TT8208:TempR.LOLO"

};
float	HCMTT8208LOLO;
assign	HCMTT8208LOLO to "{GrpHCMTT8208}.LOLO";
monitor HCMTT8208LOLO;
evflag  evHCMTT8208LOLO;
sync 	HCMTT8208LOLO evHCMTT8208LOLO;

float HCMLT8401LOLOArray[32];
assign HCMLT8401LOLOArray to {
 "SCL32-BL02:CM01-LT8401:PercR.LOLO",
 "SCL32-BL02:CM02-LT8401:PercR.LOLO",
 "SCL32-BL02:CM03-LT8401:PercR.LOLO",
 "SCL32-BL02:CM04-LT8401:PercR.LOLO",
 "SCL32-BL02:CM05-LT8401:PercR.LOLO",
 "SCL32-BL02:CM06-LT8401:PercR.LOLO",
 "SCL32-BL02:CM07-LT8401:PercR.LOLO",
 "SCL32-BL02:CM08-LT8401:PercR.LOLO",
 "SCL32-BL02:CM09-LT8401:PercR.LOLO",
 "SCL32-BL02:CM10-LT8401:PercR.LOLO",
 "SCL32-BL02:CM11-LT8401:PercR.LOLO",
 "SCL32-BL02:CM12-LT8401:PercR.LOLO",
 "SCL32-BL02:CM13-LT8401:PercR.LOLO",
 "SCL32-BL03:CM01-LT8401:PercR.LOLO",
 "SCL32-BL03:CM02-LT8401:PercR.LOLO",
 "SCL32-BL03:CM03-LT8401:PercR.LOLO",
 "SCL32-BL03:CM04-LT8401:PercR.LOLO",
 "SCL32-BL03:CM05-LT8401:PercR.LOLO",
 "SCL32-BL03:CM06-LT8401:PercR.LOLO",
 "SCL32-BL03:CM07-LT8401:PercR.LOLO",
 "SCL32-BL03:CM08-LT8401:PercR.LOLO",
 "SCL32-BL03:CM09-LT8401:PercR.LOLO",
 "SCL32-BL03:CM10-LT8401:PercR.LOLO",
 "SCL32-BL03:CM11-LT8401:PercR.LOLO",
 "SCL32-BL03:CM12-LT8401:PercR.LOLO",
 "SCL32-BL03:CM13-LT8401:PercR.LOLO",
 "SCL32-BL03:CM14-LT8401:PercR.LOLO",
 "SCL32-BL03:CM15-LT8401:PercR.LOLO",
 "SCL32-BL03:CM16-LT8401:PercR.LOLO",
 "SCL32-BL03:CM17-LT8401:PercR.LOLO",
 "SCL32-BL03:CM18-LT8401:PercR.LOLO",
 "SCL32-BL03:CM19-LT8401:PercR.LOLO"

};
float	HCMLT8401LOLO;
assign	HCMLT8401LOLO to "{GrpHCMLT8401}.LOLO";
monitor HCMLT8401LOLO;
evflag  evHCMLT8401LOLO;
sync 	HCMLT8401LOLO evHCMLT8401LOLO;

float HCMLT8201LOLOArray[32];
assign HCMLT8201LOLOArray to {
 "SCL32-BL02:CM01-LT8201:PercR.LOLO",
 "SCL32-BL02:CM02-LT8201:PercR.LOLO",
 "SCL32-BL02:CM03-LT8201:PercR.LOLO",
 "SCL32-BL02:CM04-LT8201:PercR.LOLO",
 "SCL32-BL02:CM05-LT8201:PercR.LOLO",
 "SCL32-BL02:CM06-LT8201:PercR.LOLO",
 "SCL32-BL02:CM07-LT8201:PercR.LOLO",
 "SCL32-BL02:CM08-LT8201:PercR.LOLO",
 "SCL32-BL02:CM09-LT8201:PercR.LOLO",
 "SCL32-BL02:CM10-LT8201:PercR.LOLO",
 "SCL32-BL02:CM11-LT8201:PercR.LOLO",
 "SCL32-BL02:CM12-LT8201:PercR.LOLO",
 "SCL32-BL02:CM13-LT8201:PercR.LOLO",
 "SCL32-BL03:CM01-LT8201:PercR.LOLO",
 "SCL32-BL03:CM02-LT8201:PercR.LOLO",
 "SCL32-BL03:CM03-LT8201:PercR.LOLO",
 "SCL32-BL03:CM04-LT8201:PercR.LOLO",
 "SCL32-BL03:CM05-LT8201:PercR.LOLO",
 "SCL32-BL03:CM06-LT8201:PercR.LOLO",
 "SCL32-BL03:CM07-LT8201:PercR.LOLO",
 "SCL32-BL03:CM08-LT8201:PercR.LOLO",
 "SCL32-BL03:CM09-LT8201:PercR.LOLO",
 "SCL32-BL03:CM10-LT8201:PercR.LOLO",
 "SCL32-BL03:CM11-LT8201:PercR.LOLO",
 "SCL32-BL03:CM12-LT8201:PercR.LOLO",
 "SCL32-BL03:CM13-LT8201:PercR.LOLO",
 "SCL32-BL03:CM14-LT8201:PercR.LOLO",
 "SCL32-BL03:CM15-LT8201:PercR.LOLO",
 "SCL32-BL03:CM16-LT8201:PercR.LOLO",
 "SCL32-BL03:CM17-LT8201:PercR.LOLO",
 "SCL32-BL03:CM18-LT8201:PercR.LOLO",
 "SCL32-BL03:CM19-LT8201:PercR.LOLO"

};
float	HCMLT8201LOLO;
assign	HCMLT8201LOLO to "{GrpHCMLT8201}.LOLO";
monitor HCMLT8201LOLO;
evflag  evHCMLT8201LOLO;
sync 	HCMLT8201LOLO evHCMLT8201LOLO;

float HCMTT8603LOLOArray[32];
assign HCMTT8603LOLOArray to {
 "SCL32-BL02:CM01-TT8603:TempR.LOLO",
 "SCL32-BL02:CM02-TT8603:TempR.LOLO",
 "SCL32-BL02:CM03-TT8603:TempR.LOLO",
 "SCL32-BL02:CM04-TT8603:TempR.LOLO",
 "SCL32-BL02:CM05-TT8603:TempR.LOLO",
 "SCL32-BL02:CM06-TT8603:TempR.LOLO",
 "SCL32-BL02:CM07-TT8603:TempR.LOLO",
 "SCL32-BL02:CM08-TT8603:TempR.LOLO",
 "SCL32-BL02:CM09-TT8603:TempR.LOLO",
 "SCL32-BL02:CM10-TT8603:TempR.LOLO",
 "SCL32-BL02:CM11-TT8603:TempR.LOLO",
 "SCL32-BL02:CM12-TT8603:TempR.LOLO",
 "SCL32-BL02:CM13-TT8603:TempR.LOLO",
 "SCL32-BL03:CM01-TT8603:TempR.LOLO",
 "SCL32-BL03:CM02-TT8603:TempR.LOLO",
 "SCL32-BL03:CM03-TT8603:TempR.LOLO",
 "SCL32-BL03:CM04-TT8603:TempR.LOLO",
 "SCL32-BL03:CM05-TT8603:TempR.LOLO",
 "SCL32-BL03:CM06-TT8603:TempR.LOLO",
 "SCL32-BL03:CM07-TT8603:TempR.LOLO",
 "SCL32-BL03:CM08-TT8603:TempR.LOLO",
 "SCL32-BL03:CM09-TT8603:TempR.LOLO",
 "SCL32-BL03:CM10-TT8603:TempR.LOLO",
 "SCL32-BL03:CM11-TT8603:TempR.LOLO",
 "SCL32-BL03:CM12-TT8603:TempR.LOLO",
 "SCL32-BL03:CM13-TT8603:TempR.LOLO",
 "SCL32-BL03:CM14-TT8603:TempR.LOLO",
 "SCL32-BL03:CM15-TT8603:TempR.LOLO",
 "SCL32-BL03:CM16-TT8603:TempR.LOLO",
 "SCL32-BL03:CM17-TT8603:TempR.LOLO",
 "SCL32-BL03:CM18-TT8603:TempR.LOLO",
 "SCL32-BL03:CM19-TT8603:TempR.LOLO"

};
float	HCMTT8603LOLO;
assign	HCMTT8603LOLO to "{GrpHCMTT8603}.LOLO";
monitor HCMTT8603LOLO;
evflag  evHCMTT8603LOLO;
sync 	HCMTT8603LOLO evHCMTT8603LOLO;

float HCMTT8604LOLOArray[32];
assign HCMTT8604LOLOArray to {
 "SCL32-BL02:CM01-TT8604:TempR.LOLO",
 "SCL32-BL02:CM02-TT8604:TempR.LOLO",
 "SCL32-BL02:CM03-TT8604:TempR.LOLO",
 "SCL32-BL02:CM04-TT8604:TempR.LOLO",
 "SCL32-BL02:CM05-TT8604:TempR.LOLO",
 "SCL32-BL02:CM06-TT8604:TempR.LOLO",
 "SCL32-BL02:CM07-TT8604:TempR.LOLO",
 "SCL32-BL02:CM08-TT8604:TempR.LOLO",
 "SCL32-BL02:CM09-TT8604:TempR.LOLO",
 "SCL32-BL02:CM10-TT8604:TempR.LOLO",
 "SCL32-BL02:CM11-TT8604:TempR.LOLO",
 "SCL32-BL02:CM12-TT8604:TempR.LOLO",
 "SCL32-BL02:CM13-TT8604:TempR.LOLO",
 "SCL32-BL03:CM01-TT8604:TempR.LOLO",
 "SCL32-BL03:CM02-TT8604:TempR.LOLO",
 "SCL32-BL03:CM03-TT8604:TempR.LOLO",
 "SCL32-BL03:CM04-TT8604:TempR.LOLO",
 "SCL32-BL03:CM05-TT8604:TempR.LOLO",
 "SCL32-BL03:CM06-TT8604:TempR.LOLO",
 "SCL32-BL03:CM07-TT8604:TempR.LOLO",
 "SCL32-BL03:CM08-TT8604:TempR.LOLO",
 "SCL32-BL03:CM09-TT8604:TempR.LOLO",
 "SCL32-BL03:CM10-TT8604:TempR.LOLO",
 "SCL32-BL03:CM11-TT8604:TempR.LOLO",
 "SCL32-BL03:CM12-TT8604:TempR.LOLO",
 "SCL32-BL03:CM13-TT8604:TempR.LOLO",
 "SCL32-BL03:CM14-TT8604:TempR.LOLO",
 "SCL32-BL03:CM15-TT8604:TempR.LOLO",
 "SCL32-BL03:CM16-TT8604:TempR.LOLO",
 "SCL32-BL03:CM17-TT8604:TempR.LOLO",
 "SCL32-BL03:CM18-TT8604:TempR.LOLO",
 "SCL32-BL03:CM19-TT8604:TempR.LOLO"

};
float	HCMTT8604LOLO;
assign	HCMTT8604LOLO to "{GrpHCMTT8604}.LOLO";
monitor HCMTT8604LOLO;
evflag  evHCMTT8604LOLO;
sync 	HCMTT8604LOLO evHCMTT8604LOLO;

float HCMTT8209LOLOArray[19];
assign HCMTT8209LOLOArray to {
 "SCL32-BL03:CM01-TT8209:TempR.LOLO",
 "SCL32-BL03:CM02-TT8209:TempR.LOLO",
 "SCL32-BL03:CM03-TT8209:TempR.LOLO",
 "SCL32-BL03:CM04-TT8209:TempR.LOLO",
 "SCL32-BL03:CM05-TT8209:TempR.LOLO",
 "SCL32-BL03:CM06-TT8209:TempR.LOLO",
 "SCL32-BL03:CM07-TT8209:TempR.LOLO",
 "SCL32-BL03:CM08-TT8209:TempR.LOLO",
 "SCL32-BL03:CM09-TT8209:TempR.LOLO",
 "SCL32-BL03:CM10-TT8209:TempR.LOLO",
 "SCL32-BL03:CM11-TT8209:TempR.LOLO",
 "SCL32-BL03:CM12-TT8209:TempR.LOLO",
 "SCL32-BL03:CM13-TT8209:TempR.LOLO",
 "SCL32-BL03:CM14-TT8209:TempR.LOLO",
 "SCL32-BL03:CM15-TT8209:TempR.LOLO",
 "SCL32-BL03:CM16-TT8209:TempR.LOLO",
 "SCL32-BL03:CM17-TT8209:TempR.LOLO",
 "SCL32-BL03:CM18-TT8209:TempR.LOLO",
 "SCL32-BL03:CM19-TT8209:TempR.LOLO"

};
float	HCMTT8209LOLO;
assign	HCMTT8209LOLO to "{GrpHCMTT8209}.LOLO";
monitor HCMTT8209LOLO;
evflag  evHCMTT8209LOLO;
sync 	HCMTT8209LOLO evHCMTT8209LOLO;

float HCMTT8210LOLOArray[19];
assign HCMTT8210LOLOArray to {
 "SCL32-BL03:CM01-TT8210:TempR.LOLO",
 "SCL32-BL03:CM02-TT8210:TempR.LOLO",
 "SCL32-BL03:CM03-TT8210:TempR.LOLO",
 "SCL32-BL03:CM04-TT8210:TempR.LOLO",
 "SCL32-BL03:CM05-TT8210:TempR.LOLO",
 "SCL32-BL03:CM06-TT8210:TempR.LOLO",
 "SCL32-BL03:CM07-TT8210:TempR.LOLO",
 "SCL32-BL03:CM08-TT8210:TempR.LOLO",
 "SCL32-BL03:CM09-TT8210:TempR.LOLO",
 "SCL32-BL03:CM10-TT8210:TempR.LOLO",
 "SCL32-BL03:CM11-TT8210:TempR.LOLO",
 "SCL32-BL03:CM12-TT8210:TempR.LOLO",
 "SCL32-BL03:CM13-TT8210:TempR.LOLO",
 "SCL32-BL03:CM14-TT8210:TempR.LOLO",
 "SCL32-BL03:CM15-TT8210:TempR.LOLO",
 "SCL32-BL03:CM16-TT8210:TempR.LOLO",
 "SCL32-BL03:CM17-TT8210:TempR.LOLO",
 "SCL32-BL03:CM18-TT8210:TempR.LOLO",
 "SCL32-BL03:CM19-TT8210:TempR.LOLO"

};
float	HCMTT8210LOLO;
assign	HCMTT8210LOLO to "{GrpHCMTT8210}.LOLO";
monitor HCMTT8210LOLO;
evflag  evHCMTT8210LOLO;
sync 	HCMTT8210LOLO evHCMTT8210LOLO;

float HCMTT8211LOLOArray[19];
assign HCMTT8211LOLOArray to {
 "SCL32-BL03:CM01-TT8211:TempR.LOLO",
 "SCL32-BL03:CM02-TT8211:TempR.LOLO",
 "SCL32-BL03:CM03-TT8211:TempR.LOLO",
 "SCL32-BL03:CM04-TT8211:TempR.LOLO",
 "SCL32-BL03:CM05-TT8211:TempR.LOLO",
 "SCL32-BL03:CM06-TT8211:TempR.LOLO",
 "SCL32-BL03:CM07-TT8211:TempR.LOLO",
 "SCL32-BL03:CM08-TT8211:TempR.LOLO",
 "SCL32-BL03:CM09-TT8211:TempR.LOLO",
 "SCL32-BL03:CM10-TT8211:TempR.LOLO",
 "SCL32-BL03:CM11-TT8211:TempR.LOLO",
 "SCL32-BL03:CM12-TT8211:TempR.LOLO",
 "SCL32-BL03:CM13-TT8211:TempR.LOLO",
 "SCL32-BL03:CM14-TT8211:TempR.LOLO",
 "SCL32-BL03:CM15-TT8211:TempR.LOLO",
 "SCL32-BL03:CM16-TT8211:TempR.LOLO",
 "SCL32-BL03:CM17-TT8211:TempR.LOLO",
 "SCL32-BL03:CM18-TT8211:TempR.LOLO",
 "SCL32-BL03:CM19-TT8211:TempR.LOLO"

};
float	HCMTT8211LOLO;
assign	HCMTT8211LOLO to "{GrpHCMTT8211}.LOLO";
monitor HCMTT8211LOLO;
evflag  evHCMTT8211LOLO;
sync 	HCMTT8211LOLO evHCMTT8211LOLO;

float HCMTT8212LOLOArray[19];
assign HCMTT8212LOLOArray to {
 "SCL32-BL03:CM01-TT8212:TempR.LOLO",
 "SCL32-BL03:CM02-TT8212:TempR.LOLO",
 "SCL32-BL03:CM03-TT8212:TempR.LOLO",
 "SCL32-BL03:CM04-TT8212:TempR.LOLO",
 "SCL32-BL03:CM05-TT8212:TempR.LOLO",
 "SCL32-BL03:CM06-TT8212:TempR.LOLO",
 "SCL32-BL03:CM07-TT8212:TempR.LOLO",
 "SCL32-BL03:CM08-TT8212:TempR.LOLO",
 "SCL32-BL03:CM09-TT8212:TempR.LOLO",
 "SCL32-BL03:CM10-TT8212:TempR.LOLO",
 "SCL32-BL03:CM11-TT8212:TempR.LOLO",
 "SCL32-BL03:CM12-TT8212:TempR.LOLO",
 "SCL32-BL03:CM13-TT8212:TempR.LOLO",
 "SCL32-BL03:CM14-TT8212:TempR.LOLO",
 "SCL32-BL03:CM15-TT8212:TempR.LOLO",
 "SCL32-BL03:CM16-TT8212:TempR.LOLO",
 "SCL32-BL03:CM17-TT8212:TempR.LOLO",
 "SCL32-BL03:CM18-TT8212:TempR.LOLO",
 "SCL32-BL03:CM19-TT8212:TempR.LOLO"

};
float	HCMTT8212LOLO;
assign	HCMTT8212LOLO to "{GrpHCMTT8212}.LOLO";
monitor HCMTT8212LOLO;
evflag  evHCMTT8212LOLO;
sync 	HCMTT8212LOLO evHCMTT8212LOLO;

float HCMTT8213LOLOArray[19];
assign HCMTT8213LOLOArray to {
 "SCL32-BL03:CM01-TT8213:TempR.LOLO",
 "SCL32-BL03:CM02-TT8213:TempR.LOLO",
 "SCL32-BL03:CM03-TT8213:TempR.LOLO",
 "SCL32-BL03:CM04-TT8213:TempR.LOLO",
 "SCL32-BL03:CM05-TT8213:TempR.LOLO",
 "SCL32-BL03:CM06-TT8213:TempR.LOLO",
 "SCL32-BL03:CM07-TT8213:TempR.LOLO",
 "SCL32-BL03:CM08-TT8213:TempR.LOLO",
 "SCL32-BL03:CM09-TT8213:TempR.LOLO",
 "SCL32-BL03:CM10-TT8213:TempR.LOLO",
 "SCL32-BL03:CM11-TT8213:TempR.LOLO",
 "SCL32-BL03:CM12-TT8213:TempR.LOLO",
 "SCL32-BL03:CM13-TT8213:TempR.LOLO",
 "SCL32-BL03:CM14-TT8213:TempR.LOLO",
 "SCL32-BL03:CM15-TT8213:TempR.LOLO",
 "SCL32-BL03:CM16-TT8213:TempR.LOLO",
 "SCL32-BL03:CM17-TT8213:TempR.LOLO",
 "SCL32-BL03:CM18-TT8213:TempR.LOLO",
 "SCL32-BL03:CM19-TT8213:TempR.LOLO"

};
float	HCMTT8213LOLO;
assign	HCMTT8213LOLO to "{GrpHCMTT8213}.LOLO";
monitor HCMTT8213LOLO;
evflag  evHCMTT8213LOLO;
sync 	HCMTT8213LOLO evHCMTT8213LOLO;

float HCMTT8214LOLOArray[19];
assign HCMTT8214LOLOArray to {
 "SCL32-BL03:CM01-TT8214:TempR.LOLO",
 "SCL32-BL03:CM02-TT8214:TempR.LOLO",
 "SCL32-BL03:CM03-TT8214:TempR.LOLO",
 "SCL32-BL03:CM04-TT8214:TempR.LOLO",
 "SCL32-BL03:CM05-TT8214:TempR.LOLO",
 "SCL32-BL03:CM06-TT8214:TempR.LOLO",
 "SCL32-BL03:CM07-TT8214:TempR.LOLO",
 "SCL32-BL03:CM08-TT8214:TempR.LOLO",
 "SCL32-BL03:CM09-TT8214:TempR.LOLO",
 "SCL32-BL03:CM10-TT8214:TempR.LOLO",
 "SCL32-BL03:CM11-TT8214:TempR.LOLO",
 "SCL32-BL03:CM12-TT8214:TempR.LOLO",
 "SCL32-BL03:CM13-TT8214:TempR.LOLO",
 "SCL32-BL03:CM14-TT8214:TempR.LOLO",
 "SCL32-BL03:CM15-TT8214:TempR.LOLO",
 "SCL32-BL03:CM16-TT8214:TempR.LOLO",
 "SCL32-BL03:CM17-TT8214:TempR.LOLO",
 "SCL32-BL03:CM18-TT8214:TempR.LOLO",
 "SCL32-BL03:CM19-TT8214:TempR.LOLO"

};
float	HCMTT8214LOLO;
assign	HCMTT8214LOLO to "{GrpHCMTT8214}.LOLO";
monitor HCMTT8214LOLO;
evflag  evHCMTT8214LOLO;
sync 	HCMTT8214LOLO evHCMTT8214LOLO;

float HCMEH8401VLOLOArray[32];
assign HCMEH8401VLOLOArray to {
 "SCL32-BL02:CM01-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM02-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM03-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM04-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM05-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM06-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM07-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM08-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM09-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM10-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM11-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM12-EH8401:VoltR.LOLO",
 "SCL32-BL02:CM13-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM01-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM02-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM03-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM04-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM05-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM06-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM07-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM08-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM09-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM10-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM11-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM12-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM13-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM14-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM15-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM16-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM17-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM18-EH8401:VoltR.LOLO",
 "SCL32-BL03:CM19-EH8401:VoltR.LOLO"

};
float	HCMEH8401VLOLO;
assign	HCMEH8401VLOLO to "{GrpHCMEH8401V}.LOLO";
monitor HCMEH8401VLOLO;
evflag  evHCMEH8401VLOLO;
sync 	HCMEH8401VLOLO evHCMEH8401VLOLO;

float HCMEH8401WLOLOArray[32];
assign HCMEH8401WLOLOArray to {
 "SCL32-BL02:CM01-EH8401:WattR.LOLO",
 "SCL32-BL02:CM02-EH8401:WattR.LOLO",
 "SCL32-BL02:CM03-EH8401:WattR.LOLO",
 "SCL32-BL02:CM04-EH8401:WattR.LOLO",
 "SCL32-BL02:CM05-EH8401:WattR.LOLO",
 "SCL32-BL02:CM06-EH8401:WattR.LOLO",
 "SCL32-BL02:CM07-EH8401:WattR.LOLO",
 "SCL32-BL02:CM08-EH8401:WattR.LOLO",
 "SCL32-BL02:CM09-EH8401:WattR.LOLO",
 "SCL32-BL02:CM10-EH8401:WattR.LOLO",
 "SCL32-BL02:CM11-EH8401:WattR.LOLO",
 "SCL32-BL02:CM12-EH8401:WattR.LOLO",
 "SCL32-BL02:CM13-EH8401:WattR.LOLO",
 "SCL32-BL03:CM01-EH8401:WattR.LOLO",
 "SCL32-BL03:CM02-EH8401:WattR.LOLO",
 "SCL32-BL03:CM03-EH8401:WattR.LOLO",
 "SCL32-BL03:CM04-EH8401:WattR.LOLO",
 "SCL32-BL03:CM05-EH8401:WattR.LOLO",
 "SCL32-BL03:CM06-EH8401:WattR.LOLO",
 "SCL32-BL03:CM07-EH8401:WattR.LOLO",
 "SCL32-BL03:CM08-EH8401:WattR.LOLO",
 "SCL32-BL03:CM09-EH8401:WattR.LOLO",
 "SCL32-BL03:CM10-EH8401:WattR.LOLO",
 "SCL32-BL03:CM11-EH8401:WattR.LOLO",
 "SCL32-BL03:CM12-EH8401:WattR.LOLO",
 "SCL32-BL03:CM13-EH8401:WattR.LOLO",
 "SCL32-BL03:CM14-EH8401:WattR.LOLO",
 "SCL32-BL03:CM15-EH8401:WattR.LOLO",
 "SCL32-BL03:CM16-EH8401:WattR.LOLO",
 "SCL32-BL03:CM17-EH8401:WattR.LOLO",
 "SCL32-BL03:CM18-EH8401:WattR.LOLO",
 "SCL32-BL03:CM19-EH8401:WattR.LOLO"

};
float	HCMEH8401WLOLO;
assign	HCMEH8401WLOLO to "{GrpHCMEH8401W}.LOLO";
monitor HCMEH8401WLOLO;
evflag  evHCMEH8401WLOLO;
sync 	HCMEH8401WLOLO evHCMEH8401WLOLO;

float HCMEH8402VLOLOArray[32];
assign HCMEH8402VLOLOArray to {
 "SCL32-BL02:CM01-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM02-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM03-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM04-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM05-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM06-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM07-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM08-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM09-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM10-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM11-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM12-EH8402:VoltR.LOLO",
 "SCL32-BL02:CM13-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM01-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM02-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM03-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM04-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM05-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM06-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM07-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM08-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM09-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM10-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM11-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM12-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM13-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM14-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM15-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM16-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM17-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM18-EH8402:VoltR.LOLO",
 "SCL32-BL03:CM19-EH8402:VoltR.LOLO"

};
float	HCMEH8402VLOLO;
assign	HCMEH8402VLOLO to "{GrpHCMEH8402V}.LOLO";
monitor HCMEH8402VLOLO;
evflag  evHCMEH8402VLOLO;
sync 	HCMEH8402VLOLO evHCMEH8402VLOLO;

float HCMEH8402WLOLOArray[32];
assign HCMEH8402WLOLOArray to {
 "SCL32-BL02:CM01-EH8402:WattR.LOLO",
 "SCL32-BL02:CM02-EH8402:WattR.LOLO",
 "SCL32-BL02:CM03-EH8402:WattR.LOLO",
 "SCL32-BL02:CM04-EH8402:WattR.LOLO",
 "SCL32-BL02:CM05-EH8402:WattR.LOLO",
 "SCL32-BL02:CM06-EH8402:WattR.LOLO",
 "SCL32-BL02:CM07-EH8402:WattR.LOLO",
 "SCL32-BL02:CM08-EH8402:WattR.LOLO",
 "SCL32-BL02:CM09-EH8402:WattR.LOLO",
 "SCL32-BL02:CM10-EH8402:WattR.LOLO",
 "SCL32-BL02:CM11-EH8402:WattR.LOLO",
 "SCL32-BL02:CM12-EH8402:WattR.LOLO",
 "SCL32-BL02:CM13-EH8402:WattR.LOLO",
 "SCL32-BL03:CM01-EH8402:WattR.LOLO",
 "SCL32-BL03:CM02-EH8402:WattR.LOLO",
 "SCL32-BL03:CM03-EH8402:WattR.LOLO",
 "SCL32-BL03:CM04-EH8402:WattR.LOLO",
 "SCL32-BL03:CM05-EH8402:WattR.LOLO",
 "SCL32-BL03:CM06-EH8402:WattR.LOLO",
 "SCL32-BL03:CM07-EH8402:WattR.LOLO",
 "SCL32-BL03:CM08-EH8402:WattR.LOLO",
 "SCL32-BL03:CM09-EH8402:WattR.LOLO",
 "SCL32-BL03:CM10-EH8402:WattR.LOLO",
 "SCL32-BL03:CM11-EH8402:WattR.LOLO",
 "SCL32-BL03:CM12-EH8402:WattR.LOLO",
 "SCL32-BL03:CM13-EH8402:WattR.LOLO",
 "SCL32-BL03:CM14-EH8402:WattR.LOLO",
 "SCL32-BL03:CM15-EH8402:WattR.LOLO",
 "SCL32-BL03:CM16-EH8402:WattR.LOLO",
 "SCL32-BL03:CM17-EH8402:WattR.LOLO",
 "SCL32-BL03:CM18-EH8402:WattR.LOLO",
 "SCL32-BL03:CM19-EH8402:WattR.LOLO"

};
float	HCMEH8402WLOLO;
assign	HCMEH8402WLOLO to "{GrpHCMEH8402W}.LOLO";
monitor HCMEH8402WLOLO;
evflag  evHCMEH8402WLOLO;
sync 	HCMEH8402WLOLO evHCMEH8402WLOLO;

float HCMEH8201VLOLOArray[32];
assign HCMEH8201VLOLOArray to {
 "SCL32-BL02:CM01-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM02-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM03-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM04-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM05-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM06-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM07-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM08-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM09-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM10-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM11-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM12-EH8201:VoltR.LOLO",
 "SCL32-BL02:CM13-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM01-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM02-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM03-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM04-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM05-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM06-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM07-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM08-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM09-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM10-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM11-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM12-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM13-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM14-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM15-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM16-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM17-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM18-EH8201:VoltR.LOLO",
 "SCL32-BL03:CM19-EH8201:VoltR.LOLO"

};
float	HCMEH8201VLOLO;
assign	HCMEH8201VLOLO to "{GrpHCMEH8201V}.LOLO";
monitor HCMEH8201VLOLO;
evflag  evHCMEH8201VLOLO;
sync 	HCMEH8201VLOLO evHCMEH8201VLOLO;

float HCMEH8201WLOLOArray[32];
assign HCMEH8201WLOLOArray to {
 "SCL32-BL02:CM01-EH8201:WattR.LOLO",
 "SCL32-BL02:CM02-EH8201:WattR.LOLO",
 "SCL32-BL02:CM03-EH8201:WattR.LOLO",
 "SCL32-BL02:CM04-EH8201:WattR.LOLO",
 "SCL32-BL02:CM05-EH8201:WattR.LOLO",
 "SCL32-BL02:CM06-EH8201:WattR.LOLO",
 "SCL32-BL02:CM07-EH8201:WattR.LOLO",
 "SCL32-BL02:CM08-EH8201:WattR.LOLO",
 "SCL32-BL02:CM09-EH8201:WattR.LOLO",
 "SCL32-BL02:CM10-EH8201:WattR.LOLO",
 "SCL32-BL02:CM11-EH8201:WattR.LOLO",
 "SCL32-BL02:CM12-EH8201:WattR.LOLO",
 "SCL32-BL02:CM13-EH8201:WattR.LOLO",
 "SCL32-BL03:CM01-EH8201:WattR.LOLO",
 "SCL32-BL03:CM02-EH8201:WattR.LOLO",
 "SCL32-BL03:CM03-EH8201:WattR.LOLO",
 "SCL32-BL03:CM04-EH8201:WattR.LOLO",
 "SCL32-BL03:CM05-EH8201:WattR.LOLO",
 "SCL32-BL03:CM06-EH8201:WattR.LOLO",
 "SCL32-BL03:CM07-EH8201:WattR.LOLO",
 "SCL32-BL03:CM08-EH8201:WattR.LOLO",
 "SCL32-BL03:CM09-EH8201:WattR.LOLO",
 "SCL32-BL03:CM10-EH8201:WattR.LOLO",
 "SCL32-BL03:CM11-EH8201:WattR.LOLO",
 "SCL32-BL03:CM12-EH8201:WattR.LOLO",
 "SCL32-BL03:CM13-EH8201:WattR.LOLO",
 "SCL32-BL03:CM14-EH8201:WattR.LOLO",
 "SCL32-BL03:CM15-EH8201:WattR.LOLO",
 "SCL32-BL03:CM16-EH8201:WattR.LOLO",
 "SCL32-BL03:CM17-EH8201:WattR.LOLO",
 "SCL32-BL03:CM18-EH8201:WattR.LOLO",
 "SCL32-BL03:CM19-EH8201:WattR.LOLO"

};
float	HCMEH8201WLOLO;
assign	HCMEH8201WLOLO to "{GrpHCMEH8201W}.LOLO";
monitor HCMEH8201WLOLO;
evflag  evHCMEH8201WLOLO;
sync 	HCMEH8201WLOLO evHCMEH8201WLOLO;


ss seq_controls_HWRAlarm
{
	state init
	{
		when(TRUE)
		{
        efClear(evHVBxPT7501HIHI);
        efClear(evHVBxPT7502HIHI);
        efClear(evHVBxPT7503HIHI);
        efClear(evHVBxPT7401HIHI);
        efClear(evHVBxPT7301HIHI);
        efClear(evHVBxPT7201HIHI);
        efClear(evHVBxPT7102HIHI);
        efClear(evHVBxPT7202HIHI);
        efClear(evHVBxPT7203HIHI);
        efClear(evHVBxTT7501HIHI);
        efClear(evHVBxTT7502HIHI);
        efClear(evHVBxTT7503HIHI);
        efClear(evHVBxTT7504HIHI);
        efClear(evHVBxTT7401HIHI);
        efClear(evHVBxTT7301HIHI);
        efClear(evHVBxTT7201HIHI);
        efClear(evHCMPT8501HIHI);
        efClear(evHCMPT8301HIHI);
        efClear(evHCMPT8201HIHI);
        efClear(evHCMPT8202HIHI);
        efClear(evHCMPT8203HIHI);
        efClear(evHCMPT8101HIHI);
        efClear(evHCMPT8102HIHI);
        efClear(evHCMPT8104HIHI);
        efClear(evHCMPT8112HIHI);
        efClear(evHCMPT8103HIHI);
        efClear(evHCMPT8113HIHI);
        efClear(evHCMTT8601HIHI);
        efClear(evHCMTT8602HIHI);
        efClear(evHCMTT8501HIHI);
        efClear(evHCMTT8502HIHI);
        efClear(evHCMTT8401HIHI);
        efClear(evHCMTT8402HIHI);
        efClear(evHCMTT8404HIHI);
        efClear(evHCMTT8202HIHI);
        efClear(evHCMTT8203HIHI);
        efClear(evHCMTT8204HIHI);
        efClear(evHCMTT8205HIHI);
        efClear(evHCMTT8206HIHI);
        efClear(evHCMTT8207HIHI);
        efClear(evHCMTT8208HIHI);
        efClear(evHCMLT8401HIHI);
        efClear(evHCMLT8201HIHI);
        efClear(evHCMTT8603HIHI);
        efClear(evHCMTT8604HIHI);
        efClear(evHCMTT8209HIHI);
        efClear(evHCMTT8210HIHI);
        efClear(evHCMTT8211HIHI);
        efClear(evHCMTT8212HIHI);
        efClear(evHCMTT8213HIHI);
        efClear(evHCMTT8214HIHI);
        efClear(evHCMEH8401VHIHI);
        efClear(evHCMEH8401WHIHI);
        efClear(evHCMEH8402VHIHI);
        efClear(evHCMEH8402WHIHI);
        efClear(evHCMEH8201VHIHI);
        efClear(evHCMEH8201WHIHI);
        efClear(evHVBxPT7501HIGH);
        efClear(evHVBxPT7502HIGH);
        efClear(evHVBxPT7503HIGH);
        efClear(evHVBxPT7401HIGH);
        efClear(evHVBxPT7301HIGH);
        efClear(evHVBxPT7201HIGH);
        efClear(evHVBxPT7102HIGH);
        efClear(evHVBxPT7202HIGH);
        efClear(evHVBxPT7203HIGH);
        efClear(evHVBxTT7501HIGH);
        efClear(evHVBxTT7502HIGH);
        efClear(evHVBxTT7503HIGH);
        efClear(evHVBxTT7504HIGH);
        efClear(evHVBxTT7401HIGH);
        efClear(evHVBxTT7301HIGH);
        efClear(evHVBxTT7201HIGH);
        efClear(evHCMPT8501HIGH);
        efClear(evHCMPT8301HIGH);
        efClear(evHCMPT8201HIGH);
        efClear(evHCMPT8202HIGH);
        efClear(evHCMPT8203HIGH);
        efClear(evHCMPT8101HIGH);
        efClear(evHCMPT8102HIGH);
        efClear(evHCMPT8104HIGH);
        efClear(evHCMPT8112HIGH);
        efClear(evHCMPT8103HIGH);
        efClear(evHCMPT8113HIGH);
        efClear(evHCMTT8601HIGH);
        efClear(evHCMTT8602HIGH);
        efClear(evHCMTT8501HIGH);
        efClear(evHCMTT8502HIGH);
        efClear(evHCMTT8401HIGH);
        efClear(evHCMTT8402HIGH);
        efClear(evHCMTT8404HIGH);
        efClear(evHCMTT8202HIGH);
        efClear(evHCMTT8203HIGH);
        efClear(evHCMTT8204HIGH);
        efClear(evHCMTT8205HIGH);
        efClear(evHCMTT8206HIGH);
        efClear(evHCMTT8207HIGH);
        efClear(evHCMTT8208HIGH);
        efClear(evHCMLT8401HIGH);
        efClear(evHCMLT8201HIGH);
        efClear(evHCMTT8603HIGH);
        efClear(evHCMTT8604HIGH);
        efClear(evHCMTT8209HIGH);
        efClear(evHCMTT8210HIGH);
        efClear(evHCMTT8211HIGH);
        efClear(evHCMTT8212HIGH);
        efClear(evHCMTT8213HIGH);
        efClear(evHCMTT8214HIGH);
        efClear(evHCMEH8401VHIGH);
        efClear(evHCMEH8401WHIGH);
        efClear(evHCMEH8402VHIGH);
        efClear(evHCMEH8402WHIGH);
        efClear(evHCMEH8201VHIGH);
        efClear(evHCMEH8201WHIGH);
        efClear(evHVBxPT7501LOW);
        efClear(evHVBxPT7502LOW);
        efClear(evHVBxPT7503LOW);
        efClear(evHVBxPT7401LOW);
        efClear(evHVBxPT7301LOW);
        efClear(evHVBxPT7201LOW);
        efClear(evHVBxPT7102LOW);
        efClear(evHVBxPT7202LOW);
        efClear(evHVBxPT7203LOW);
        efClear(evHVBxTT7501LOW);
        efClear(evHVBxTT7502LOW);
        efClear(evHVBxTT7503LOW);
        efClear(evHVBxTT7504LOW);
        efClear(evHVBxTT7401LOW);
        efClear(evHVBxTT7301LOW);
        efClear(evHVBxTT7201LOW);
        efClear(evHCMPT8501LOW);
        efClear(evHCMPT8301LOW);
        efClear(evHCMPT8201LOW);
        efClear(evHCMPT8202LOW);
        efClear(evHCMPT8203LOW);
        efClear(evHCMPT8101LOW);
        efClear(evHCMPT8102LOW);
        efClear(evHCMPT8104LOW);
        efClear(evHCMPT8112LOW);
        efClear(evHCMPT8103LOW);
        efClear(evHCMPT8113LOW);
        efClear(evHCMTT8601LOW);
        efClear(evHCMTT8602LOW);
        efClear(evHCMTT8501LOW);
        efClear(evHCMTT8502LOW);
        efClear(evHCMTT8401LOW);
        efClear(evHCMTT8402LOW);
        efClear(evHCMTT8404LOW);
        efClear(evHCMTT8202LOW);
        efClear(evHCMTT8203LOW);
        efClear(evHCMTT8204LOW);
        efClear(evHCMTT8205LOW);
        efClear(evHCMTT8206LOW);
        efClear(evHCMTT8207LOW);
        efClear(evHCMTT8208LOW);
        efClear(evHCMLT8401LOW);
        efClear(evHCMLT8201LOW);
        efClear(evHCMTT8603LOW);
        efClear(evHCMTT8604LOW);
        efClear(evHCMTT8209LOW);
        efClear(evHCMTT8210LOW);
        efClear(evHCMTT8211LOW);
        efClear(evHCMTT8212LOW);
        efClear(evHCMTT8213LOW);
        efClear(evHCMTT8214LOW);
        efClear(evHCMEH8401VLOW);
        efClear(evHCMEH8401WLOW);
        efClear(evHCMEH8402VLOW);
        efClear(evHCMEH8402WLOW);
        efClear(evHCMEH8201VLOW);
        efClear(evHCMEH8201WLOW);
        efClear(evHVBxPT7501LOLO);
        efClear(evHVBxPT7502LOLO);
        efClear(evHVBxPT7503LOLO);
        efClear(evHVBxPT7401LOLO);
        efClear(evHVBxPT7301LOLO);
        efClear(evHVBxPT7201LOLO);
        efClear(evHVBxPT7102LOLO);
        efClear(evHVBxPT7202LOLO);
        efClear(evHVBxPT7203LOLO);
        efClear(evHVBxTT7501LOLO);
        efClear(evHVBxTT7502LOLO);
        efClear(evHVBxTT7503LOLO);
        efClear(evHVBxTT7504LOLO);
        efClear(evHVBxTT7401LOLO);
        efClear(evHVBxTT7301LOLO);
        efClear(evHVBxTT7201LOLO);
        efClear(evHCMPT8501LOLO);
        efClear(evHCMPT8301LOLO);
        efClear(evHCMPT8201LOLO);
        efClear(evHCMPT8202LOLO);
        efClear(evHCMPT8203LOLO);
        efClear(evHCMPT8101LOLO);
        efClear(evHCMPT8102LOLO);
        efClear(evHCMPT8104LOLO);
        efClear(evHCMPT8112LOLO);
        efClear(evHCMPT8103LOLO);
        efClear(evHCMPT8113LOLO);
        efClear(evHCMTT8601LOLO);
        efClear(evHCMTT8602LOLO);
        efClear(evHCMTT8501LOLO);
        efClear(evHCMTT8502LOLO);
        efClear(evHCMTT8401LOLO);
        efClear(evHCMTT8402LOLO);
        efClear(evHCMTT8404LOLO);
        efClear(evHCMTT8202LOLO);
        efClear(evHCMTT8203LOLO);
        efClear(evHCMTT8204LOLO);
        efClear(evHCMTT8205LOLO);
        efClear(evHCMTT8206LOLO);
        efClear(evHCMTT8207LOLO);
        efClear(evHCMTT8208LOLO);
        efClear(evHCMLT8401LOLO);
        efClear(evHCMLT8201LOLO);
        efClear(evHCMTT8603LOLO);
        efClear(evHCMTT8604LOLO);
        efClear(evHCMTT8209LOLO);
        efClear(evHCMTT8210LOLO);
        efClear(evHCMTT8211LOLO);
        efClear(evHCMTT8212LOLO);
        efClear(evHCMTT8213LOLO);
        efClear(evHCMTT8214LOLO);
        efClear(evHCMEH8401VLOLO);
        efClear(evHCMEH8401WLOLO);
        efClear(evHCMEH8402VLOLO);
        efClear(evHCMEH8402WLOLO);
        efClear(evHCMEH8201VLOLO);
        efClear(evHCMEH8201WLOLO);

		}state WaitEvent
	}

	state WaitEvent
	{
 
		when(efTestAndClear(evHVBxPT7501HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7501HIHIArray)/sizeof(HVBxPT7501HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7501HIHIArray[index] = HVBxPT7501HIHI;
				pvPut(HVBxPT7501HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7502HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7502HIHIArray)/sizeof(HVBxPT7502HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7502HIHIArray[index] = HVBxPT7502HIHI;
				pvPut(HVBxPT7502HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7503HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7503HIHIArray)/sizeof(HVBxPT7503HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7503HIHIArray[index] = HVBxPT7503HIHI;
				pvPut(HVBxPT7503HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7401HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7401HIHIArray)/sizeof(HVBxPT7401HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7401HIHIArray[index] = HVBxPT7401HIHI;
				pvPut(HVBxPT7401HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7301HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7301HIHIArray)/sizeof(HVBxPT7301HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7301HIHIArray[index] = HVBxPT7301HIHI;
				pvPut(HVBxPT7301HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7201HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7201HIHIArray)/sizeof(HVBxPT7201HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7201HIHIArray[index] = HVBxPT7201HIHI;
				pvPut(HVBxPT7201HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7102HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7102HIHIArray)/sizeof(HVBxPT7102HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7102HIHIArray[index] = HVBxPT7102HIHI;
				pvPut(HVBxPT7102HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7202HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7202HIHIArray)/sizeof(HVBxPT7202HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7202HIHIArray[index] = HVBxPT7202HIHI;
				pvPut(HVBxPT7202HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7203HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7203HIHIArray)/sizeof(HVBxPT7203HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7203HIHIArray[index] = HVBxPT7203HIHI;
				pvPut(HVBxPT7203HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7501HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7501HIHIArray)/sizeof(HVBxTT7501HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7501HIHIArray[index] = HVBxTT7501HIHI;
				pvPut(HVBxTT7501HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7502HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7502HIHIArray)/sizeof(HVBxTT7502HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7502HIHIArray[index] = HVBxTT7502HIHI;
				pvPut(HVBxTT7502HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7503HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7503HIHIArray)/sizeof(HVBxTT7503HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7503HIHIArray[index] = HVBxTT7503HIHI;
				pvPut(HVBxTT7503HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7504HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7504HIHIArray)/sizeof(HVBxTT7504HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7504HIHIArray[index] = HVBxTT7504HIHI;
				pvPut(HVBxTT7504HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7401HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7401HIHIArray)/sizeof(HVBxTT7401HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7401HIHIArray[index] = HVBxTT7401HIHI;
				pvPut(HVBxTT7401HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7301HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7301HIHIArray)/sizeof(HVBxTT7301HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7301HIHIArray[index] = HVBxTT7301HIHI;
				pvPut(HVBxTT7301HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7201HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7201HIHIArray)/sizeof(HVBxTT7201HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7201HIHIArray[index] = HVBxTT7201HIHI;
				pvPut(HVBxTT7201HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8501HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8501HIHIArray)/sizeof(HCMPT8501HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8501HIHIArray[index] = HCMPT8501HIHI;
				pvPut(HCMPT8501HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8301HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8301HIHIArray)/sizeof(HCMPT8301HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8301HIHIArray[index] = HCMPT8301HIHI;
				pvPut(HCMPT8301HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8201HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8201HIHIArray)/sizeof(HCMPT8201HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8201HIHIArray[index] = HCMPT8201HIHI;
				pvPut(HCMPT8201HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8202HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8202HIHIArray)/sizeof(HCMPT8202HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8202HIHIArray[index] = HCMPT8202HIHI;
				pvPut(HCMPT8202HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8203HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8203HIHIArray)/sizeof(HCMPT8203HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8203HIHIArray[index] = HCMPT8203HIHI;
				pvPut(HCMPT8203HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8101HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8101HIHIArray)/sizeof(HCMPT8101HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8101HIHIArray[index] = HCMPT8101HIHI;
				pvPut(HCMPT8101HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8102HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8102HIHIArray)/sizeof(HCMPT8102HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8102HIHIArray[index] = HCMPT8102HIHI;
				pvPut(HCMPT8102HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8104HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8104HIHIArray)/sizeof(HCMPT8104HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8104HIHIArray[index] = HCMPT8104HIHI;
				pvPut(HCMPT8104HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8112HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8112HIHIArray)/sizeof(HCMPT8112HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8112HIHIArray[index] = HCMPT8112HIHI;
				pvPut(HCMPT8112HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8103HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8103HIHIArray)/sizeof(HCMPT8103HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8103HIHIArray[index] = HCMPT8103HIHI;
				pvPut(HCMPT8103HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8113HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8113HIHIArray)/sizeof(HCMPT8113HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8113HIHIArray[index] = HCMPT8113HIHI;
				pvPut(HCMPT8113HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8601HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8601HIHIArray)/sizeof(HCMTT8601HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8601HIHIArray[index] = HCMTT8601HIHI;
				pvPut(HCMTT8601HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8602HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8602HIHIArray)/sizeof(HCMTT8602HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8602HIHIArray[index] = HCMTT8602HIHI;
				pvPut(HCMTT8602HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8501HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8501HIHIArray)/sizeof(HCMTT8501HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8501HIHIArray[index] = HCMTT8501HIHI;
				pvPut(HCMTT8501HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8502HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8502HIHIArray)/sizeof(HCMTT8502HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8502HIHIArray[index] = HCMTT8502HIHI;
				pvPut(HCMTT8502HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8401HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8401HIHIArray)/sizeof(HCMTT8401HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8401HIHIArray[index] = HCMTT8401HIHI;
				pvPut(HCMTT8401HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8402HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8402HIHIArray)/sizeof(HCMTT8402HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8402HIHIArray[index] = HCMTT8402HIHI;
				pvPut(HCMTT8402HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8404HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8404HIHIArray)/sizeof(HCMTT8404HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8404HIHIArray[index] = HCMTT8404HIHI;
				pvPut(HCMTT8404HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8202HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8202HIHIArray)/sizeof(HCMTT8202HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8202HIHIArray[index] = HCMTT8202HIHI;
				pvPut(HCMTT8202HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8203HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8203HIHIArray)/sizeof(HCMTT8203HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8203HIHIArray[index] = HCMTT8203HIHI;
				pvPut(HCMTT8203HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8204HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8204HIHIArray)/sizeof(HCMTT8204HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8204HIHIArray[index] = HCMTT8204HIHI;
				pvPut(HCMTT8204HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8205HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8205HIHIArray)/sizeof(HCMTT8205HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8205HIHIArray[index] = HCMTT8205HIHI;
				pvPut(HCMTT8205HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8206HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8206HIHIArray)/sizeof(HCMTT8206HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8206HIHIArray[index] = HCMTT8206HIHI;
				pvPut(HCMTT8206HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8207HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8207HIHIArray)/sizeof(HCMTT8207HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8207HIHIArray[index] = HCMTT8207HIHI;
				pvPut(HCMTT8207HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8208HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8208HIHIArray)/sizeof(HCMTT8208HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8208HIHIArray[index] = HCMTT8208HIHI;
				pvPut(HCMTT8208HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8401HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8401HIHIArray)/sizeof(HCMLT8401HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8401HIHIArray[index] = HCMLT8401HIHI;
				pvPut(HCMLT8401HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8201HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8201HIHIArray)/sizeof(HCMLT8201HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8201HIHIArray[index] = HCMLT8201HIHI;
				pvPut(HCMLT8201HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8603HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8603HIHIArray)/sizeof(HCMTT8603HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8603HIHIArray[index] = HCMTT8603HIHI;
				pvPut(HCMTT8603HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8604HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8604HIHIArray)/sizeof(HCMTT8604HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8604HIHIArray[index] = HCMTT8604HIHI;
				pvPut(HCMTT8604HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8209HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8209HIHIArray)/sizeof(HCMTT8209HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8209HIHIArray[index] = HCMTT8209HIHI;
				pvPut(HCMTT8209HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8210HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8210HIHIArray)/sizeof(HCMTT8210HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8210HIHIArray[index] = HCMTT8210HIHI;
				pvPut(HCMTT8210HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8211HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8211HIHIArray)/sizeof(HCMTT8211HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8211HIHIArray[index] = HCMTT8211HIHI;
				pvPut(HCMTT8211HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8212HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8212HIHIArray)/sizeof(HCMTT8212HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8212HIHIArray[index] = HCMTT8212HIHI;
				pvPut(HCMTT8212HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8213HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8213HIHIArray)/sizeof(HCMTT8213HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8213HIHIArray[index] = HCMTT8213HIHI;
				pvPut(HCMTT8213HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8214HIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8214HIHIArray)/sizeof(HCMTT8214HIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8214HIHIArray[index] = HCMTT8214HIHI;
				pvPut(HCMTT8214HIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401VHIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401VHIHIArray)/sizeof(HCMEH8401VHIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401VHIHIArray[index] = HCMEH8401VHIHI;
				pvPut(HCMEH8401VHIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401WHIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401WHIHIArray)/sizeof(HCMEH8401WHIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401WHIHIArray[index] = HCMEH8401WHIHI;
				pvPut(HCMEH8401WHIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402VHIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402VHIHIArray)/sizeof(HCMEH8402VHIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402VHIHIArray[index] = HCMEH8402VHIHI;
				pvPut(HCMEH8402VHIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402WHIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402WHIHIArray)/sizeof(HCMEH8402WHIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402WHIHIArray[index] = HCMEH8402WHIHI;
				pvPut(HCMEH8402WHIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201VHIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201VHIHIArray)/sizeof(HCMEH8201VHIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201VHIHIArray[index] = HCMEH8201VHIHI;
				pvPut(HCMEH8201VHIHIArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201WHIHI))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201WHIHIArray)/sizeof(HCMEH8201WHIHIArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201WHIHIArray[index] = HCMEH8201WHIHI;
				pvPut(HCMEH8201WHIHIArray[index], ASYNC);
			}
		}state GrpControls
  
		when(efTestAndClear(evHVBxPT7501HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7501HIGHArray)/sizeof(HVBxPT7501HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7501HIGHArray[index] = HVBxPT7501HIGH;
				pvPut(HVBxPT7501HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7502HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7502HIGHArray)/sizeof(HVBxPT7502HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7502HIGHArray[index] = HVBxPT7502HIGH;
				pvPut(HVBxPT7502HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7503HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7503HIGHArray)/sizeof(HVBxPT7503HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7503HIGHArray[index] = HVBxPT7503HIGH;
				pvPut(HVBxPT7503HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7401HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7401HIGHArray)/sizeof(HVBxPT7401HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7401HIGHArray[index] = HVBxPT7401HIGH;
				pvPut(HVBxPT7401HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7301HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7301HIGHArray)/sizeof(HVBxPT7301HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7301HIGHArray[index] = HVBxPT7301HIGH;
				pvPut(HVBxPT7301HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7201HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7201HIGHArray)/sizeof(HVBxPT7201HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7201HIGHArray[index] = HVBxPT7201HIGH;
				pvPut(HVBxPT7201HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7102HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7102HIGHArray)/sizeof(HVBxPT7102HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7102HIGHArray[index] = HVBxPT7102HIGH;
				pvPut(HVBxPT7102HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7202HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7202HIGHArray)/sizeof(HVBxPT7202HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7202HIGHArray[index] = HVBxPT7202HIGH;
				pvPut(HVBxPT7202HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7203HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7203HIGHArray)/sizeof(HVBxPT7203HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7203HIGHArray[index] = HVBxPT7203HIGH;
				pvPut(HVBxPT7203HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7501HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7501HIGHArray)/sizeof(HVBxTT7501HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7501HIGHArray[index] = HVBxTT7501HIGH;
				pvPut(HVBxTT7501HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7502HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7502HIGHArray)/sizeof(HVBxTT7502HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7502HIGHArray[index] = HVBxTT7502HIGH;
				pvPut(HVBxTT7502HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7503HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7503HIGHArray)/sizeof(HVBxTT7503HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7503HIGHArray[index] = HVBxTT7503HIGH;
				pvPut(HVBxTT7503HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7504HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7504HIGHArray)/sizeof(HVBxTT7504HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7504HIGHArray[index] = HVBxTT7504HIGH;
				pvPut(HVBxTT7504HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7401HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7401HIGHArray)/sizeof(HVBxTT7401HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7401HIGHArray[index] = HVBxTT7401HIGH;
				pvPut(HVBxTT7401HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7301HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7301HIGHArray)/sizeof(HVBxTT7301HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7301HIGHArray[index] = HVBxTT7301HIGH;
				pvPut(HVBxTT7301HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7201HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7201HIGHArray)/sizeof(HVBxTT7201HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7201HIGHArray[index] = HVBxTT7201HIGH;
				pvPut(HVBxTT7201HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8501HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8501HIGHArray)/sizeof(HCMPT8501HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8501HIGHArray[index] = HCMPT8501HIGH;
				pvPut(HCMPT8501HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8301HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8301HIGHArray)/sizeof(HCMPT8301HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8301HIGHArray[index] = HCMPT8301HIGH;
				pvPut(HCMPT8301HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8201HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8201HIGHArray)/sizeof(HCMPT8201HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8201HIGHArray[index] = HCMPT8201HIGH;
				pvPut(HCMPT8201HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8202HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8202HIGHArray)/sizeof(HCMPT8202HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8202HIGHArray[index] = HCMPT8202HIGH;
				pvPut(HCMPT8202HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8203HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8203HIGHArray)/sizeof(HCMPT8203HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8203HIGHArray[index] = HCMPT8203HIGH;
				pvPut(HCMPT8203HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8101HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8101HIGHArray)/sizeof(HCMPT8101HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8101HIGHArray[index] = HCMPT8101HIGH;
				pvPut(HCMPT8101HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8102HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8102HIGHArray)/sizeof(HCMPT8102HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8102HIGHArray[index] = HCMPT8102HIGH;
				pvPut(HCMPT8102HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8104HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8104HIGHArray)/sizeof(HCMPT8104HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8104HIGHArray[index] = HCMPT8104HIGH;
				pvPut(HCMPT8104HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8112HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8112HIGHArray)/sizeof(HCMPT8112HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8112HIGHArray[index] = HCMPT8112HIGH;
				pvPut(HCMPT8112HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8103HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8103HIGHArray)/sizeof(HCMPT8103HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8103HIGHArray[index] = HCMPT8103HIGH;
				pvPut(HCMPT8103HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8113HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8113HIGHArray)/sizeof(HCMPT8113HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8113HIGHArray[index] = HCMPT8113HIGH;
				pvPut(HCMPT8113HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8601HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8601HIGHArray)/sizeof(HCMTT8601HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8601HIGHArray[index] = HCMTT8601HIGH;
				pvPut(HCMTT8601HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8602HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8602HIGHArray)/sizeof(HCMTT8602HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8602HIGHArray[index] = HCMTT8602HIGH;
				pvPut(HCMTT8602HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8501HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8501HIGHArray)/sizeof(HCMTT8501HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8501HIGHArray[index] = HCMTT8501HIGH;
				pvPut(HCMTT8501HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8502HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8502HIGHArray)/sizeof(HCMTT8502HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8502HIGHArray[index] = HCMTT8502HIGH;
				pvPut(HCMTT8502HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8401HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8401HIGHArray)/sizeof(HCMTT8401HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8401HIGHArray[index] = HCMTT8401HIGH;
				pvPut(HCMTT8401HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8402HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8402HIGHArray)/sizeof(HCMTT8402HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8402HIGHArray[index] = HCMTT8402HIGH;
				pvPut(HCMTT8402HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8404HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8404HIGHArray)/sizeof(HCMTT8404HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8404HIGHArray[index] = HCMTT8404HIGH;
				pvPut(HCMTT8404HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8202HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8202HIGHArray)/sizeof(HCMTT8202HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8202HIGHArray[index] = HCMTT8202HIGH;
				pvPut(HCMTT8202HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8203HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8203HIGHArray)/sizeof(HCMTT8203HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8203HIGHArray[index] = HCMTT8203HIGH;
				pvPut(HCMTT8203HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8204HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8204HIGHArray)/sizeof(HCMTT8204HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8204HIGHArray[index] = HCMTT8204HIGH;
				pvPut(HCMTT8204HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8205HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8205HIGHArray)/sizeof(HCMTT8205HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8205HIGHArray[index] = HCMTT8205HIGH;
				pvPut(HCMTT8205HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8206HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8206HIGHArray)/sizeof(HCMTT8206HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8206HIGHArray[index] = HCMTT8206HIGH;
				pvPut(HCMTT8206HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8207HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8207HIGHArray)/sizeof(HCMTT8207HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8207HIGHArray[index] = HCMTT8207HIGH;
				pvPut(HCMTT8207HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8208HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8208HIGHArray)/sizeof(HCMTT8208HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8208HIGHArray[index] = HCMTT8208HIGH;
				pvPut(HCMTT8208HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8401HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8401HIGHArray)/sizeof(HCMLT8401HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8401HIGHArray[index] = HCMLT8401HIGH;
				pvPut(HCMLT8401HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8201HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8201HIGHArray)/sizeof(HCMLT8201HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8201HIGHArray[index] = HCMLT8201HIGH;
				pvPut(HCMLT8201HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8603HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8603HIGHArray)/sizeof(HCMTT8603HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8603HIGHArray[index] = HCMTT8603HIGH;
				pvPut(HCMTT8603HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8604HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8604HIGHArray)/sizeof(HCMTT8604HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8604HIGHArray[index] = HCMTT8604HIGH;
				pvPut(HCMTT8604HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8209HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8209HIGHArray)/sizeof(HCMTT8209HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8209HIGHArray[index] = HCMTT8209HIGH;
				pvPut(HCMTT8209HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8210HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8210HIGHArray)/sizeof(HCMTT8210HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8210HIGHArray[index] = HCMTT8210HIGH;
				pvPut(HCMTT8210HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8211HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8211HIGHArray)/sizeof(HCMTT8211HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8211HIGHArray[index] = HCMTT8211HIGH;
				pvPut(HCMTT8211HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8212HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8212HIGHArray)/sizeof(HCMTT8212HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8212HIGHArray[index] = HCMTT8212HIGH;
				pvPut(HCMTT8212HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8213HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8213HIGHArray)/sizeof(HCMTT8213HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8213HIGHArray[index] = HCMTT8213HIGH;
				pvPut(HCMTT8213HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8214HIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8214HIGHArray)/sizeof(HCMTT8214HIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8214HIGHArray[index] = HCMTT8214HIGH;
				pvPut(HCMTT8214HIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401VHIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401VHIGHArray)/sizeof(HCMEH8401VHIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401VHIGHArray[index] = HCMEH8401VHIGH;
				pvPut(HCMEH8401VHIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401WHIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401WHIGHArray)/sizeof(HCMEH8401WHIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401WHIGHArray[index] = HCMEH8401WHIGH;
				pvPut(HCMEH8401WHIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402VHIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402VHIGHArray)/sizeof(HCMEH8402VHIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402VHIGHArray[index] = HCMEH8402VHIGH;
				pvPut(HCMEH8402VHIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402WHIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402WHIGHArray)/sizeof(HCMEH8402WHIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402WHIGHArray[index] = HCMEH8402WHIGH;
				pvPut(HCMEH8402WHIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201VHIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201VHIGHArray)/sizeof(HCMEH8201VHIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201VHIGHArray[index] = HCMEH8201VHIGH;
				pvPut(HCMEH8201VHIGHArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201WHIGH))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201WHIGHArray)/sizeof(HCMEH8201WHIGHArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201WHIGHArray[index] = HCMEH8201WHIGH;
				pvPut(HCMEH8201WHIGHArray[index], ASYNC);
			}
		}state GrpControls
  
		when(efTestAndClear(evHVBxPT7501LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7501LOWArray)/sizeof(HVBxPT7501LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7501LOWArray[index] = HVBxPT7501LOW;
				pvPut(HVBxPT7501LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7502LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7502LOWArray)/sizeof(HVBxPT7502LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7502LOWArray[index] = HVBxPT7502LOW;
				pvPut(HVBxPT7502LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7503LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7503LOWArray)/sizeof(HVBxPT7503LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7503LOWArray[index] = HVBxPT7503LOW;
				pvPut(HVBxPT7503LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7401LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7401LOWArray)/sizeof(HVBxPT7401LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7401LOWArray[index] = HVBxPT7401LOW;
				pvPut(HVBxPT7401LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7301LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7301LOWArray)/sizeof(HVBxPT7301LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7301LOWArray[index] = HVBxPT7301LOW;
				pvPut(HVBxPT7301LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7201LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7201LOWArray)/sizeof(HVBxPT7201LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7201LOWArray[index] = HVBxPT7201LOW;
				pvPut(HVBxPT7201LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7102LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7102LOWArray)/sizeof(HVBxPT7102LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7102LOWArray[index] = HVBxPT7102LOW;
				pvPut(HVBxPT7102LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7202LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7202LOWArray)/sizeof(HVBxPT7202LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7202LOWArray[index] = HVBxPT7202LOW;
				pvPut(HVBxPT7202LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7203LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7203LOWArray)/sizeof(HVBxPT7203LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7203LOWArray[index] = HVBxPT7203LOW;
				pvPut(HVBxPT7203LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7501LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7501LOWArray)/sizeof(HVBxTT7501LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7501LOWArray[index] = HVBxTT7501LOW;
				pvPut(HVBxTT7501LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7502LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7502LOWArray)/sizeof(HVBxTT7502LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7502LOWArray[index] = HVBxTT7502LOW;
				pvPut(HVBxTT7502LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7503LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7503LOWArray)/sizeof(HVBxTT7503LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7503LOWArray[index] = HVBxTT7503LOW;
				pvPut(HVBxTT7503LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7504LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7504LOWArray)/sizeof(HVBxTT7504LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7504LOWArray[index] = HVBxTT7504LOW;
				pvPut(HVBxTT7504LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7401LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7401LOWArray)/sizeof(HVBxTT7401LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7401LOWArray[index] = HVBxTT7401LOW;
				pvPut(HVBxTT7401LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7301LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7301LOWArray)/sizeof(HVBxTT7301LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7301LOWArray[index] = HVBxTT7301LOW;
				pvPut(HVBxTT7301LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7201LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7201LOWArray)/sizeof(HVBxTT7201LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7201LOWArray[index] = HVBxTT7201LOW;
				pvPut(HVBxTT7201LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8501LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8501LOWArray)/sizeof(HCMPT8501LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8501LOWArray[index] = HCMPT8501LOW;
				pvPut(HCMPT8501LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8301LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8301LOWArray)/sizeof(HCMPT8301LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8301LOWArray[index] = HCMPT8301LOW;
				pvPut(HCMPT8301LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8201LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8201LOWArray)/sizeof(HCMPT8201LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8201LOWArray[index] = HCMPT8201LOW;
				pvPut(HCMPT8201LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8202LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8202LOWArray)/sizeof(HCMPT8202LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8202LOWArray[index] = HCMPT8202LOW;
				pvPut(HCMPT8202LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8203LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8203LOWArray)/sizeof(HCMPT8203LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8203LOWArray[index] = HCMPT8203LOW;
				pvPut(HCMPT8203LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8101LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8101LOWArray)/sizeof(HCMPT8101LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8101LOWArray[index] = HCMPT8101LOW;
				pvPut(HCMPT8101LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8102LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8102LOWArray)/sizeof(HCMPT8102LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8102LOWArray[index] = HCMPT8102LOW;
				pvPut(HCMPT8102LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8104LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8104LOWArray)/sizeof(HCMPT8104LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8104LOWArray[index] = HCMPT8104LOW;
				pvPut(HCMPT8104LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8112LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8112LOWArray)/sizeof(HCMPT8112LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8112LOWArray[index] = HCMPT8112LOW;
				pvPut(HCMPT8112LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8103LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8103LOWArray)/sizeof(HCMPT8103LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8103LOWArray[index] = HCMPT8103LOW;
				pvPut(HCMPT8103LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8113LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8113LOWArray)/sizeof(HCMPT8113LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8113LOWArray[index] = HCMPT8113LOW;
				pvPut(HCMPT8113LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8601LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8601LOWArray)/sizeof(HCMTT8601LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8601LOWArray[index] = HCMTT8601LOW;
				pvPut(HCMTT8601LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8602LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8602LOWArray)/sizeof(HCMTT8602LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8602LOWArray[index] = HCMTT8602LOW;
				pvPut(HCMTT8602LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8501LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8501LOWArray)/sizeof(HCMTT8501LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8501LOWArray[index] = HCMTT8501LOW;
				pvPut(HCMTT8501LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8502LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8502LOWArray)/sizeof(HCMTT8502LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8502LOWArray[index] = HCMTT8502LOW;
				pvPut(HCMTT8502LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8401LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8401LOWArray)/sizeof(HCMTT8401LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8401LOWArray[index] = HCMTT8401LOW;
				pvPut(HCMTT8401LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8402LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8402LOWArray)/sizeof(HCMTT8402LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8402LOWArray[index] = HCMTT8402LOW;
				pvPut(HCMTT8402LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8404LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8404LOWArray)/sizeof(HCMTT8404LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8404LOWArray[index] = HCMTT8404LOW;
				pvPut(HCMTT8404LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8202LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8202LOWArray)/sizeof(HCMTT8202LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8202LOWArray[index] = HCMTT8202LOW;
				pvPut(HCMTT8202LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8203LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8203LOWArray)/sizeof(HCMTT8203LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8203LOWArray[index] = HCMTT8203LOW;
				pvPut(HCMTT8203LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8204LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8204LOWArray)/sizeof(HCMTT8204LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8204LOWArray[index] = HCMTT8204LOW;
				pvPut(HCMTT8204LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8205LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8205LOWArray)/sizeof(HCMTT8205LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8205LOWArray[index] = HCMTT8205LOW;
				pvPut(HCMTT8205LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8206LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8206LOWArray)/sizeof(HCMTT8206LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8206LOWArray[index] = HCMTT8206LOW;
				pvPut(HCMTT8206LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8207LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8207LOWArray)/sizeof(HCMTT8207LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8207LOWArray[index] = HCMTT8207LOW;
				pvPut(HCMTT8207LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8208LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8208LOWArray)/sizeof(HCMTT8208LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8208LOWArray[index] = HCMTT8208LOW;
				pvPut(HCMTT8208LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8401LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8401LOWArray)/sizeof(HCMLT8401LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8401LOWArray[index] = HCMLT8401LOW;
				pvPut(HCMLT8401LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8201LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8201LOWArray)/sizeof(HCMLT8201LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8201LOWArray[index] = HCMLT8201LOW;
				pvPut(HCMLT8201LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8603LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8603LOWArray)/sizeof(HCMTT8603LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8603LOWArray[index] = HCMTT8603LOW;
				pvPut(HCMTT8603LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8604LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8604LOWArray)/sizeof(HCMTT8604LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8604LOWArray[index] = HCMTT8604LOW;
				pvPut(HCMTT8604LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8209LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8209LOWArray)/sizeof(HCMTT8209LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8209LOWArray[index] = HCMTT8209LOW;
				pvPut(HCMTT8209LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8210LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8210LOWArray)/sizeof(HCMTT8210LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8210LOWArray[index] = HCMTT8210LOW;
				pvPut(HCMTT8210LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8211LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8211LOWArray)/sizeof(HCMTT8211LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8211LOWArray[index] = HCMTT8211LOW;
				pvPut(HCMTT8211LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8212LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8212LOWArray)/sizeof(HCMTT8212LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8212LOWArray[index] = HCMTT8212LOW;
				pvPut(HCMTT8212LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8213LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8213LOWArray)/sizeof(HCMTT8213LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8213LOWArray[index] = HCMTT8213LOW;
				pvPut(HCMTT8213LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8214LOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8214LOWArray)/sizeof(HCMTT8214LOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8214LOWArray[index] = HCMTT8214LOW;
				pvPut(HCMTT8214LOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401VLOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401VLOWArray)/sizeof(HCMEH8401VLOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401VLOWArray[index] = HCMEH8401VLOW;
				pvPut(HCMEH8401VLOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401WLOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401WLOWArray)/sizeof(HCMEH8401WLOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401WLOWArray[index] = HCMEH8401WLOW;
				pvPut(HCMEH8401WLOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402VLOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402VLOWArray)/sizeof(HCMEH8402VLOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402VLOWArray[index] = HCMEH8402VLOW;
				pvPut(HCMEH8402VLOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402WLOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402WLOWArray)/sizeof(HCMEH8402WLOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402WLOWArray[index] = HCMEH8402WLOW;
				pvPut(HCMEH8402WLOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201VLOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201VLOWArray)/sizeof(HCMEH8201VLOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201VLOWArray[index] = HCMEH8201VLOW;
				pvPut(HCMEH8201VLOWArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201WLOW))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201WLOWArray)/sizeof(HCMEH8201WLOWArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201WLOWArray[index] = HCMEH8201WLOW;
				pvPut(HCMEH8201WLOWArray[index], ASYNC);
			}
		}state GrpControls
  
		when(efTestAndClear(evHVBxPT7501LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7501LOLOArray)/sizeof(HVBxPT7501LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7501LOLOArray[index] = HVBxPT7501LOLO;
				pvPut(HVBxPT7501LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7502LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7502LOLOArray)/sizeof(HVBxPT7502LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7502LOLOArray[index] = HVBxPT7502LOLO;
				pvPut(HVBxPT7502LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7503LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7503LOLOArray)/sizeof(HVBxPT7503LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7503LOLOArray[index] = HVBxPT7503LOLO;
				pvPut(HVBxPT7503LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7401LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7401LOLOArray)/sizeof(HVBxPT7401LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7401LOLOArray[index] = HVBxPT7401LOLO;
				pvPut(HVBxPT7401LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7301LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7301LOLOArray)/sizeof(HVBxPT7301LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7301LOLOArray[index] = HVBxPT7301LOLO;
				pvPut(HVBxPT7301LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7201LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7201LOLOArray)/sizeof(HVBxPT7201LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7201LOLOArray[index] = HVBxPT7201LOLO;
				pvPut(HVBxPT7201LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7102LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7102LOLOArray)/sizeof(HVBxPT7102LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7102LOLOArray[index] = HVBxPT7102LOLO;
				pvPut(HVBxPT7102LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7202LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7202LOLOArray)/sizeof(HVBxPT7202LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7202LOLOArray[index] = HVBxPT7202LOLO;
				pvPut(HVBxPT7202LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxPT7203LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxPT7203LOLOArray)/sizeof(HVBxPT7203LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxPT7203LOLOArray[index] = HVBxPT7203LOLO;
				pvPut(HVBxPT7203LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7501LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7501LOLOArray)/sizeof(HVBxTT7501LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7501LOLOArray[index] = HVBxTT7501LOLO;
				pvPut(HVBxTT7501LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7502LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7502LOLOArray)/sizeof(HVBxTT7502LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7502LOLOArray[index] = HVBxTT7502LOLO;
				pvPut(HVBxTT7502LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7503LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7503LOLOArray)/sizeof(HVBxTT7503LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7503LOLOArray[index] = HVBxTT7503LOLO;
				pvPut(HVBxTT7503LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7504LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7504LOLOArray)/sizeof(HVBxTT7504LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7504LOLOArray[index] = HVBxTT7504LOLO;
				pvPut(HVBxTT7504LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7401LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7401LOLOArray)/sizeof(HVBxTT7401LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7401LOLOArray[index] = HVBxTT7401LOLO;
				pvPut(HVBxTT7401LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7301LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7301LOLOArray)/sizeof(HVBxTT7301LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7301LOLOArray[index] = HVBxTT7301LOLO;
				pvPut(HVBxTT7301LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHVBxTT7201LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HVBxTT7201LOLOArray)/sizeof(HVBxTT7201LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HVBxTT7201LOLOArray[index] = HVBxTT7201LOLO;
				pvPut(HVBxTT7201LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8501LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8501LOLOArray)/sizeof(HCMPT8501LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8501LOLOArray[index] = HCMPT8501LOLO;
				pvPut(HCMPT8501LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8301LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8301LOLOArray)/sizeof(HCMPT8301LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8301LOLOArray[index] = HCMPT8301LOLO;
				pvPut(HCMPT8301LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8201LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8201LOLOArray)/sizeof(HCMPT8201LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8201LOLOArray[index] = HCMPT8201LOLO;
				pvPut(HCMPT8201LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8202LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8202LOLOArray)/sizeof(HCMPT8202LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8202LOLOArray[index] = HCMPT8202LOLO;
				pvPut(HCMPT8202LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8203LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8203LOLOArray)/sizeof(HCMPT8203LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8203LOLOArray[index] = HCMPT8203LOLO;
				pvPut(HCMPT8203LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8101LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8101LOLOArray)/sizeof(HCMPT8101LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8101LOLOArray[index] = HCMPT8101LOLO;
				pvPut(HCMPT8101LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8102LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8102LOLOArray)/sizeof(HCMPT8102LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8102LOLOArray[index] = HCMPT8102LOLO;
				pvPut(HCMPT8102LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8104LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8104LOLOArray)/sizeof(HCMPT8104LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8104LOLOArray[index] = HCMPT8104LOLO;
				pvPut(HCMPT8104LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8112LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8112LOLOArray)/sizeof(HCMPT8112LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8112LOLOArray[index] = HCMPT8112LOLO;
				pvPut(HCMPT8112LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8103LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8103LOLOArray)/sizeof(HCMPT8103LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8103LOLOArray[index] = HCMPT8103LOLO;
				pvPut(HCMPT8103LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMPT8113LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMPT8113LOLOArray)/sizeof(HCMPT8113LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMPT8113LOLOArray[index] = HCMPT8113LOLO;
				pvPut(HCMPT8113LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8601LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8601LOLOArray)/sizeof(HCMTT8601LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8601LOLOArray[index] = HCMTT8601LOLO;
				pvPut(HCMTT8601LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8602LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8602LOLOArray)/sizeof(HCMTT8602LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8602LOLOArray[index] = HCMTT8602LOLO;
				pvPut(HCMTT8602LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8501LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8501LOLOArray)/sizeof(HCMTT8501LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8501LOLOArray[index] = HCMTT8501LOLO;
				pvPut(HCMTT8501LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8502LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8502LOLOArray)/sizeof(HCMTT8502LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8502LOLOArray[index] = HCMTT8502LOLO;
				pvPut(HCMTT8502LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8401LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8401LOLOArray)/sizeof(HCMTT8401LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8401LOLOArray[index] = HCMTT8401LOLO;
				pvPut(HCMTT8401LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8402LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8402LOLOArray)/sizeof(HCMTT8402LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8402LOLOArray[index] = HCMTT8402LOLO;
				pvPut(HCMTT8402LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8404LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8404LOLOArray)/sizeof(HCMTT8404LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8404LOLOArray[index] = HCMTT8404LOLO;
				pvPut(HCMTT8404LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8202LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8202LOLOArray)/sizeof(HCMTT8202LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8202LOLOArray[index] = HCMTT8202LOLO;
				pvPut(HCMTT8202LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8203LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8203LOLOArray)/sizeof(HCMTT8203LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8203LOLOArray[index] = HCMTT8203LOLO;
				pvPut(HCMTT8203LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8204LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8204LOLOArray)/sizeof(HCMTT8204LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8204LOLOArray[index] = HCMTT8204LOLO;
				pvPut(HCMTT8204LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8205LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8205LOLOArray)/sizeof(HCMTT8205LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8205LOLOArray[index] = HCMTT8205LOLO;
				pvPut(HCMTT8205LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8206LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8206LOLOArray)/sizeof(HCMTT8206LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8206LOLOArray[index] = HCMTT8206LOLO;
				pvPut(HCMTT8206LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8207LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8207LOLOArray)/sizeof(HCMTT8207LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8207LOLOArray[index] = HCMTT8207LOLO;
				pvPut(HCMTT8207LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8208LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8208LOLOArray)/sizeof(HCMTT8208LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8208LOLOArray[index] = HCMTT8208LOLO;
				pvPut(HCMTT8208LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8401LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8401LOLOArray)/sizeof(HCMLT8401LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8401LOLOArray[index] = HCMLT8401LOLO;
				pvPut(HCMLT8401LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMLT8201LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMLT8201LOLOArray)/sizeof(HCMLT8201LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMLT8201LOLOArray[index] = HCMLT8201LOLO;
				pvPut(HCMLT8201LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8603LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8603LOLOArray)/sizeof(HCMTT8603LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8603LOLOArray[index] = HCMTT8603LOLO;
				pvPut(HCMTT8603LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8604LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8604LOLOArray)/sizeof(HCMTT8604LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8604LOLOArray[index] = HCMTT8604LOLO;
				pvPut(HCMTT8604LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8209LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8209LOLOArray)/sizeof(HCMTT8209LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8209LOLOArray[index] = HCMTT8209LOLO;
				pvPut(HCMTT8209LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8210LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8210LOLOArray)/sizeof(HCMTT8210LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8210LOLOArray[index] = HCMTT8210LOLO;
				pvPut(HCMTT8210LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8211LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8211LOLOArray)/sizeof(HCMTT8211LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8211LOLOArray[index] = HCMTT8211LOLO;
				pvPut(HCMTT8211LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8212LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8212LOLOArray)/sizeof(HCMTT8212LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8212LOLOArray[index] = HCMTT8212LOLO;
				pvPut(HCMTT8212LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8213LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8213LOLOArray)/sizeof(HCMTT8213LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8213LOLOArray[index] = HCMTT8213LOLO;
				pvPut(HCMTT8213LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMTT8214LOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMTT8214LOLOArray)/sizeof(HCMTT8214LOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMTT8214LOLOArray[index] = HCMTT8214LOLO;
				pvPut(HCMTT8214LOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401VLOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401VLOLOArray)/sizeof(HCMEH8401VLOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401VLOLOArray[index] = HCMEH8401VLOLO;
				pvPut(HCMEH8401VLOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8401WLOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8401WLOLOArray)/sizeof(HCMEH8401WLOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8401WLOLOArray[index] = HCMEH8401WLOLO;
				pvPut(HCMEH8401WLOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402VLOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402VLOLOArray)/sizeof(HCMEH8402VLOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402VLOLOArray[index] = HCMEH8402VLOLO;
				pvPut(HCMEH8402VLOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8402WLOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8402WLOLOArray)/sizeof(HCMEH8402WLOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8402WLOLOArray[index] = HCMEH8402WLOLO;
				pvPut(HCMEH8402WLOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201VLOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201VLOLOArray)/sizeof(HCMEH8201VLOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201VLOLOArray[index] = HCMEH8201VLOLO;
				pvPut(HCMEH8201VLOLOArray[index], ASYNC);
			}
		}state GrpControls

		when(efTestAndClear(evHCMEH8201WLOLO))
		{
			int index = 0;
			int pvcnt = sizeof(HCMEH8201WLOLOArray)/sizeof(HCMEH8201WLOLOArray[0]);
			for(index = 0; index < pvcnt;index++) {
				HCMEH8201WLOLOArray[index] = HCMEH8201WLOLO;
				pvPut(HCMEH8201WLOLOArray[index], ASYNC);
			}
		}state GrpControls
 
	}

	state GrpControls
	{

		when(pvArrayPutComplete(HVBxPT7501HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7502HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7503HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7401HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7301HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7201HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7102HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7202HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7203HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7501HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7502HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7503HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7504HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7401HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7301HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7201HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8501HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8301HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8201HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8202HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8203HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8101HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8102HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8104HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8112HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8103HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8113HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8601HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8602HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8501HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8502HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8401HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8402HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8404HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8202HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8203HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8204HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8205HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8206HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8207HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8208HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8401HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8201HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8603HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8604HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8209HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8210HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8211HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8212HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8213HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8214HIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401VHIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401WHIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402VHIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402WHIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201VHIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201WHIHIArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7501HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7502HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7503HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7401HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7301HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7201HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7102HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7202HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7203HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7501HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7502HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7503HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7504HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7401HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7301HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7201HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8501HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8301HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8201HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8202HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8203HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8101HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8102HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8104HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8112HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8103HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8113HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8601HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8602HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8501HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8502HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8401HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8402HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8404HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8202HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8203HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8204HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8205HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8206HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8207HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8208HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8401HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8201HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8603HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8604HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8209HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8210HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8211HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8212HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8213HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8214HIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401VHIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401WHIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402VHIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402WHIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201VHIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201WHIGHArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7501LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7502LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7503LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7401LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7301LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7201LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7102LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7202LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7203LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7501LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7502LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7503LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7504LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7401LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7301LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7201LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8501LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8301LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8201LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8202LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8203LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8101LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8102LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8104LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8112LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8103LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8113LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8601LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8602LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8501LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8502LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8401LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8402LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8404LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8202LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8203LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8204LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8205LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8206LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8207LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8208LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8401LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8201LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8603LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8604LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8209LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8210LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8211LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8212LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8213LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8214LOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401VLOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401WLOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402VLOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402WLOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201VLOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201WLOWArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7501LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7502LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7503LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7401LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7301LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7201LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7102LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7202LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxPT7203LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7501LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7502LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7503LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7504LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7401LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7301LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HVBxTT7201LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8501LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8301LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8201LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8202LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8203LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8101LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8102LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8104LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8112LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8103LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMPT8113LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8601LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8602LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8501LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8502LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8401LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8402LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8404LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8202LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8203LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8204LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8205LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8206LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8207LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8208LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8401LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMLT8201LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8603LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8604LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8209LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8210LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8211LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8212LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8213LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMTT8214LOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401VLOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8401WLOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402VLOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8402WLOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201VLOLOArray,TRUE) )
		{
		}state WaitEvent

		when(pvArrayPutComplete(HCMEH8201WLOLOArray,TRUE) )
		{
		}state WaitEvent

	}
}
