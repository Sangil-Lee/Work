#!/bin/bash
# Bash Menu Script Example

##PS3='Please enter your choice: '
##options=("alarm" "alsu" "raon" "Quit")
##select opt in "${options[@]}"
##do
##    case $opt in
##        "alarm")
##            echo "you chose choice 1"
##			break
##            ;;
##        "alsu")
##            echo "Moving ALS-U working directory"
##			cd $HOME/epics/1.1.0/debian-12/7.0.7
##			break
##            ;;
##        "raon")
##            echo "Moving RAON working directory"
##			source $HOME/epics/7.0.8/setEpicsEnv.sh
##			cd $HOME/epics/7.0.8/siteApps
##			break
##            ;;
##        "Quit")
##            break
##            ;;
##        *) echo "invalid option $REPLY";;
##    esac
##done
cur_index=0
function choose_from_menu() {
    local prompt="$1" outvar="$2"
    shift
    shift
    local options=("$@") cur=0 count=${#options[@]} index=0
    local esc=$(echo -en "\e") # cache ESC as test doesn't allow esc codes
    printf "$prompt\n"
    while true
    do
        # list all options (option list is zero-based)
        index=0 
        for o in "${options[@]}"
        do
            if [ "$index" == "$cur" ]
            then echo -e " >\e[7m$o\e[0m" # mark & highlight the current option
            else echo "  $o"
            fi
            (( index++ ))
        done
        read -s -n3 key # wait for user to key in arrows or ENTER
        if [[ $key == $esc[A ]] # up arrow
        then (( cur-- )); (( cur < 0 )) && (( cur = 0 ))
        elif [[ $key == $esc[B ]] # down arrow
        then (( cur++ )); (( cur >= count )) && (( cur = count - 1 ))
        elif [[ $key == "" ]] # nothing, i.e the read delimiter - ENTER
        then break
        fi
        echo -en "\e[${count}A" # go up to the beginning to re-render
    done
	cur_index=$cur
    # export the selection to the requested output variable
    printf -v $outvar "${options[$cur]}"
}

selections=(
"$HOME/epics/1.1.0/debian-12/7.0.7"
"$HOME/epics/7.0.8/siteApps"
"Selection C"
)

echo "$choose_from_menu"
choose_from_menu "Please make a choice:" selected_choice "${selections[@]}"
echo "Cur Index:  $cur_index"
echo "Selected choice:  $selected_choice"
case $cur_index in
    "0")
        echo "Moving ALSU working directory"
        ;;
    "1")
        echo "Moving RAON working directory"
		#source $HOME/epics/7.0.8/setEpicsEnv.sh
        ;;
    *) echo "invalid option $REPLY";;
esac

cd $selected_choice
