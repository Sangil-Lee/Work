#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass beamer
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 2
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue,citecolor=blue,urlcolor=blue,filecolor=blue"
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
MRF Timing System IOC Status
\end_layout

\begin_layout Author
M Davidsaver
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

,J Shah
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

,E Bjorklund
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
NSLSII Brookhaven National Lab
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

LANCSE Los Alamos National Lab
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Date
EPICS Collaboration Meeting Fall '11
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Syntax for dbd files
\end_layout

\begin_layout Plain Layout


\backslash
lstdefinelanguage{dbd}
\end_layout

\begin_layout Plain Layout

 {morekeywords={record,field},
\end_layout

\begin_layout Plain Layout

  sensitive,
\end_layout

\begin_layout Plain Layout

  morecomment=[l]{
\backslash
#},
\end_layout

\begin_layout Plain Layout

  morecomment=[s]{
\backslash
$(}{)},
\end_layout

\begin_layout Plain Layout

  morestring=[b]{"}
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

% Listing environment defaults
\end_layout

\begin_layout Plain Layout


\backslash
lstset{language=dbd,
\end_layout

\begin_layout Plain Layout

  stringstyle={
\backslash
textbf},
\end_layout

\begin_layout Plain Layout

  basicstyle={
\backslash
scriptsize},
\end_layout

\begin_layout Plain Layout

  commentstyle={
\backslash
emph},
\end_layout

\begin_layout Plain Layout

  %numbers=left,
\end_layout

\begin_layout Plain Layout

  tabsize=4
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Outline
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Timing Background
\end_layout

\begin_layout BeginFrame
Terms
\end_layout

\begin_layout Itemize
Event
\end_layout

\begin_deeper
\begin_layout Itemize
A point in time.
 Often defined in relation to another point.
\end_layout

\end_deeper
\begin_layout Itemize
Code
\end_layout

\begin_deeper
\begin_layout Itemize
An 8-bit number used to identify an event
\end_layout

\end_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_deeper
\begin_layout Itemize
Event Generator - Broadcasts event codes
\end_layout

\end_deeper
\begin_layout Itemize
EVR
\end_layout

\begin_deeper
\begin_layout Itemize
Event Receiver - Decodes events and takes local actions
\end_layout

\end_deeper
\begin_layout Itemize
MRF
\end_layout

\begin_deeper
\begin_layout Itemize
Micro Research Finland Oy - 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mrf.fi/
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout BeginFrame
Architecture
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.3
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{Components}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_layout Itemize
EVR
\end_layout

\begin_layout Itemize
Repeater
\end_layout

\begin_deeper
\begin_layout Itemize
Hub
\end_layout

\end_deeper
\begin_layout Itemize
Concentrator
\end_layout

\begin_deeper
\begin_layout Itemize
Switch
\end_layout

\end_deeper
\end_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.7
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/mrf-overview.png
	width 120col%
	BoundingBox 0bp 0bp 539bp 307bp

\end_inset


\end_layout

\end_deeper
\begin_layout BeginFrame
Synchronization
\end_layout

\begin_layout Itemize
Generator (EVG) accepts input from external RF clock (no PLL)
\end_layout

\begin_layout Itemize
8b10 encoding (16-bit frame)
\end_layout

\begin_deeper
\begin_layout Itemize
Event link bit rate 20x event code rate
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
500 MHz RF
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit

\begin_inset Formula $\div4\,=$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
125 MHz event
\begin_inset Formula $\times20\,=$
\end_inset

2.5 GHz link
\end_layout

\end_deeper
\begin_layout Itemize
8-bit event code, 8-bit data (Distributed Bus)
\end_layout

\begin_layout Itemize
Each Receiver (EVR) has a PLL tuned 
\begin_inset Formula $\pm20\: ppm$
\end_inset

(10 kHz @ 500MHz)
\end_layout

\begin_layout Itemize
Dynamic tuning possible
\end_layout

\begin_layout BeginFrame
Global Time Distribution
\end_layout

\begin_layout Itemize
Timestamp in two parts: seconds+counter
\end_layout

\begin_layout Itemize
Seconds distrubuted as 32-bit unsigned integer
\end_layout

\begin_layout Itemize
Counter driven by Event clock, Distributed Bus bit 2, or event code 0x7d
\end_layout

\begin_layout Itemize
One event code loads seconds and zeros counter
\end_layout

\begin_layout Itemize
Use PPS from GPS receiver
\end_layout

\begin_layout BeginFrame
Use for NSLSII
\end_layout

\begin_layout Itemize
EVG in main computer room with fanouts to all 30 cells, RF, and injector
 buildings.
\end_layout

\begin_layout Itemize
All pulls have same length.
\end_layout

\begin_layout Itemize
Each cell has additional local fanouts
\end_layout

\begin_layout Itemize
VME-EVRRF-230 is standard equipment.
\end_layout

\begin_deeper
\begin_layout Itemize
TTL for general triggers
\end_layout

\begin_layout Itemize
CML for special cases.
 Output fill pattern.
 Trigger kickers.
\end_layout

\end_deeper
\begin_layout Itemize
cPCI-EVRTG-300 + GUNRC-300 to trigger electron gun.
\end_layout

\begin_layout Itemize
PMC-EVR-230 in some Linux servers (softIoc hosts)
\end_layout

\begin_deeper
\begin_layout Itemize
Use PMC to PCIe carrier board (transparent to software)
\end_layout

\begin_layout Itemize
More precise timestamps
\end_layout

\begin_layout Itemize
One local TTL input
\end_layout

\end_deeper
\begin_layout Section
Current Developments
\end_layout

\begin_layout BeginFrame
mrfioc2
\end_layout

\begin_layout Itemize
Features:
\end_layout

\begin_deeper
\begin_layout Itemize
Only Base recordtypes
\end_layout

\begin_layout Itemize
As dynamic as possible
\end_layout

\begin_layout Itemize
PCI support via devLib2
\end_layout

\end_deeper
\begin_layout Itemize
EVR
\end_layout

\begin_deeper
\begin_layout Itemize
Dynamic mapping (Mapping RAM)
\end_layout

\begin_layout Itemize
Data buffer Tx/Rx (Compatible with 1.x)
\end_layout

\end_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_deeper
\begin_layout Itemize
Fully modifible event sequence
\end_layout

\begin_layout Itemize
Timestamp distribution w/o special hardware
\end_layout

\end_deeper
\begin_layout Itemize
Documentation
\end_layout

\begin_layout BeginFrame
Current Status
\end_layout

\begin_layout Itemize
EVR
\end_layout

\begin_deeper
\begin_layout Itemize
Working with prerelease firmware
\end_layout

\begin_layout Itemize
Tested with VME64x, cPCI, and PMC
\end_layout

\end_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_deeper
\begin_layout Itemize
VME model working
\end_layout

\begin_layout Itemize
cPCI model not supported (no access to hardware)
\end_layout

\end_deeper
\begin_layout Itemize
Deployed at BNL for NSLSII teststands (LINAC, BPMs, and PS controllers)
\end_layout

\begin_layout Itemize
Version 2.0.0 released
\end_layout

\begin_layout Section
In Depth
\end_layout

\begin_layout BeginFrame
Receiver Hardware
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/mrf-evr-blocks.svg
	width 100col%

\end_inset


\end_layout

\begin_layout BeginFrame
Receiver Hardware
\end_layout

\begin_layout Itemize
Programmable pulse generator
\end_layout

\begin_deeper
\begin_layout Itemize
Triggered by event code(s)
\end_layout

\end_deeper
\begin_layout Itemize
Phase locked frequency source (
\begin_inset Formula $F_{evt}/i$
\end_inset

)
\end_layout

\begin_layout Itemize
Global timestamp receiver
\end_layout

\begin_deeper
\begin_layout Itemize
Wall clock
\end_layout

\begin_layout Itemize
Event code # received
\end_layout

\begin_layout Itemize
Local input
\end_layout

\end_deeper
\begin_layout Itemize
Local inputs create timestamps or send upstream
\end_layout

\begin_deeper
\begin_layout Itemize
Available as: VME, cPCI, and PMC
\end_layout

\end_deeper
\begin_layout BeginFrame
EVR Mapping Ram
\end_layout

\begin_layout Itemize
Many-to-many mapping of event code to function
\end_layout

\begin_deeper
\begin_layout Itemize
Trigger pulse generator
\end_layout

\begin_layout Itemize
Reset prescalers
\end_layout

\begin_layout Itemize
Timestamp functions
\end_layout

\end_deeper
\begin_layout Itemize
Most cases 1-to-1 (code 17 triggers pulse gen.
 4)
\end_layout

\begin_layout Itemize
Some are small-to-small
\end_layout

\begin_layout Itemize
Few are many-to-many (FIFO, Event log)
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
As of 1.6.5 Lyx doesn't handle fragile frames.
 This is needed to make the lstlisting environment work correctly.
 Doing the frame manually compiles, but may break in unexpected ways...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{frame}[fragile]{Mapping Records}
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.4
\backslash
textwidth
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
One record per pairing
\end_layout

\begin_layout Itemize
Default DB maps 3 events
\end_layout

\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.6
\backslash
textwidth
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

record(longout, "pul4:trig1") {
\end_layout

\begin_layout Plain Layout

	field(DTYP, "EVR Pulser Mapping")
\end_layout

\begin_layout Plain Layout

	field( OUT, "@OBJ=EVR1:Pul0,Func=Trig")
\end_layout

\begin_layout Plain Layout

	field( VAL, "0x40")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

record(longout, "blk1") {
\end_layout

\begin_layout Plain Layout

	field(DTYP, "EVR Mapping")
\end_layout

\begin_layout Plain Layout

	field( OUT, "@OBJ=EVR1,Func=Blink")
\end_layout

\begin_layout Plain Layout

	field( VAL, "0x40")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Data Buffer
\end_layout

\begin_layout Itemize
Buffer reception in two stage.
 High priority thread reads from hardware places in FIFO.
 Lower priority thread takes from FIFO and runs callback list.
\end_layout

\begin_layout Itemize
Waveform device support to receive.
 Does endian conversion for multibyte types.
\end_layout

\begin_layout Itemize
Plan to use this to distribute fill pattern for NSLSII.
\end_layout

\begin_layout BeginFrame
Event FIFO Buffer
\end_layout

\begin_layout Itemize
Arrival of an 
\begin_inset Quotes eld
\end_inset

interesting
\begin_inset Quotes erd
\end_inset

 event is recorded in a hardware FIFO buffer.
\end_layout

\begin_layout Itemize
I/O Intr scan and callback list.
\end_layout

\begin_layout Itemize
longin device support to process on event reception.
\end_layout

\begin_layout Itemize
Throttling to prevent too fast events from taking 100% of CPU.
 Limit buffered events to a given rate.
 Also, do not run callback list until all previous processing is complete.
\end_layout

\begin_layout BeginFrame
Timestamp Validation
\end_layout

\begin_layout Itemize
Must prevent invalid timestamps from propogating into generalTime.
\end_layout

\begin_layout Itemize
Several times a misconfiguration caused one second tick to be sent too often,
 or out of sync.
\end_layout

\begin_layout Itemize
Firmware bug (now fixed) caused occasional invalid reads.
\end_layout

\begin_layout Itemize
EVR must receive 5 sequential updates before it will start using time.
 Invalid if out of order time is received.
\end_layout

\begin_layout BeginFrame
CML/GTX Pattern Outputs
\end_layout

\begin_layout Itemize
Higher resolution.
 20x EVRRF, 40x EVRTG (effective 8x)
\end_layout

\begin_layout Itemize
Output multi-bit patterns
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/evr-cml.jpeg
	width 100col%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout BeginFrame
Generator Hardware
\end_layout

\begin_layout Itemize
Send periodic event and/or data
\end_layout

\begin_layout Itemize
Send event sequences
\end_layout

\begin_deeper
\begin_layout Itemize
Preset list of times and codes (eg.
 linac shot or booster ramp)
\end_layout

\end_deeper
\begin_layout Itemize
Currently VME only, in future cPCI only.
\end_layout

\begin_layout BeginFrame
Timestamp
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename EVG_Timestamping.JPG
	width 100col%

\end_inset


\end_layout

\begin_layout Itemize
Synchronize to GPS without custom electronics.
\end_layout

\begin_layout Itemize
Off the shelf GPS receiver with NTP server and 1Hz TTL output.
\end_layout

\begin_layout Itemize
Buffered with Rubidium oscillator for high precision.
 Continues running if GPS 1Hz is lost.
\end_layout

\begin_layout Itemize
1Hz send special event code and interrupts CPU
\end_layout

\begin_deeper
\begin_layout Itemize
Special event code 0x7D marks start of a second (hardware only)
\end_layout

\begin_layout Itemize
Interrupt sends next second bit by bit.
 POSIX time by default.
\end_layout

\end_deeper
\begin_layout BeginFrame
EVG Sequences
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Example.
 Timeline for injection/top off
\end_layout

\begin_deeper
\begin_layout Itemize
Start insertion kicker ramp up
\end_layout

\begin_deeper
\begin_layout Itemize
wait 100us
\end_layout

\end_deeper
\begin_layout Itemize
Trigger Klystron modulators
\end_layout

\begin_deeper
\begin_layout Itemize
wait 20us
\end_layout

\end_deeper
\begin_layout Itemize
Trigger Klystron
\end_layout

\begin_deeper
\begin_layout Itemize
wait 500ns
\end_layout

\end_deeper
\begin_layout Itemize
trigger 
\begin_inset Formula $e^{-}$
\end_inset

gun
\end_layout

\begin_deeper
\begin_layout Itemize
wait 10us
\end_layout

\end_deeper
\begin_layout Itemize
Start insertion kicker ramp down
\end_layout

\end_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delay
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12500
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2500
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x25
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
61
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1250
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x12
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Columns
Note: This is how it looks in hardware
\end_layout

\begin_layout BeginFrame
Sequence Use Cases
\end_layout

\begin_layout Itemize
NSLSII Booster is 
\begin_inset Formula $\frac{1}{5}$
\end_inset

 diameter or Storage ring.
\end_layout

\begin_layout Itemize
Filling/top off process involves multiple injections
\end_layout

\begin_layout Itemize
Need to control how many bunches and where they go
\end_layout

\begin_layout Itemize
Use timing system to select which sector to fill
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Fill Manager
\begin_inset Quotes erd
\end_inset

 process sets booster extraction delay
\end_layout

\begin_layout Itemize
Move 
\begin_inset Formula $\geq1$
\end_inset

 events
\end_layout

\end_deeper
\begin_layout Itemize
Allow programatic manipulation w/o complicating client(s)
\end_layout

\begin_layout BeginFrame
Sequence Representation
\end_layout

\begin_layout Itemize
2 waveforms (codes and times)
\end_layout

\begin_deeper
\begin_layout Itemize
Clients have to know array index
\end_layout

\begin_layout Itemize
Ordering
\end_layout

\end_deeper
\begin_layout Itemize
Trigger source/mode
\end_layout

\begin_layout Itemize
Control (commit, (un)load, enable/disable)
\end_layout

\begin_layout BeginFrame
Sequence Management
\end_layout

\begin_layout Itemize
Manage user interactions with sequence ram
\end_layout

\begin_layout Itemize
Current hardware supports two independent sequences.
\end_layout

\begin_layout Itemize
Single shot or repeating
\end_layout

\begin_layout Itemize
Don't modify while running
\end_layout

\begin_layout BeginFrame
Model
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename evg-seq.dia
	width 100col%

\end_inset


\end_layout

\begin_layout BeginFrame
Sequencer Workflow
\end_layout

\begin_layout Enumerate
Modify scratch sequence
\end_layout

\begin_deeper
\begin_layout Itemize
DB/CA operations of individual records (synchronous device supports)
\end_layout

\begin_layout Itemize
CA put w/ callback
\end_layout

\end_deeper
\begin_layout Enumerate
Commit
\end_layout

\begin_deeper
\begin_layout Itemize
Single DB/CA operation
\end_layout

\begin_layout Itemize
Updates complete sequence
\end_layout

\end_deeper
\begin_layout Enumerate
Sync
\end_layout

\begin_deeper
\begin_layout Itemize
When loaded, or at end of run if already loaded
\end_layout

\begin_layout Itemize
Automatic
\end_layout

\end_deeper
\begin_layout BeginFrame
Interface
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset Graphics
	filename images/evg-softseq.jpeg
	width 90col%

\end_inset


\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset Graphics
	filename images/evg-softseq2.jpeg
	width 90col%

\end_inset


\end_layout

\begin_layout BeginFrame
Sequence Control
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset Graphics
	filename images/evg-softseq.jpeg
	width 90col%

\end_inset


\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Run Mode
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Single
\end_layout

\begin_layout Itemize
Disarm after one run
\end_layout

\begin_layout Itemize

\series bold
Normal
\end_layout

\begin_layout Itemize
rearm after each run
\end_layout

\begin_layout Itemize

\series bold
Automatic
\end_layout

\begin_layout Itemize
continuous run
\end_layout

\end_deeper
\begin_layout Itemize
Trigger Source
\end_layout

\begin_deeper
\begin_layout Itemize
For Single and Normal
\end_layout

\end_deeper
\begin_layout Itemize
Units
\end_layout

\begin_deeper
\begin_layout Itemize
Meaning of time delay
\end_layout

\end_deeper
\begin_layout Itemize
Commit
\end_layout

\begin_deeper
\begin_layout Itemize
Propogate changes to hardware
\end_layout

\end_deeper
\end_deeper
\begin_layout BeginFrame
Sequence Control (2)
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset Graphics
	filename images/evg-softseq.jpeg
	width 90col%

\end_inset


\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Load/Unload
\end_layout

\begin_deeper
\begin_layout Itemize
(De)Allocate hardware resources to run this sequence
\end_layout

\end_deeper
\begin_layout Itemize
Enabled
\end_layout

\begin_deeper
\begin_layout Itemize
Trigger permit
\end_layout

\end_deeper
\begin_layout Itemize
Disable
\end_layout

\begin_deeper
\begin_layout Itemize
Prevent further triggers.
 If already triggered, run to completion
\end_layout

\end_deeper
\begin_layout Itemize
Pause
\end_layout

\begin_deeper
\begin_layout Itemize
Stop running sequence w/o reset.
\end_layout

\end_deeper
\begin_layout Itemize
Abort
\end_layout

\begin_deeper
\begin_layout Itemize
Immediately halt
\end_layout

\end_deeper
\end_deeper
\begin_layout BeginFrame
Interface
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
Specify sequence.
 Units of Timestamp defined for each sequence.
\end_layout

\begin_layout Columns
Note: Pictured is a small PyQt+cothreads script to allow editing sequence
 waveforms in a table.
\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status open

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset Graphics
	filename images/evg-softseq2.jpeg
	width 90col%

\end_inset


\end_layout

\begin_layout BeginFrame
Demo
\end_layout

\begin_layout Standard
Attempt to run live demo.
\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
