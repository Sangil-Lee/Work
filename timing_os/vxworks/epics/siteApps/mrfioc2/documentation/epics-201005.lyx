#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass beamer
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 2
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue,citecolor=blue,urlcolor=blue,filecolor=blue"
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
MRF Timing System IOC Status
\end_layout

\begin_layout Author
M Davidsaver
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

,J Shah
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

,E Bjorklund
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
NSLSII Brookhaven National Lab
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

LANCSE Los Alamos National Lab
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Date
EPICS Collaboration Meeting Spr '10
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Syntax for dbd files
\end_layout

\begin_layout Plain Layout


\backslash
lstdefinelanguage{dbd}
\end_layout

\begin_layout Plain Layout

 {morekeywords={record,field},
\end_layout

\begin_layout Plain Layout

  sensitive,
\end_layout

\begin_layout Plain Layout

  morecomment=[l]{
\backslash
#},
\end_layout

\begin_layout Plain Layout

  morecomment=[s]{
\backslash
$(}{)},
\end_layout

\begin_layout Plain Layout

  morestring=[b]{"}
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

% Listing environment defaults
\end_layout

\begin_layout Plain Layout


\backslash
lstset{language=dbd,
\end_layout

\begin_layout Plain Layout

  stringstyle={
\backslash
textbf},
\end_layout

\begin_layout Plain Layout

  basicstyle={
\backslash
scriptsize},
\end_layout

\begin_layout Plain Layout

  commentstyle={
\backslash
emph},
\end_layout

\begin_layout Plain Layout

  %numbers=left,
\end_layout

\begin_layout Plain Layout

  tabsize=4
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Outline
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Timing Background
\end_layout

\begin_layout BeginFrame
Terms
\end_layout

\begin_layout Itemize
Event
\end_layout

\begin_deeper
\begin_layout Itemize
A point in time.
 Often defined in relation to another point.
\end_layout

\end_deeper
\begin_layout Itemize
Code
\end_layout

\begin_deeper
\begin_layout Itemize
An 8-bit number used to identify an event
\end_layout

\end_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_deeper
\begin_layout Itemize
Event Generator - Broadcasts event codes
\end_layout

\end_deeper
\begin_layout Itemize
EVR
\end_layout

\begin_deeper
\begin_layout Itemize
Event Receiver - Decodes events and takes local actions
\end_layout

\end_deeper
\begin_layout Itemize
MRF
\end_layout

\begin_deeper
\begin_layout Itemize
Micro Research Finland Oy - 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mrf.fi/
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout BeginFrame
Architecture
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.3
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{Components}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_layout Itemize
EVR
\end_layout

\begin_layout Itemize
Repeater
\end_layout

\begin_deeper
\begin_layout Itemize
Hub
\end_layout

\end_deeper
\begin_layout Itemize
Concentrator
\end_layout

\begin_deeper
\begin_layout Itemize
Switch
\end_layout

\end_deeper
\end_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.7
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/mrf-overview.png
	width 120col%
	BoundingBox 0bp 0bp 539bp 307bp

\end_inset


\end_layout

\end_deeper
\begin_layout BeginFrame
Synchronization
\end_layout

\begin_layout Itemize
Generator (EVG) accepts input from external RF clock (no PLL)
\end_layout

\begin_layout Itemize
8b10 encoding (16-bit frame)
\end_layout

\begin_deeper
\begin_layout Itemize
Event link bit rate 20x event code rate
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
500 MHz RF
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit

\begin_inset Formula $\div4\,=$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
125 MHz event
\begin_inset Formula $\times20\,=$
\end_inset

2.5 GHz link
\end_layout

\end_deeper
\begin_layout Itemize
8-bit event code, 8-bit data (Distributed Bus)
\end_layout

\begin_layout Itemize
Each Receiver (EVR) has a PLL tuned 
\begin_inset Formula $\pm20\: ppm$
\end_inset

(10 kHz @ 500MHz)
\end_layout

\begin_layout Itemize
Dynamic tuning possible
\end_layout

\begin_layout BeginFrame
Global Time Distribution
\end_layout

\begin_layout Itemize
Timestamp in two parts: seconds+counter
\end_layout

\begin_layout Itemize
Seconds distrubuted as 32-bit unsigned integer
\end_layout

\begin_layout Itemize
Counter driven by Event clock, Distributed Bus bit 2, or event code 0x7d
\end_layout

\begin_layout Itemize
One event code loads seconds and zeros counter
\end_layout

\begin_layout Itemize
Use PPS from GPS receiver
\end_layout

\begin_layout Section
Current Developments
\end_layout

\begin_layout BeginFrame
Recent History
\end_layout

\begin_layout Itemize
EPICS support for MRF hardware in use at SLS, Diamond, etc.
\end_layout

\begin_layout Itemize
Designed around custom records (eg, egevent, er, erevent)
\end_layout

\begin_deeper
\begin_layout Itemize
Specific to current register map
\end_layout

\begin_layout Itemize
Not dynamic
\end_layout

\begin_layout Itemize
EVG event sequences inflexible
\end_layout

\end_deeper
\begin_layout Itemize
MRF 
\begin_inset Quotes eld
\end_inset

cleans up
\begin_inset Quotes erd
\end_inset

 register map (make room for future growth)
\end_layout

\begin_layout Itemize
Opportunity to 
\begin_inset Quotes eld
\end_inset

do it right this time
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout BeginFrame
Rev.
 2
\end_layout

\begin_layout Itemize
Goals:
\end_layout

\begin_deeper
\begin_layout Itemize
Only Base recordtypes
\end_layout

\begin_layout Itemize
Be Dynamic
\end_layout

\begin_layout Itemize
PCI support for devLib
\end_layout

\end_deeper
\begin_layout Itemize
EVR
\end_layout

\begin_deeper
\begin_layout Itemize
Take advantage of new hardware features (Mapping Ram)
\end_layout

\end_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_deeper
\begin_layout Itemize
Fully modifible event sequence
\end_layout

\end_deeper
\begin_layout Itemize
Write Documentation!
\end_layout

\begin_layout BeginFrame
Current Status
\end_layout

\begin_layout Itemize
EVR
\end_layout

\begin_deeper
\begin_layout Itemize
Working with prerelease firmware
\end_layout

\begin_layout Itemize
Tested with VME64x and PMC (cPCI should work)
\end_layout

\begin_layout Itemize
TODO
\end_layout

\begin_deeper
\begin_layout Itemize
Timestamp distribution (generalTime)
\end_layout

\begin_layout Itemize
Data buffer Rx/Tx
\end_layout

\begin_layout Itemize
Bumpless reboot
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
EVG
\end_layout

\begin_deeper
\begin_layout Itemize
Starting driver development
\end_layout

\begin_deeper
\begin_layout Itemize
Found some HW bugs
\end_layout

\end_deeper
\begin_layout Itemize
Starting on sequence compilation
\end_layout

\begin_layout Itemize
TODO
\end_layout

\begin_deeper
\begin_layout Itemize
x
\end_layout

\end_deeper
\end_deeper
\begin_layout Section
In Depth
\end_layout

\begin_layout BeginFrame
Receiver Hardware
\end_layout

\begin_layout Itemize
Programmable pulse generator
\end_layout

\begin_deeper
\begin_layout Itemize
Triggered by event code(s)
\end_layout

\end_deeper
\begin_layout Itemize
Phase locked frequency source (
\begin_inset Formula $F_{evt}/i$
\end_inset

)
\end_layout

\begin_layout Itemize
Global timestamp receiver
\end_layout

\begin_deeper
\begin_layout Itemize
Wall clock
\end_layout

\begin_layout Itemize
Event code # received
\end_layout

\begin_layout Itemize
Local input
\end_layout

\end_deeper
\begin_layout Itemize
Local inputs create timestamps or send upstream
\end_layout

\begin_deeper
\begin_layout Itemize
Available as: VME, cPCI, and PMC
\end_layout

\end_deeper
\begin_layout BeginFrame
EVR Mapping Ram
\end_layout

\begin_layout Itemize
Many-to-many mapping of event code to function
\end_layout

\begin_deeper
\begin_layout Itemize
Trigger pulse generator
\end_layout

\begin_layout Itemize
Reset prescalers
\end_layout

\begin_layout Itemize
Timestamp functions
\end_layout

\end_deeper
\begin_layout Itemize
Most cases 1-to-1 (code 17 triggers pulse gen.
 4)
\end_layout

\begin_layout Itemize
Some are small-to-small
\end_layout

\begin_layout Itemize
Few are many-to-many (FIFO, Event log)
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
As of 1.6.5 Lyx doesn't handle fragile frames.
 This is needed to make the lstlisting environment work correctly.
 Doing the frame manually compiles, but may break in unexpected ways...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{frame}[fragile]{Mapping Records}
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.4
\backslash
textwidth
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
One record per pairing
\end_layout

\begin_layout Itemize
Default DB maps 3 events
\end_layout

\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.6
\backslash
textwidth
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

record(longout, "pul4:trig1") {
\end_layout

\begin_layout Plain Layout

	field(DTYP, "EVR Pulser Mapping")
\end_layout

\begin_layout Plain Layout

	field( OUT, "@C=1,I=4,Func=Trig")
\end_layout

\begin_layout Plain Layout

	field( VAL, "0x40")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

record(longout, "blk1") {
\end_layout

\begin_layout Plain Layout

	field(DTYP, "EVR Mapping")
\end_layout

\begin_layout Plain Layout

	field( OUT, "@C=1,Func=Blink")
\end_layout

\begin_layout Plain Layout

	field( VAL, "0x40")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Generator Hardware
\end_layout

\begin_layout Itemize
Send periodic event and/or data
\end_layout

\begin_layout Itemize
Send event sequences
\end_layout

\begin_deeper
\begin_layout Itemize
Preset list of times and codes (eg.
 linac shot or booster ramp)
\end_layout

\end_deeper
\begin_layout Itemize
Currently VME only, in future cPCI only.
\end_layout

\begin_layout BeginFrame
EVG Sequences
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Example.
 Timeline for injection/top off
\end_layout

\begin_deeper
\begin_layout Itemize
Start insertion kicker ramp up
\end_layout

\begin_deeper
\begin_layout Itemize
wait 100us
\end_layout

\end_deeper
\begin_layout Itemize
Trigger Klystron modulators
\end_layout

\begin_deeper
\begin_layout Itemize
wait 20us
\end_layout

\end_deeper
\begin_layout Itemize
Trigger Klystron
\end_layout

\begin_deeper
\begin_layout Itemize
wait 500ns
\end_layout

\end_deeper
\begin_layout Itemize
trigger 
\begin_inset Formula $e^{-}$
\end_inset

gun
\end_layout

\begin_deeper
\begin_layout Itemize
wait 10us
\end_layout

\end_deeper
\begin_layout Itemize
Start insertion kicker ramp down
\end_layout

\end_deeper
\begin_layout Column
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

.5
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delay
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12500
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2500
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x25
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
61
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1250
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0x12
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout BeginFrame
Sequence Use Cases
\end_layout

\begin_layout Itemize
NSLSII Booster is 
\begin_inset Formula $\frac{1}{5}$
\end_inset

 diameter or Storage ring.
\end_layout

\begin_layout Itemize
Filling/top off process involves multiple injections
\end_layout

\begin_layout Itemize
Need to control how many bunches and where they go
\end_layout

\begin_layout Itemize
Use timing system to select which sector to fill
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Fill Manager
\begin_inset Quotes erd
\end_inset

 process sets booster extraction delay
\end_layout

\begin_layout Itemize
Move 
\begin_inset Formula $\geq1$
\end_inset

 events
\end_layout

\end_deeper
\begin_layout Itemize
How to allow programatic manipulation w/o complicating client(s)
\end_layout

\begin_layout BeginFrame
Sequence Representation
\end_layout

\begin_layout Itemize
2 waveforms (codes and times)
\end_layout

\begin_deeper
\begin_layout Itemize
Clients have to know too much (array index)
\end_layout

\begin_layout Itemize
Ordering
\end_layout

\end_deeper
\begin_layout Pause

\end_layout

\begin_layout Itemize
egevent record
\end_layout

\begin_deeper
\begin_layout Itemize
Each event has one record
\end_layout

\begin_layout Itemize
Code and Time are fields
\end_layout

\begin_layout Itemize
Usual problems with record w/ several value fields
\end_layout

\begin_layout Itemize
Hard to implement coarse+fine delay transparently
\end_layout

\end_deeper
\begin_layout Pause

\end_layout

\begin_layout Itemize
Properties
\end_layout

\begin_deeper
\begin_layout Itemize
Two records: Code and Time
\end_layout

\begin_layout Itemize
All the benefits of egevent
\end_layout

\begin_layout Itemize
Only drawback is lots of records
\end_layout

\end_deeper
\begin_layout BeginFrame
Sequence Management
\end_layout

\begin_layout Itemize
Manage user interactions with sequence ram
\end_layout

\begin_layout Itemize
Current hardware supports two independent sequences.
\end_layout

\begin_layout Itemize
Single shot or repeating
\end_layout

\begin_layout Itemize
Don't modify while running
\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
